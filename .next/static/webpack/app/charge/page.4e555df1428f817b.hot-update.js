"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/charge/page",{

/***/ "(app-pages-browser)/./src/app/charge/page.tsx":
/*!*********************************!*\
  !*** ./src/app/charge/page.tsx ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ChargePage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! framer-motion */ \"(app-pages-browser)/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _hooks_useChargingStatus__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../hooks/useChargingStatus */ \"(app-pages-browser)/./hooks/useChargingStatus.ts\");\n/* harmony import */ var _hooks_useBMSData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../hooks/useBMSData */ \"(app-pages-browser)/./hooks/useBMSData.ts\");\n/* harmony import */ var _hooks_useTimerStatus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../hooks/useTimerStatus */ \"(app-pages-browser)/./hooks/useTimerStatus.ts\");\n/* harmony import */ var _components_FODDialog__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../components/FODDialog */ \"(app-pages-browser)/./components/FODDialog.tsx\");\n/* harmony import */ var _components_MissDialog__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../components/MissDialog */ \"(app-pages-browser)/./components/MissDialog.tsx\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n// return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           transition={{ duration: 0.3 }}\n//         >\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             <span className={`${poppins.className} relative`}>\n//               Charging {bmsData.SOC}%\n//             </span>\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       {/* Charging Animation */}\n//       <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button className=\"text-white/90 text-sm font-medium flex items-center\">\n//             {bmsData.SOC + \"% \"} Charged\n//           </button>\n//         </motion.div>\n//       </div>\n//       {/* Charging Information Display */}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Energy: <span>{energyConsumed.toFixed(5)} kWh</span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Time Left:\n//             <span>\n//               {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Current: <span>{bmsData.current?.toFixed(2) ?? \"0.00\"} A</span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Power: <span>{(chargingPower / 1000).toFixed(5)} kW</span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { Poppins } from \"next/font/google\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const { isChargingInitialized } = useChargingStatus();\n//   const { bmsData, chargingPower } = useBMSData();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   // Calculate Energy Consumption in kWh\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       setEnergyConsumed((prev) => prev + (chargingPower / 1000 / 3600)); // kW * time(s)\n//     }\n//   }, [bmsData]);\n//   // Calculate Time Left\n//   useEffect(() => {\n//     const updateTimeLeft = () => {\n//       const now = Date.now();\n//       const endTime = now + 3600000; // Simulated 1 hour charging duration\n//       const difference = endTime - now;\n//       setTimeLeft({\n//         hours: Math.floor(difference / (1000 * 60 * 60)),\n//         minutes: Math.floor((difference % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((difference % (1000 * 60)) / 1000),\n//       });\n//     };\n//     updateTimeLeft();\n//     const interval = setInterval(updateTimeLeft, 1000);\n//     return () => clearInterval(interval);\n//   }, []);\n//   return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           transition={{ duration: 0.3 }}\n//         >\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             <span className={`${poppins.className} relative`}>\n//               Charging {bmsData.SOC}%\n//             </span>\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       {/* Charging Animation */}\n//       <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button className=\"text-white/90 text-sm font-medium flex items-center\">\n//             {bmsData.SOC + \"% \"} Charged\n//           </button>\n//         </motion.div>\n//       </div>\n//       {/* Charging Information Display */}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Energy: <span>{energyConsumed.toFixed(5)} kWh</span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Time Left:\n//             <span>\n//               {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Current: <span>{bmsData.current?.toFixed(2) ?? \"0.00\"} A</span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Power: <span>{(chargingPower / 1000).toFixed(5)} kW</span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { Poppins } from \"next/font/google\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const { isChargingInitialized } = useChargingStatus();\n//   const { bmsData, chargingPower } = useBMSData();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   // ✅ Dynamically accumulate energy every second\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600); // kW * time(s)\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   // ✅ Dynamically calculate Time Left\n//   useEffect(() => {\n//     const updateTimeLeft = () => {\n//       if (bmsData.SOC >= 100) return setTimeLeft({ hours: 0, minutes: 0, seconds: 0 });\n//       const chargingRate = chargingPower > 0 ? bmsData.current * bmsData.voltage : 1; // Avoid division by 0\n//       const remainingEnergy = (100 - bmsData.SOC) * (chargingPower / 100); // Estimate required energy\n//       const estimatedSeconds = remainingEnergy / (chargingRate / 3600); // Energy / Power\n//       setTimeLeft({\n//         hours: Math.floor(estimatedSeconds / 3600),\n//         minutes: Math.floor((estimatedSeconds % 3600) / 60),\n//         seconds: Math.floor(estimatedSeconds % 60),\n//       });\n//     };\n//     updateTimeLeft();\n//     const interval = setInterval(updateTimeLeft, 1000);\n//     return () => clearInterval(interval);\n//   }, [bmsData, chargingPower]);\n//   return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           transition={{ duration: 0.3 }}\n//         >\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             <span className={`${poppins.className} relative`}>\n//               Charging {bmsData.SOC}%\n//             </span>\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       {/* Charging Animation */}\n//       <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button className=\"text-white/90 text-sm font-medium flex items-center\">\n//             {bmsData.SOC + \"% \"} Charged\n//           </button>\n//         </motion.div>\n//       </div>\n//       {/* Charging Information Display */}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Energy: <span>{energyConsumed.toFixed(5)} kWh</span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Time Left:\n//             <span>\n//               {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Current: <span>{bmsData.current?.toFixed(2) ?? \"0.00\"} A</span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Power: <span>{(chargingPower / 1000).toFixed(5)} kW</span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n///timer impilmentiaion|\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { Poppins } from \"next/font/google\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\"; // ✅ Import timer hook\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const { isChargingInitialized } = useChargingStatus();\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus(); // ✅ Fetch the endTime\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   // ✅ Countdown Timer Logic\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now); // Avoid negative values\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         clearInterval(interval);\n//       }\n//     };\n//     updateCountdown(); // Run immediately\n//     const interval = setInterval(updateCountdown, 1000);\n//     return () => clearInterval(interval);\n//   }, [endTime]);\n//   // ✅ Dynamically accumulate energy every second\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   return (\n//     <div className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{ backgroundImage: \"url(/main-bg.png)\", backgroundSize: \"cover\", backgroundPosition: \"center\" }}>\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.3 }}>\n//           <motion.div className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }} animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}>\n//             <span className={`${poppins.className} relative`}>Charging {bmsData.SOC}%</span>\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       {/* Charging Animation */}\n//       <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5, delay: 0.8 }}>\n//           <button className=\"text-white/90 text-sm font-medium flex items-center\">\n//             {bmsData.SOC + \"% \"} Charged\n//           </button>\n//         </motion.div>\n//       </div>\n//       {/* Charging Information Display */}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Energy: <span>{energyConsumed.toFixed(5)} kWh</span>\n//           </motion.div>\n//           {/* ✅ Countdown Timer Display */}\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Time Left:\n//             <span>\n//               {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Current: <span>{bmsData.current?.toFixed(2) ?? \"0.00\"} A</span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Power: <span>{(chargingPower / 1000).toFixed(5)} kW</span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n////stop charging when timer is zero\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { Poppins } from \"next/font/google\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { isChargingInitialized, updateChargingStatus } = useChargingStatus(); // ✅ Use correct setter\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   // ✅ Countdown Timer & Auto Stop Charging\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now); // Prevent negative values\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         console.log(\"🔴 Timer reached zero. Stopping charge...\");\n//         clearInterval(interval);\n//         // ✅ Ensure charging stops before redirecting\n//         updateChargingStatus(false).then(() => {\n//           console.log(\"✅ Charging stopped. Redirecting...\");\n//           // router.push(\"/done\"); // ✅ Now correctly redirects\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown(); // Run immediately\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router]);\n//   // ✅ Dynamically accumulate energy every second\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   return (\n//     <div className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{ backgroundImage: \"url(/main-bg.png)\", backgroundSize: \"cover\", backgroundPosition: \"center\" }}>\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 0.3 }}>\n//           <motion.div className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }} animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}>\n//             <span className={`${poppins.className} relative`}>Charging {bmsData.SOC}%</span>\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       {/* Charging Animation */}\n//       <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }} transition={{ duration: 0.5, delay: 0.8 }}>\n//           <button className=\"text-white/90 text-sm font-medium flex items-center\">\n//             {bmsData.SOC + \"% \"} Charged\n//           </button>\n//         </motion.div>\n//       </div>\n//       {/* Charging Information Display */}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Energy: <span>{energyConsumed.toFixed(5)} kWh</span>\n//           </motion.div>\n//           {/* ✅ Countdown Timer Display */}\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Time Left:\n//             <span>\n//               {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Current: <span>{bmsData.current?.toFixed(2) ?? \"0.00\"} A</span>\n//           </motion.div>\n//           <motion.div className=\"info-box\" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>\n//             Power: <span>{(chargingPower / 1000).toFixed(5)} kW</span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n////new ui\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { Poppins } from \"next/font/google\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { isChargingInitialized, updateChargingStatus } = useChargingStatus(); // ✅ Use correct setter\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   // ✅ Countdown Timer & Auto Stop Charging\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now); // Prevent negative values\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         console.log(\"🔴 Timer reached zero. Stopping charge...\");\n//         clearInterval(interval);\n//         // ✅ Ensure charging stops before redirecting\n//         updateChargingStatus(false).then(() => {\n//           console.log(\"✅ Charging stopped. Redirecting...\");\n//           // router.push(\"/done\"); // ✅ Now correctly redirects\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown(); // Run immediately\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router]);\n//   // ✅ Dynamically accumulate energy every second\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           transition={{ duration: 0.3 }}\n//         >\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             {/* <span\n//               className={`${poppins.className} relative ${\n//                 isScootyParked ? \"\" : \"text-white\"\n//               }`}\n//             >\n//               {isScootyParked ? (\n//                 isChargingInitialized ? (\n//                   current <= 0 ? (\n//                     \"Charging Paused\"\n//                   ) : (\n//                     \"Charging\"\n//                   )\n//                 ) : (\n//                   \"Initializing Charging\"\n//                 )\n//               ) : (\n//                 <div className=\"flex items-center gap-3\">\n//                   <span>Park your vehicle</span>\n//                   <span className=\"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\">\n//                     {Math.floor(parkCountdown / 60)}:\n//                     {(parkCountdown % 60).toString().padStart(2, \"0\")}\n//                   </span>\n//                 </div>\n//               )}\n//             </span> */}\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       {/* <ChargingPadWarning isFodThere={fodTriggered} />\n//       <MisalignmentDialog isMisaligned={misalignmentTriggered} /> */}\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button\n//             onClick={() => {\n//               updateChargingStatus(false);\n//               router.push(\"/\");\n//             }}\n//             className=\"text-white/90 text-sm font-medium flex items-center\"\n//           >\n//            {bmsData.SOC + \"% \"}Charged\n//           </button>\n//           <svg\n//             width=\"14\"\n//             height=\"14\"\n//             viewBox=\"0 0 24 24\"\n//             fill=\"none\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             className=\"text-cyan-400\"\n//           >\n//             <path\n//               d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n//               stroke=\"currentColor\"\n//               strokeWidth=\"2\"\n//               strokeLinecap=\"round\"\n//               strokeLinejoin=\"round\"\n//             />\n//           </svg>\n//         </motion.div>\n//       </div>\n//       <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//       {/* <div className=\"flex w-full justify-center items-center mb-4\">\n//         <div className=\"flex-col justify-center items-center gap-36\">\n//           <motion.div\n//             initial={{ x: 768 }}\n//             animate={{ x: 0 }}\n//             key={isScootyParked ? \"parked\" : \"not-parked\"}\n//             transition={{\n//               duration: 5,\n//               type: \"spring\",\n//               stiffness: 100,\n//               damping: 100,\n//               repeat: isScootyParked ? 0 : Infinity,\n//             }}\n//           >\n//             <Image\n//               src=\"/charge-bike.png\"\n//               alt=\"Charger pad\"\n//               width={500}\n//               height={300}\n//               className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//             />\n//           </motion.div>\n//           <div className=\"flex w-full items-center justify-center\">\n//             <Image\n//               src=\"/charge-pad.png\"\n//               alt=\"Charger pad\"\n//               width={200}\n//               height={100}\n//               className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//             />\n//           </div>\n//         </div>\n//       </div> */}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"text-nowrap\">Energy: </span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n//               {energyConsumed.toFixed(5)} kWh\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             Time Remaining:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             Charging Current:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {bmsData.current?.toFixed(2) ?? \"0.00\"} A\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             Power:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {(chargingPower / 1000).toFixed(5)} kW W\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//       {/* {emergencyStop && <EmergencyStop isEmergencyStop={emergencyStop} />} */}\n//     </div>\n//   );\n// };\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { isChargingInitialized, updateChargingStatus } = useChargingStatus(); // ✅ Use correct setter\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         console.log(\"🔴 Timer reached zero. Stopping charge...\");\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           console.log(\"✅ Charging stopped. Redirecting...\");\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown(); // Run immediately\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           transition={{ duration: 0.3 }}\n//         >\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             <span className={`${poppins.className} relative`}>\n//               Charging {bmsData.SOC}%\n//             </span>\n//              <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button\n//             onClick={() => {\n//               updateChargingStatus(false);\n//               router.push(\"/\");\n//             }}\n//             className=\"text-white/90 text-sm font-medium flex items-center\"\n//           >\n//            {bmsData.SOC + \"% \"}Charged\n//           </button>\n//           <svg\n//             width=\"14\"\n//             height=\"14\"\n//             viewBox=\"0 0 24 24\"\n//             fill=\"none\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             className=\"text-cyan-400\"\n//           >\n//             <path\n//               d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n//               stroke=\"currentColor\"\n//               strokeWidth=\"2\"\n//               strokeLinecap=\"round\"\n//               strokeLinejoin=\"round\"\n//             />\n//           </svg>\n//         </motion.div>\n//       </div>\n//       <WaveCharging isChargeInit={true} percentage={bmsData?.SOC} />\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"text-nowrap\">Energy: </span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n//               {energyConsumed.toFixed(5)} kWh\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             Time Remaining:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             Charging Current:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {bmsData.current?.toFixed(2) ?? \"0.00\"} A\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             Power:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {(chargingPower / 1000).toFixed(5)} kW W\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n///fod\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { isChargingInitialized, updateChargingStatus } = useChargingStatus(); // ✅ Use correct setter\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         console.log(\"🔴 Timer reached zero. Stopping charge...\");\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           console.log(\"✅ Charging stopped. Redirecting...\");\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown(); // Run immediately\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   useEffect(() => {\n//     if (bmsData.isFOD) {\n//       console.log(\"🚨 FOD Detected! Stopping charge...\");\n//       // Stop charging\n//       updateChargingStatus(false);\n//       // Show alert\n//       alert(\"⚠️ Foreign Object Detected! Charging has been stopped for safety.\");\n//     }\n//   }, [bmsData.isFOD, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isMiss) {\n//       console.log(\"🚨 miss Detected! Stopping charge...\");\n//       // Stop charging\n//       updateChargingStatus(false);\n//       // Show alert\n//       alert(\"⚠️ miss Object Detected! Charging has been stopped for safety.\");\n//     }\n//   }, [bmsData.isMiss, updateChargingStatus, router]);\n//   return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           transition={{ duration: 0.3 }}\n//         >\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             <span className={`${poppins.className} relative`}>\n//               Charging {bmsData.SOC}%\n//             </span>\n//              <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button\n//             onClick={() => {\n//               updateChargingStatus(false);\n//               router.push(\"/\");\n//             }}\n//             className=\"text-white/90 text-sm font-medium flex items-center\"\n//           >\n//            {bmsData.SOC + \"% \"}Charged\n//           </button>\n//           <svg\n//             width=\"14\"\n//             height=\"14\"\n//             viewBox=\"0 0 24 24\"\n//             fill=\"none\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             className=\"text-cyan-400\"\n//           >\n//             <path\n//               d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n//               stroke=\"currentColor\"\n//               strokeWidth=\"2\"\n//               strokeLinecap=\"round\"\n//               strokeLinejoin=\"round\"\n//             />\n//           </svg>\n//         </motion.div>\n//       </div>\n//       <WaveCharging isChargeInit={true} percentage={bmsData?.SOC} />\n//       {bmsData.isFOD && (\n//   <div className=\"fixed top-5 left-1/2 transform -translate-x-1/2 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg z-50\">\n//     ⚠️ Foreign Object Detected! Charging Stopped.\n//   </div>\n// )}\n//       {bmsData.isMiss && (\n//   <div className=\"fixed top-5 left-1/2 transform -translate-x-1/2 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg z-50\">\n//     ⚠️ miss alignemnt! Charging Stopped.\n//   </div>\n// )}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"text-nowrap\">Energy: </span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n//               {energyConsumed.toFixed(5)} kWh\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             Time Remaining:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             Charging Current:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {bmsData.current?.toFixed(2) ?? \"0.00\"} A\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             Power:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {(chargingPower / 1000).toFixed(5)} kW W\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n///miss alignment\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { isChargingInitialized, updateChargingStatus } = useChargingStatus(); // ✅ Use correct setter\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         console.log(\"🔴 Timer reached zero. Stopping charge...\");\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           console.log(\"✅ Charging stopped. Redirecting...\");\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown(); // Run immediately\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   useEffect(() => {\n//     if (bmsData.isFOD) {\n//       console.log(\"🚨 FOD Detected! Stopping charge...\");\n//       // Stop charging\n//       updateChargingStatus(false);\n//       // Show alert\n//       alert(\"⚠️ Foreign Object Detected! Charging has been stopped for safety.\");\n//     }\n//   }, [bmsData.isFOD, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isMiss) {\n//       console.log(\"🚨 Misalignment Detected! Stopping charge...\");\n//       // Stop charging\n//       updateChargingStatus(false);\n//       // Show alert\n//       alert(\"⚠️ Misalignment Detected! Please align your vehicle properly. Charging has been stopped for safety.\");\n//     }\n//   }, [bmsData.isMiss, updateChargingStatus, router]);\n//   return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           transition={{ duration: 0.3 }}\n//         >\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             <span className={`${poppins.className} relative`}>\n//               Charging {bmsData.SOC}%\n//             </span>\n//              <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button\n//             onClick={() => {\n//               updateChargingStatus(false);\n//               router.push(\"/\");\n//             }}\n//             className=\"text-white/90 text-sm font-medium flex items-center\"\n//           >\n//            {bmsData.SOC + \"% \"}Charged\n//           </button>\n//           <svg\n//             width=\"14\"\n//             height=\"14\"\n//             viewBox=\"0 0 24 24\"\n//             fill=\"none\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             className=\"text-cyan-400\"\n//           >\n//             <path\n//               d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n//               stroke=\"currentColor\"\n//               strokeWidth=\"2\"\n//               strokeLinecap=\"round\"\n//               strokeLinejoin=\"round\"\n//             />\n//           </svg>\n//         </motion.div>\n//       </div>\n//       <WaveCharging isChargeInit={true} percentage={bmsData?.SOC} />\n//       {bmsData.isFOD && (\n//   <div className=\"fixed top-5 left-1/2 transform -translate-x-1/2 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg z-50\">\n//     ⚠️ Foreign Object Detected! Charging Stopped.\n//   </div>\n// )}\n//       {bmsData.isMiss && (\n//   <div className=\"fixed top-5 left-1/2 transform -translate-x-1/2 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg z-50\">\n//     ⚠️ Misalignment detected! Please adjust the vehicle.\n//   </div>\n// )}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"text-nowrap\">Energy: </span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n//               {energyConsumed.toFixed(5)} kWh\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             Time Remaining:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             Charging Current:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {bmsData.current?.toFixed(2) ?? \"0.00\"} A\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             Power:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {(chargingPower / 1000).toFixed(5)} kW W\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n//ui\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { isChargingInitialized, updateChargingStatus } = useChargingStatus(); // ✅ Use correct setter\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         console.log(\"🔴 Timer reached zero. Stopping charge...\");\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           console.log(\"✅ Charging stopped. Redirecting...\");\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown(); // Run immediately\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   useEffect(() => {\n//     if (bmsData.isFOD) {\n//       console.log(\"🚨 FOD Detected! Stopping charge...\");\n//       // Stop charging\n//       updateChargingStatus(false);\n//       // Show alert\n//       alert(\"⚠️ Foreign Object Detected! Charging has been stopped for safety.\");\n//     }\n//   }, [bmsData.isFOD, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isMiss) {\n//       console.log(\"🚨 Misalignment Detected! Stopping charge...\");\n//       // Stop charging\n//       updateChargingStatus(false);\n//       // Show alert\n//       alert(\"⚠️ Misalignment Detected! Please align your vehicle properly. Charging has been stopped for safety.\");\n//     }\n//   }, [bmsData.isMiss, updateChargingStatus, router]);\n//   return (\n//     <div\n//       className=\"w-full h-screen overflow-hidden bg-[#2A2D32] font-sans pt-7 flex flex-col items-center\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           transition={{ duration: 0.3 }}\n//         >\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             <span className={`${poppins.className} relative`}>\n//               Charging {bmsData.SOC}%\n//             </span>\n//              <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button\n//             onClick={() => {\n//               updateChargingStatus(false);\n//               router.push(\"/\");\n//             }}\n//             className=\"text-white/90 text-sm font-medium flex items-center\"\n//           >\n//            {bmsData.SOC + \"% \"}Charged\n//           </button>\n//           <svg\n//             width=\"14\"\n//             height=\"14\"\n//             viewBox=\"0 0 24 24\"\n//             fill=\"none\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             className=\"text-cyan-400\"\n//           >\n//             <path\n//               d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n//               stroke=\"currentColor\"\n//               strokeWidth=\"2\"\n//               strokeLinecap=\"round\"\n//               strokeLinejoin=\"round\"\n//             />\n//           </svg>\n//         </motion.div>\n//       </div>\n//       <WaveCharging isChargeInit={true} percentage={bmsData?.SOC} />\n//       {bmsData.isFOD && (\n//   <div className=\"fixed top-5 left-1/2 transform -translate-x-1/2 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg z-50\">\n//     ⚠️ Foreign Object Detected! Charging Stopped.\n//   </div>\n// )}\n//       {bmsData.isMiss && (\n//   <div className=\"fixed top-5 left-1/2 transform -translate-x-1/2 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg z-50\">\n//     ⚠️ Misalignment detected! Please adjust the vehicle.\n//   </div>\n// )}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"text-nowrap\">Energy: </span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n//               {energyConsumed.toFixed(5)} kWh\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             Time Remaining:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             Charging Current:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {bmsData.current?.toFixed(2) ?? \"0.00\"} A\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             Power:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {(chargingPower / 1000).toFixed(5)} kW W\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n//FOD UI\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// import FODDialog from \"../../../components/FODDialog\"\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { isChargingInitialized, updateChargingStatus } = useChargingStatus(); // ✅ Use correct setter\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         console.log(\"🔴 Timer reached zero. Stopping charge...\");\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           console.log(\"✅ Charging stopped. Redirecting...\");\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown(); // Run immediately\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   const [isFODDetected, setIsFODDetected] = useState(false);\n// useEffect(() => {\n//   if (bmsData.isFOD) {\n//     console.log(\"🚨 FOD Detected! Stopping charge...\");\n//     updateChargingStatus(false);\n//     setIsFODDetected(true);  // Open modal instead of alert\n//   }\n//   else {\n//     updateChargingStatus(true);\n//     setIsFODDetected(false);\n//   }\n// }, [bmsData.isFOD, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isMiss) {\n//       console.log(\"🚨 Misalignment Detected! Stopping charge...\");\n//       // Stop charging\n//       updateChargingStatus(false);\n//       // Show alert\n//       alert(\"⚠️ Misalignment Detected! Please align your vehicle properly. Charging has been stopped for safety.\");\n//     }\n//   }, [bmsData.isMiss, updateChargingStatus, router]);\n//   return (\n//     <div\n//       className=\"w-full h-screen overflow-hidden bg-[#2A2D32] font-sans pt-7 flex flex-col items-center\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-left flex-col gap-2 mb-12 relative\"\n//           initial={{ opacity: 0 }}\n//           animate={{ opacity: 1 }}\n//           transition={{ duration: 0.3 }}\n//         >\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             <span className={`${poppins.className} relative`}>\n//               Charging {bmsData.SOC}%\n//             </span>\n//              <WaveCharging isChargeInit={isChargingInitialized} percentage={bmsData?.SOC} />\n//           </motion.div>\n//         </motion.div>\n//       </div>\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button\n//             onClick={() => {\n//               updateChargingStatus(false);\n//               router.push(\"/\");\n//             }}\n//             className=\"text-white/90 text-sm font-medium flex items-center\"\n//           >\n//            {bmsData.SOC + \"% \"}Charged\n//           </button>\n//           <svg\n//             width=\"14\"\n//             height=\"14\"\n//             viewBox=\"0 0 24 24\"\n//             fill=\"none\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             className=\"text-cyan-400\"\n//           >\n//             <path\n//               d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n//               stroke=\"currentColor\"\n//               strokeWidth=\"2\"\n//               strokeLinecap=\"round\"\n//               strokeLinejoin=\"round\"\n//             />\n//           </svg>\n//         </motion.div>\n//       </div>\n//       <WaveCharging isChargeInit={true} percentage={bmsData?.SOC} />\n//       {/* {bmsData.isFOD && (\n//   <div className=\"fixed top-5 left-1/2 transform -translate-x-1/2 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg z-50\">\n//     ⚠️ Foreign Object Detected! Charging Stopped.\n//   </div>\n// )} */}\n//       {bmsData.isFOD && <FODDialog />}\n//       {bmsData.isMiss && (\n//   <div className=\"fixed top-5 left-1/2 transform -translate-x-1/2 bg-red-600 text-white px-4 py-2 rounded-md shadow-lg z-50\">\n//     ⚠️ Misalignment detected! Please adjust the vehicle.\n//   </div>\n// )}\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"text-nowrap\">Energy: </span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n//               {energyConsumed.toFixed(5)} kWh\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             Time Remaining:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             Charging Current:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {bmsData.current?.toFixed(2) ?? \"0.00\"} A\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             Power:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//             {(chargingPower / 1000).toFixed(5)} kW W\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n//ui miss\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useMemo, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// import FODDialog from \"../../../components/FODDialog\"\n// import MissDialog from \"../../../components/MissDialog\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { isChargingInitialized, updateChargingStatus } = useChargingStatus(); // ✅ Use correct setter\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         console.log(\"🔴 Timer reached zero. Stopping charge...\");\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           console.log(\"✅ Charging stopped. Redirecting...\");\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown(); // Run immediately\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n// //   const [isFODDetected, setIsFODDetected] = useState(false);\n// // useEffect(() => {\n// //   if (bmsData.isFOD) {\n// //     console.log(\"🚨 FOD Detected! Stopping charge...\");\n// //     updateChargingStatus(false);\n// //     setIsFODDetected(true);  // Open modal instead of alert\n// //   }\n// //   else {\n// //     updateChargingStatus(true);\n// //     setIsFODDetected(false);\n// //   }\n// // }, [bmsData.isFOD, updateChargingStatus, router]);\n// // const [isMissDetected, setIsMissDetected] = useState(false);\n// // useEffect(() => {\n// //   if (bmsData?.isMiss) {\n// //     console.log(\"🚨 Misalignment Detected! Stopping charge...\");\n// //     updateChargingStatus(false); // Stop charging\n// //     setIsMissDetected(true); // Show Misalignment Dialog\n// //   } else {\n// //     updateChargingStatus(true); // Resume charging\n// //     setIsMissDetected(false); // Hide Misalignment Dialog\n// //   }\n//   // }, [bmsData?.isMiss, updateChargingStatus]);\n//   const [isIssueDetected, setIsIssueDetected] = useState({ isFOD: false, isMiss: false });\n// useEffect(() => {\n//   if (bmsData?.isFOD || bmsData?.isMiss) {\n//     console.log(\"🚨 Issue Detected! Stopping charge...\");\n//     updateChargingStatus(false);\n//     setIsIssueDetected({ isFOD: bmsData?.isFOD, isMiss: bmsData?.isMiss });\n//   } else {\n//     updateChargingStatus(true);\n//     setIsIssueDetected({ isFOD: false, isMiss: false });\n//   }\n// }, [bmsData?.isFOD, bmsData?.isMiss, updateChargingStatus]);\n// useEffect(() => {\n//   console.log(\"WaveCharging mounted with percentage:\", bmsData?.SOC);\n// }, [bmsData?.SOC]);\n// // const waveColor = useMemo(() => {\n// //   if () return \"rgba(255, 59, 48, 0.7)\"; // Red for error\n// //   if (chargingStatus.isComplete) return \"rgba(52, 199, 89, 0.7)\"; // Green for complete\n// //   return \"rgba(0, 122, 255, 0.7)\"; // Blue for charging\n// // }, [chargingStatus]);\n// //   return (\n// //     <div\n// //       className=\"w-full h-screen overflow-hidden bg-[#2A2D32] font-sans pt-7 flex flex-col items-center\"\n// //       style={{\n// //         backgroundImage: \"url(/main-bg.png)\",\n// //         backgroundSize: \"cover\",\n// //         backgroundPosition: \"center\",\n// //       }}\n// //     >\n// //       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n// //         <motion.div\n// //           className=\"text-left flex-col gap-2 mb-12 relative\"\n// //           initial={{ opacity: 0 }}\n// //           animate={{ opacity: 1 }}\n// //           transition={{ duration: 0.3 }}\n// //         >\n// //           <motion.div\n// //             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n// //             initial={{ opacity: 0, x: -20 }}\n// //             animate={{ opacity: 1, x: 0 }}\n// //             transition={{ duration: 0.5, delay: 0.6 }}\n// //           >\n// //             <span className={`${poppins.className} relative`}>\n// //               Charging {bmsData.SOC}%\n// //             </span>\n// //           </motion.div>\n// //         </motion.div>\n// //       </div>\n// //       {bmsData?.isFOD && <FODDialog />}\n// //       {bmsData?.isMiss && <MissDialog />}\n// //       <div className=\"flex flex-col items-center gap-6 mb-12\">\n// //         <motion.div\n// //           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n// //           initial={{ opacity: 0, y: 20 }}\n// //           animate={{ opacity: 1, y: 0 }}\n// //           transition={{ duration: 0.5, delay: 0.8 }}\n// //         >\n// //           <button\n// //             onClick={() => {\n// //               updateChargingStatus(false);\n// //               router.push(\"/\");\n// //             }}\n// //             className=\"text-white/90 text-sm font-medium flex items-center\"\n// //           >\n// //            {bmsData.SOC + \"% \"}Charged\n// //           </button>\n// //           <svg\n// //             width=\"14\"\n// //             height=\"14\"\n// //             viewBox=\"0 0 24 24\"\n// //             fill=\"none\"\n// //             xmlns=\"http://www.w3.org/2000/svg\"\n// //             className=\"text-cyan-400\"\n// //           >\n// //             <path\n// //               d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n// //               stroke=\"currentColor\"\n// //               strokeWidth=\"2\"\n// //               strokeLinecap=\"round\"\n// //               strokeLinejoin=\"round\"\n// //             />\n// //           </svg>\n// //         </motion.div>\n// //       </div>\n// //       <div className=\"w-full flex justify-center relative z-10\">\n// //       <WaveCharging isChargeInit={true} percentage={bmsData?.SOC || 0} />\n// // </div>\n// //       <div className=\"w-full px-12 mt-7\">\n// //         <div className=\"grid grid-cols-2 gap-6\">\n// //           <motion.div\n// //             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n// //             initial={{ opacity: 0, y: 20 }}\n// //             animate={{ opacity: 1, y: 0 }}\n// //             transition={{ duration: 0.5, delay: 1.0 }}\n// //           >\n// //             <span className=\"text-nowrap\">Energy: </span>\n// //             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n// //               {energyConsumed.toFixed(5)} kWh\n// //             </span>\n// //           </motion.div>\n// //           <motion.div\n// //             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n// //             initial={{ opacity: 0, y: 20 }}\n// //             animate={{ opacity: 1, y: 0 }}\n// //             transition={{ duration: 0.5, delay: 1.2 }}\n// //           >\n// //             Time Remaining:{\" \"}\n// //             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n// //             {`${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s`}\n// //             </span>\n// //           </motion.div>\n// //           <motion.div\n// //             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n// //             initial={{ opacity: 0, y: 20 }}\n// //             animate={{ opacity: 1, y: 0 }}\n// //             transition={{ duration: 0.5, delay: 1.4 }}\n// //           >\n// //             Charging Current:{\" \"}\n// //             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n// //             {bmsData.current?.toFixed(2) ?? \"0.00\"} A\n// //             </span>\n// //           </motion.div>\n// //           <motion.div\n// //             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n// //             initial={{ opacity: 0, y: 20 }}\n// //             animate={{ opacity: 1, y: 0 }}\n// //             transition={{ duration: 0.5, delay: 1.6 }}\n// //           >\n// //             Power:{\" \"}\n// //             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n// //             {(chargingPower / 1000).toFixed(5)} kW W\n// //             </span>\n// //           </motion.div>\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n//   // };\n//   const waveColor = useMemo(() => {\n//     const soc = bmsData?.SOC; // Get SOC from bmsData\n//     if (soc >= 100) return \"rgba(52, 199, 89, 0.7)\"; // Green for full charge\n//     if (soc >= 75) return \"rgba(0, 122, 255, 0.7)\"; // Blue for high charge\n//     if (soc >= 50) return \"rgba(255, 204, 0, 0.7)\"; // Yellow for medium charge\n//     if (soc >= 25) return \"rgba(255, 59, 48, 0.7)\"; // Red for low charge\n//     return \"rgba(255, 59, 48, 0.7)\"; // Red for very low charge\n//   }, [bmsData?.SOC]);\n//   // SVG path rendering based on wave color\n// return (\n//   <div className=\"w-full h-screen overflow-hidden bg-[#2A2D32] font-sans pt-7 flex flex-col items-center\" style={{\n//     backgroundImage: \"url(/main-bg.png)\",\n//     backgroundSize: \"cover\",\n//     backgroundPosition: \"center\",\n//   }}>\n//     {/* Title */}\n//     <motion.div className=\"text-white/90 text-5xl font-medium tracking-wider mt-20\"\n//       initial={{ opacity: 0, x: -20 }}\n//       animate={{ opacity: 1, x: 0 }}\n//       transition={{ duration: 0.5, delay: 0.6 }}>\n//       Charging {bmsData.SOC}%\n//     </motion.div>\n//     {/* Dialogs */}\n//     {bmsData?.isFOD && <FODDialog />}\n//     {bmsData?.isMiss && <MissDialog />}\n//     {/* Wave Charging Section */}\n//     {/* <div className=\"flex justify-center items-center w-full h-80 relative mt-10\">\n//       <WaveCharging isChargeInit={true} percentage={bmsData?.SOC || 0} />\n//     </div> */}\n// <div className=\"flex justify-center items-center w-full h-80 relative mt-10\">\n//         <WaveCharging\n//           percentage={bmsData?.SOC || 0}\n//           waveColor={waveColor}\n//           backgroundColor=\"rgba(255, 255, 255, 0.1)\"\n//           size={200}\n//         />\n//       </div>\n//     {/* Charging Status Button */}\n//     <motion.div className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10 mt-6\"\n//       initial={{ opacity: 0, y: 20 }}\n//       animate={{ opacity: 1, y: 0 }}\n//       transition={{ duration: 0.5, delay: 0.8 }}>\n//       <button onClick={() => { updateChargingStatus(false); router.push(\"/\"); }} className=\"text-white/90 text-sm font-medium flex items-center\">\n//         {bmsData.SOC}% Charged\n//       </button>\n//     </motion.div>\n//     {/* Information Grid */}\n//     <div className=\"w-full px-12 mt-7 grid grid-cols-2 gap-6\">\n//       {[\n//         { label: \"Energy\", value: `${energyConsumed.toFixed(5)} kWh` },\n//         { label: \"Time Remaining\", value: `${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s` },\n//         { label: \"Charging Current\", value: `${bmsData.current?.toFixed(2) ?? \"0.00\"} A` },\n//         { label: \"Power\", value: `${(chargingPower / 1000).toFixed(5)} kW` }\n//       ].map((item, index) => (\n//         <motion.div key={index} className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center transition-all duration-300 hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] hover:bg-black/30\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 1.0 + index * 0.2 }}>\n//           {item.label}: <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">{item.value}</span>\n//         </motion.div>\n//       ))}\n//     </div>\n//   </div>\n// );\n// };\n//wave\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useMemo, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// import FODDialog from \"../../../components/FODDialog\";\n// import MissDialog from \"../../../components/MissDialog\";\n// import { Pause } from \"lucide-react\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus } = useChargingStatus();\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           router.push(\"/\");\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown();\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   const [isIssueDetected, setIsIssueDetected] = useState({ isFOD: false, isMiss: false });\n//   useEffect(() => {\n//     if (bmsData?.isFOD || bmsData?.isMiss) {\n//       updateChargingStatus(false);\n//       setIsIssueDetected({ isFOD: bmsData?.isFOD, isMiss: bmsData?.isMiss });\n//     } else {\n//       updateChargingStatus(true);\n//       setIsIssueDetected({ isFOD: false, isMiss: false });\n//     }\n//   }, [bmsData?.isFOD, bmsData?.isMiss, updateChargingStatus]);\n//   const waveColor = useMemo(() => {\n//     const soc = bmsData?.SOC;\n//     if (soc >= 100) return \"rgba(52, 199, 89, 0.7)\";\n//     if (soc >= 75) return \"rgba(0, 122, 255, 0.7)\";\n//     if (soc >= 50) return \"rgba(255, 204, 0, 0.7)\";\n//     if (soc >= 25) return \"rgba(255, 59, 48, 0.7)\";\n//     return \"rgba(255, 59, 48, 0.7)\";\n//   }, [bmsData?.SOC]);\n//   return (\n//     <div\n//       className=\"w-full h-screen overflow-hidden bg-[#2A2D32] font-sans pt-7 flex flex-col items-center\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <motion.div\n//         className=\"text-white/90 text-5xl font-medium tracking-wider mt-20\"\n//         initial={{ opacity: 0, x: -20 }}\n//         animate={{ opacity: 1, x: 0 }}\n//         transition={{ duration: 0.5, delay: 0.6 }}\n//       >\n//         Charging {bmsData.SOC}%\n//       </motion.div>\n//       {bmsData?.isFOD && <FODDialog />}\n//       {bmsData?.isMiss && <MissDialog />}\n//       <div className=\"flex justify-center items-center w-full h-80 relative mt-10\">\n//         <WaveCharging\n//           percentage={bmsData?.SOC || 0}\n//           waveColor={waveColor}\n//           backgroundColor=\"rgba(255, 255, 255, 0.1)\"\n//           size={200}\n//         />\n//       </div>\n//       <motion.div\n//         className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10 mt-6\"\n//         initial={{ opacity: 0, y: 20 }}\n//         animate={{ opacity: 1, y: 0 }}\n//         transition={{ duration: 0.5, delay: 0.8 }}\n//       >\n//         <button\n//           onClick={() => {\n//             updateChargingStatus(false);\n//             router.push(\"/\");\n//           }}\n//           className=\"text-white/90 text-sm font-medium flex items-center\"\n//         >\n//           {bmsData.SOC}% Charged\n//         </button>\n//       </motion.div>\n//       <div className=\"w-full px-12 mt-7 grid grid-cols-2 gap-6\">\n//         {[\n//           { label: \"Energy\", value: `${energyConsumed.toFixed(5)} kWh` },\n//           { label: \"Time Remaining\", value: `${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s` },\n//           { label: \"Charging Current\", value: `${bmsData.current?.toFixed(2) ?? \"0.00\"} A` },\n//           { label: \"Power\", value: `${(chargingPower / 1000).toFixed(5)} kW` },\n//         ].map((item, index) => (\n//           <motion.div\n//             key={index}\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center transition-all duration-300 hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 + index * 0.2 }}\n//           >\n//             {item.label}: <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">{item.value}</span>\n//           </motion.div>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n// //bike\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useMemo, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// import FODDialog from \"../../../components/FODDialog\";\n// import MissDialog from \"../../../components/MissDialog\";\n// import { Pause } from \"lucide-react\";\n// import Image from \"next/image\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus } = useChargingStatus();\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({\n//     hours: 0,\n//     minutes: 0,\n//     seconds: 0,\n//   });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime || !bmsData?.isReceiverCoilDetected) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           router.push(\"/\");\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown();\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router, !bmsData?.isReceiverCoilDetected]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   const [isIssueDetected, setIsIssueDetected] = useState({\n//     isFOD: false,\n//     isMiss: false,\n//   });\n//   useEffect(() => {\n//     if ((bmsData?.isFOD || bmsData?.isMiss, !bmsData?.isReceiverCoilDetected)) {\n//       updateChargingStatus(false);\n//       setIsIssueDetected({ isFOD: bmsData?.isFOD, isMiss: bmsData?.isMiss });\n//     } else {\n//       updateChargingStatus(true);\n//       setIsIssueDetected({ isFOD: false, isMiss: false });\n//     }\n//   }, [\n//     bmsData?.isFOD,\n//     bmsData?.isMiss,\n//     updateChargingStatus,\n//     !bmsData?.isReceiverCoilDetected,\n//   ]);\n//   const waveColor = useMemo(() => {\n//     const soc = bmsData?.SOC;\n//     if (soc >= 100) return \"rgba(52, 199, 89, 0.7)\";\n//     if (soc >= 75) return \"rgba(0, 122, 255, 0.7)\";\n//     if (soc >= 50) return \"rgba(255, 204, 0, 0.7)\";\n//     if (soc >= 25) return \"rgba(255, 59, 48, 0.7)\";\n//     return \"rgba(255, 59, 48, 0.7)\";\n//   }, [bmsData?.SOC]);\n//   // const [parkCountdown, setParkCountdown] = useState<number>(60);\n//   // const [unparkStartTime, setUnparkStartTime] = useState<number | null>(null);\n//   // useEffect(() => {\n//   //   let countdownInterval: NodeJS.Timeout;\n//   //   if (!bmsData?.isReceiverCoilDetected) {\n//   //     if (!unparkStartTime) {\n//   //       setUnparkStartTime(Date.now());\n//   //     }\n//   //     countdownInterval = setInterval(() => {\n//   //       setParkCountdown((prev) => {\n//   //         if (prev <= 1) {\n//   //           updateChargingStatus(false);\n//   //           setTimeLeft({ hours: 0, minutes: 0, seconds: 0 });\n//   //           setEnergyConsumed(0);\n//   //           setUnparkStartTime(null);\n//   //           router.push(\"/\");\n//   //           return 0;\n//   //         }\n//   //         return prev - 1;\n//   //       });\n//   //     }, 1000);\n//   //   } else {\n//   //     setUnparkStartTime(null);\n//   //     setParkCountdown(60);\n//   //   }\n//   //   return () => clearInterval(countdownInterval);\n//   // }, [bmsData?.isReceiverCoilDetected, updateChargingStatus, router]);\n//   // const [parkCountdown, setParkCountdown] = useState(60);\n//   // useEffect(() => {\n//   //   if (!bmsData?.isReceiverCoilDetected) {\n//   //     const interval = setInterval(() => setParkCountdown((prev) => Math.max(prev - 1, 0)), 1000);\n//   //     return () => clearInterval(interval);\n//   //   }\n//   //   setParkCountdown(60);\n//   //   if (parkCountdown < 1) router.push(\"/\");\n//   // }, [bmsData?.isReceiverCoilDetected, parkCountdown]);\n//   const [parkCountdown, setParkCountdown] = useState(60);\n//   useEffect(() => {\n//     let interval: NodeJS.Timeout;\n//     if (!bmsData?.isReceiverCoilDetected) {\n//       if (parkCountdown === 0) {\n//         // Countdown is over, redirect to home\n//         router.push(\"/\");\n//         return;\n//       }\n//       // Start countdown\n//       interval = setInterval(() => {\n//         setParkCountdown((prev) => {\n//           if (prev <= 1) {\n//             clearInterval(interval);\n//             router.push(\"/\");\n//             return 0;\n//           }\n//           return prev - 1;\n//         });\n//       }, 1000);\n//     } else {\n//       // Reset countdown if receiver coil is detected\n//       setParkCountdown(60);\n//     }\n//     return () => clearInterval(interval);\n//   }, [bmsData?.isReceiverCoilDetected, parkCountdown, router]);\n//   const formatTime = (value: number): string => {\n//     return value.toString().padStart(2, \"0\");\n//   };\n//   return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-white/90 text-5xl font-medium tracking-wider mt-20\"\n//           initial={{ opacity: 0, x: -20 }}\n//           animate={{ opacity: 1, x: 0 }}\n//           transition={{ duration: 0.5, delay: 0.6 }}\n//         >\n//           <span\n//             className={`${poppins.className} relative ${\n//               bmsData?.isReceiverCoilDetected ? \"\" : \"text-white\"\n//             }`}\n//           >\n//             {bmsData?.isReceiverCoilDetected ? (\n//               bmsData?.current <= 0 ? (\n//                 \"Charging Paused\"\n//               ) : (\n//                 \"Charging\"\n//               )\n//             ) : (\n//               <div className=\"flex items-center gap-3\">\n//                 <span>Park your vehicle</span>\n//                 <span className=\"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\">\n//                   {Math.floor(parkCountdown / 60)}:\n//                   {(parkCountdown % 60).toString().padStart(2, \"0\")}\n//                 </span>\n//               </div>\n//             )}\n//           </span>\n//         </motion.div>\n//       </div>\n//       {bmsData?.isFOD && <FODDialog />}\n//       {bmsData?.isMiss && <MissDialog />}\n//       <div className=\"flex flex-col items-center gap-6 mb-12 scale-150\">\n//         <motion.div\n//           className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10\"\n//           initial={{ opacity: 0, y: 20 }}\n//           animate={{ opacity: 1, y: 0 }}\n//           transition={{ duration: 0.5, delay: 0.8 }}\n//         >\n//           <button\n//             onClick={() => {\n//               updateChargingStatus(false);\n//               router.push(\"/\");\n//             }}\n//             className=\"text-white/90 text-sm font-medium flex items-center\"\n//           >\n//             {bmsData?.SOC || 0 + \"% \"}Charged\n//           </button>\n//           <svg\n//             width=\"14\"\n//             height=\"14\"\n//             viewBox=\"0 0 24 24\"\n//             fill=\"none\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             className=\"text-cyan-400\"\n//           >\n//             <path\n//               d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n//               stroke=\"currentColor\"\n//               strokeWidth=\"2\"\n//               strokeLinecap=\"round\"\n//               strokeLinejoin=\"round\"\n//             />\n//           </svg>\n//         </motion.div>\n//       </div>\n//       <div className=\"flex justify-center items-center w-full h-80 relative mt-10\">\n//         <WaveCharging\n//           percentage={bmsData?.SOC || 0}\n//           waveColor={waveColor}\n//           backgroundColor=\"rgba(255, 255, 255, 0.1)\"\n//           size={200}\n//         />\n//       </div>\n//       <div className=\"flex w-full justify-center items-center mb-4\">\n//         <div className=\"flex-col justify-center items-center gap-36\">\n//           <motion.div\n//             initial={{ x: 768 }}\n//             animate={{ x: 0 }}\n//             key={bmsData?.isReceiverCoilDetected ? \"parked\" : \"not-parked\"}\n//             transition={{\n//               duration: 5,\n//               type: \"spring\",\n//               stiffness: 100,\n//               damping: 100,\n//               repeat: bmsData?.isReceiverCoilDetected ? 0 : Infinity,\n//             }}\n//           >\n//             <Image\n//               src=\"/charge-bike.png\"\n//               alt=\"Charger pad\"\n//               width={500}\n//               height={300}\n//               className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//             />\n//           </motion.div>\n//           <div className=\"flex w-full items-center justify-center\">\n//             <Image\n//               src=\"/charge-pad.png\"\n//               alt=\"Charger pad\"\n//               width={200}\n//               height={100}\n//               className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//             />\n//           </div>\n//         </div>\n//       </div>\n//       {/* <motion.div\n//         className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10 mt-6\"\n//         initial={{ opacity: 0, y: 20 }}\n//         animate={{ opacity: 1, y: 0 }}\n//         transition={{ duration: 0.5, delay: 0.8 }}\n//       >\n//         <button\n//           onClick={() => {\n//             updateChargingStatus(false);\n//             router.push(\"/\");\n//           }}\n//           className=\"text-white/90 text-sm font-medium flex items-center\"\n//         >\n//           {bmsData.SOC}% Charged\n//         </button>\n//       </motion.div> */}\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"text-nowrap\">Energy: </span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n//               {energyConsumed.toFixed(5)} kWh\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             Time Remaining:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {formatTime(timeLeft.hours)}:{formatTime(timeLeft.minutes)}:\n//               {formatTime(timeLeft.seconds)}\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             Charging Current:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {bmsData.current?.toFixed(2)} A\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             Power:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {(chargingPower / 1000).toFixed(5)} W\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//   );\n// }\n//countdown\n//bike\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useMemo, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// import FODDialog from \"../../../components/FODDialog\";\n// import MissDialog from \"../../../components/MissDialog\";\n// import { Pause } from \"lucide-react\";\n// import Image from \"next/image\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus } = useChargingStatus();\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({ hours: 0, minutes: 0, seconds: 0 });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime || !bmsData?.isReceiverCoilDetected ) return;\n//     const updateCountdown = () => {\n//       const now = Date.now();\n//       const remainingTime = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remainingTime / (1000 * 60 * 60)),\n//         minutes: Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remainingTime % (1000 * 60)) / 1000),\n//       });\n//       if (remainingTime <= 0) {\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           router.push(\"/\");\n//         });\n//       }\n//     };\n//     const interval = setInterval(updateCountdown, 1000);\n//     updateCountdown();\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router, !bmsData?.isReceiverCoilDetected]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   const [isIssueDetected, setIsIssueDetected] = useState({ isFOD: false, isMiss: false,  });\n//   useEffect(() => {\n//     if (bmsData?.isFOD || bmsData?.isMiss, !bmsData?.isReceiverCoilDetected) {\n//       updateChargingStatus(false);\n//       setIsIssueDetected({ isFOD: bmsData?.isFOD, isMiss: bmsData?.isMiss });\n//     } else {\n//       updateChargingStatus(true);\n//       setIsIssueDetected({ isFOD: false, isMiss: false });\n//     }\n//   }, [bmsData?.isFOD, bmsData?.isMiss, updateChargingStatus, !bmsData?.isReceiverCoilDetected]);\n//   const waveColor = useMemo(() => {\n//     const soc = bmsData?.SOC;\n//     if (soc >= 100) return \"rgba(52, 199, 89, 0.7)\";\n//     if (soc >= 75) return \"rgba(0, 122, 255, 0.7)\";\n//     if (soc >= 50) return \"rgba(255, 204, 0, 0.7)\";\n//     if (soc >= 25) return \"rgba(255, 59, 48, 0.7)\";\n//     return \"rgba(255, 59, 48, 0.7)\";\n//   }, [bmsData?.SOC]);\n//   // const [parkCountdown, setParkCountdown] = useState<number>(60);\n//   // const [unparkStartTime, setUnparkStartTime] = useState<number | null>(null);\n//   // useEffect(() => {\n//   //   let countdownInterval: NodeJS.Timeout;\n//   //   if (!bmsData?.isReceiverCoilDetected) {\n//   //     if (!unparkStartTime) {\n//   //       setUnparkStartTime(Date.now());\n//   //     }\n//   //     countdownInterval = setInterval(() => {\n//   //       setParkCountdown((prev) => {\n//   //         if (prev <= 1) {\n//   //           updateChargingStatus(false);\n//   //           setTimeLeft({ hours: 0, minutes: 0, seconds: 0 });\n//   //           setEnergyConsumed(0);\n//   //           setUnparkStartTime(null);\n//   //           router.push(\"/\");\n//   //           return 0;\n//   //         }\n//   //         return prev - 1;\n//   //       });\n//   //     }, 1000);\n//   //   } else {\n//   //     setUnparkStartTime(null);\n//   //     setParkCountdown(60);\n//   //   }\n//   //   return () => clearInterval(countdownInterval);\n//   // }, [bmsData?.isReceiverCoilDetected, updateChargingStatus, router]);\n//   // const [parkCountdown, setParkCountdown] = useState(60);\n//   // useEffect(() => {\n//   //   if (!bmsData?.isReceiverCoilDetected) {\n//   //     const interval = setInterval(() => setParkCountdown((prev) => Math.max(prev - 1, 0)), 1000);\n//   //     return () => clearInterval(interval);\n//   //   }\n//   //   setParkCountdown(60);\n//   //   if (parkCountdown < 1) router.push(\"/\");\n//   // }, [bmsData?.isReceiverCoilDetected, parkCountdown]);\n//   const [parkCountdown, setParkCountdown] = useState(60);\n// useEffect(() => {\n//   let interval: NodeJS.Timeout;\n//   if (!bmsData?.isReceiverCoilDetected) {\n//     if (parkCountdown === 0) {\n//       // Countdown is over, redirect to home\n//       router.push(\"/\");\n//       return;\n//     }\n//     // Start countdown\n//     interval = setInterval(() => {\n//       setParkCountdown((prev) => {\n//         if (prev <= 1) {\n//           clearInterval(interval);\n//           router.push(\"/\");\n//           return 0;\n//         }\n//         return prev - 1;\n//       });\n//     }, 1000);\n//   } else {\n//     // Reset countdown if receiver coil is detected\n//     setParkCountdown(60);\n//   }\n//   return () => clearInterval(interval);\n// }, [bmsData?.isReceiverCoilDetected, parkCountdown, router]);\n// //   return (\n// //     <div\n// //     className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n// //     style={{\n// //       backgroundImage: \"url(/main-bg.png)\",\n// //       backgroundSize: \"cover\",\n// //       backgroundPosition: \"center\",\n// //     }}\n// //     >\n// //     <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n// //     <motion.div\n// //             className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n// //             initial={{ opacity: 0, x: -20 }}\n// //             animate={{ opacity: 1, x: 0 }}\n// //             transition={{ duration: 0.5, delay: 0.6 }}\n// //           >\n// //         <span\n// //   className={`${poppins.className} relative ${\n// //     bmsData?.isReceiverCoilDetected ? \"\" : \"text-white\"\n// //   }`}\n// // >\n// //   {bmsData?.isReceiverCoilDetected ? (\n// //     bmsData?.current <= 0 ? (\n// //       \"Charging Paused\"\n// //     ) : (\n// //       \"Charging\"\n// //     )\n// //   ) : (\n// //     <div className=\"flex items-center gap-3\">\n// //       <span>Park your vehicle</span>\n// //       <span className=\"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\">\n// //                     {Math.floor(parkCountdown / 60)}:\n// //           {(parkCountdown % 60).toString().padStart(2, \"0\")}\n// //        </span>\n// //     </div>\n// //   )}\n// // </span>\n// //         </motion.div>\n// //   </div>\n// //       {bmsData?.isFOD && <FODDialog />}\n// //       {bmsData?.isMiss && <MissDialog />}\n// //       <div className=\"flex justify-center items-center w-full h-80 relative mt-10\">\n// //         <WaveCharging\n// //           percentage={bmsData?.SOC || 0}\n// //           waveColor={waveColor}\n// //           backgroundColor=\"rgba(255, 255, 255, 0.1)\"\n// //           size={200}\n// //         />\n// //       </div>\n// //       <div className=\"flex w-full justify-center items-center mb-4\">\n// //         <div className=\"flex-col justify-center items-center gap-36\">\n// //           <motion.div\n// //             initial={{ x: 768 }}\n// //             animate={{ x: 0 }}\n// //             key={bmsData?.isReceiverCoilDetected ? \"parked\" : \"not-parked\"}\n// //             transition={{\n// //               duration: 5,\n// //               type: \"spring\",\n// //               stiffness: 100,\n// //               damping: 100,\n// //               repeat: bmsData?.isReceiverCoilDetected ? 0 : Infinity,\n// //             }}\n// //           >\n// //             <Image\n// //               src=\"/charge-bike.png\"\n// //               alt=\"Charger pad\"\n// //               width={500}\n// //               height={300}\n// //               className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n// //             />\n// //           </motion.div>\n// //           <div className=\"flex w-full items-center justify-center\">\n// //             <Image\n// //               src=\"/charge-pad.png\"\n// //               alt=\"Charger pad\"\n// //               width={200}\n// //               height={100}\n// //               className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n// //             />\n// //           </div>\n// //         </div>\n// //       </div>\n// //       <motion.div\n// //         className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10 mt-6\"\n// //         initial={{ opacity: 0, y: 20 }}\n// //         animate={{ opacity: 1, y: 0 }}\n// //         transition={{ duration: 0.5, delay: 0.8 }}\n// //       >\n// //         <button\n// //           onClick={() => {\n// //             updateChargingStatus(false);\n// //             router.push(\"/\");\n// //           }}\n// //           className=\"text-white/90 text-sm font-medium flex items-center\"\n// //         >\n// //           {bmsData.SOC}% Charged\n// //         </button>\n// //       </motion.div>\n// //       {/* <div className=\"w-full px-12 mt-7 grid grid-cols-2 gap-6\">\n// //         {[\n// //           { label: \"Energy\", value: `${energyConsumed.toFixed(5)} kWh` },\n// //           { label: \"Time Remaining\", value: `${timeLeft.hours}h ${timeLeft.minutes}m ${timeLeft.seconds}s` },\n// //           { label: \"Charging Current\", value: `${bmsData.current?.toFixed(2) ?? \"0.00\"} A` },\n// //           { label: \"Power\", value: `${(chargingPower / 1000).toFixed(5)} kW` },\n// //         ].map((item, index) => (\n// //           <motion.div\n// //             key={index}\n// //             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center transition-all duration-300 hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] hover:bg-black/30\"\n// //             initial={{ opacity: 0, y: 20 }}\n// //             animate={{ opacity: 1, y: 0 }}\n// //             transition={{ duration: 0.5, delay: 1.0 + index * 0.2 }}\n// //           >\n// //             {item.label}: <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">{item.value}</span>\n// //           </motion.div>\n// //         ))}\n// //       </div> */}\n// // <div className=\"w-full px-12 mt-7\">\n// //   <div className=\"grid grid-cols-2 gap-6\">\n// //     {/* Energy */}\n// //     <motion.div\n// //       className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n// //       initial={{ opacity: 0, y: 20 }}\n// //       animate={{ opacity: 1, y: 0 }}\n// //       transition={{ duration: 0.5, delay: 1.0 }}\n// //     >\n// //       <span className=\"text-nowrap\">Energy: </span>\n// //       <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n// //         {energyConsumed.toFixed(5)} kWh\n// //       </span>\n// //     </motion.div>\n// //     {/* Time Remaining */}\n// //     <motion.div\n// //       className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n// //       initial={{ opacity: 0, y: 20 }}\n// //       animate={{ opacity: 1, y: 0 }}\n// //       transition={{ duration: 0.5, delay: 1.2 }}\n// //     >\n// //       Time Remaining:{\" \"}\n// //       <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n// //         {formatTime(timeLeft.hours)}:{formatTime(timeLeft.minutes)}:{formatTime(timeLeft.seconds)}\n// //       </span>\n// //     </motion.div>\n// //     {/* Charging Current */}\n// //     <motion.div\n// //       className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n// //       initial={{ opacity: 0, y: 20 }}\n// //       animate={{ opacity: 1, y: 0 }}\n// //       transition={{ duration: 0.5, delay: 1.4 }}\n// //     >\n// //       Charging Current:{\" \"}\n// //       <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n// //         {bmsData?.current?.toFixed(2) ?? \"0.00\"} A\n// //       </span>\n// //     </motion.div>\n// //     {/* Power */}\n// //     <motion.div\n// //       className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n// //       initial={{ opacity: 0, y: 20 }}\n// //       animate={{ opacity: 1, y: 0 }}\n// //       transition={{ duration: 0.5, delay: 1.6 }}\n// //     >\n// //       Power:{\" \"}\n// //       <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n// //         {(chargingPower / 1000).toFixed(5)} kW\n// //       </span>\n// //     </motion.div>\n// //   </div>\n// // </div>\n// //     </div>\n//   //   );\n//   const formatTime = (value: number): string => {\n//     return value.toString().padStart(2, '0');\n//   };\n//   return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex justify-center items-center p-1 pt-20 w-full px-8\">\n//         <motion.div\n//           className=\"text-white/90 text-5xl font-medium tracking-wider relative group\"\n//           initial={{ opacity: 0, x: -20 }}\n//           animate={{ opacity: 1, x: 0 }}\n//           transition={{ duration: 0.5, delay: 0.6 }}\n//         >\n//           <div\n//             className={`${poppins.className} relative ${\n//               bmsData?.isReceiverCoilDetected ? \"\" : \"text-white\"\n//             }`}\n//           >\n//             {bmsData?.isReceiverCoilDetected ? (\n//               bmsData?.current <= 0 ? (\n//                 \"Charging Paused\"\n//               ) : (\n//                 \"Charging\"\n//               )\n//             ) : (\n//               <div className=\"flex items-center gap-3\">\n//                 <span>Park your vehicle</span>\n//                 <span className=\"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\">\n//                   {Math.floor(parkCountdown / 60)}:\n//                   {(parkCountdown % 60).toString().padStart(2, \"0\")}\n//                 </span>\n//               </div>\n//             )}\n//           </div>\n//         </motion.div>\n//       </div>\n//       {bmsData?.isFOD && <FODDialog />}\n//       {bmsData?.isMiss && <MissDialog />}\n//       <div className=\"flex justify-center items-center w-full h-80 relative mt-10\">\n//         <WaveCharging\n//           percentage={bmsData?.SOC || 0}\n//           waveColor={waveColor}\n//           backgroundColor=\"rgba(255, 255, 255, 0.1)\"\n//           size={200}\n//         />\n//       </div>\n//       <div className=\"flex w-full justify-center items-center mb-4\">\n//         <div className=\"flex-col justify-center items-center gap-36\">\n//           <motion.div\n//             initial={{ x: 768 }}\n//             animate={{ x: 0 }}\n//             key={bmsData?.isReceiverCoilDetected ? \"parked\" : \"not-parked\"}\n//             transition={{\n//               duration: 5,\n//               type: \"spring\",\n//               stiffness: 100,\n//               damping: 100,\n//               repeat: bmsData?.isReceiverCoilDetected ? 0 : Infinity,\n//             }}\n//           >\n//             <Image\n//               src=\"/charge-bike.png\"\n//               alt=\"Charger pad\"\n//               width={500}\n//               height={300}\n//               className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//             />\n//           </motion.div>\n//           <div className=\"flex w-full items-center justify-center\">\n//             <Image\n//               src=\"/charge-pad.png\"\n//               alt=\"Charger pad\"\n//               width={200}\n//               height={100}\n//               className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//             />\n//           </div>\n//         </div>\n//       </div>\n//       <motion.div\n//         className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10 mt-6\"\n//         initial={{ opacity: 0, y: 20 }}\n//         animate={{ opacity: 1, y: 0 }}\n//         transition={{ duration: 0.5, delay: 0.8 }}\n//       >\n//         <button\n//           onClick={() => {\n//             updateChargingStatus(false);\n//             router.push(\"/\");\n//           }}\n//           className=\"text-white/90 text-sm font-medium flex items-center\"\n//         >\n//           {bmsData.SOC}% Charged\n//         </button>\n//       </motion.div>\n//       <div className=\"w-full px-12 mt-7\">\n//         <div className=\"grid grid-cols-2 gap-6\">\n//           {/* Energy */}\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"text-nowrap\">Energy: </span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300 text-nowrap\">\n//               {energyConsumed.toFixed(5)} kWh\n//             </span>\n//           </motion.div>\n//           {/* Time Remaining */}\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             Time Remaining:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {formatTime(timeLeft.hours)}:{formatTime(timeLeft.minutes)}:{formatTime(timeLeft.seconds)}\n//             </span>\n//           </motion.div>\n//           {/* Charging Current */}\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             Charging Current:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {bmsData?.current?.toFixed(2) ?? \"0.00\"} A\n//             </span>\n//           </motion.div>\n//           {/* Power */}\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-8 py-4 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-xl font-bold w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             Power:{\" \"}\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {(chargingPower / 1000).toFixed(5)} kW\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n///last comment k upar wala comment shai hai\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus, isChargingInitialized } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useMemo, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// import FODDialog from \"../../../components/FODDialog\";\n// import MissDialog from \"../../../components/MissDialog\";\n// import Image from \"next/image\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus } = useChargingStatus();\n//   const [timerOver, setTimerOver] = useState(false);\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({\n//     hours: 0,\n//     minutes: 0,\n//     seconds: 0,\n//   });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime || !bmsData?.isReceiverCoilDetected) return;\n//     const interval = setInterval(() => {\n//       const now = Date.now();\n//       const remaining = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remaining / (1000 * 60 * 60)),\n//         minutes: Math.floor((remaining % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remaining % (1000 * 60)) / 1000),\n//       });\n//       if (remaining <= 0) {\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           router.push(\"/\");\n//         });\n//       }\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router, bmsData?.isReceiverCoilDetected]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   const [isIssueDetected, setIsIssueDetected] = useState({\n//     isFOD: false,\n//     isMiss: false,\n//   });\n//   useEffect(() => {\n//     if (timerOver) return; // ⬅️ Skip logic if timer is done\n//     const isFOD = bmsData?.isFOD;\n//     const isMiss = bmsData?.isMiss;\n//     const isReceiverDetected = bmsData?.isReceiverCoilDetected;\n//     if (isFOD || isMiss) {\n//       updateChargingStatus(false);\n//       // setIsIssueDetected({ isFOD, isMiss });\n//       setIsIssueDetected({ isFOD: isFOD ?? false, isMiss: isMiss ?? false });\n//     } else if (isReceiverDetected && !isFOD && !isMiss) {\n//       updateChargingStatus(true);\n//       setIsIssueDetected({ isFOD: false, isMiss: false });\n//     }\n//   }, [\n//     bmsData?.isFOD,\n//     bmsData?.isMiss,\n//     bmsData?.isReceiverCoilDetected,\n//     updateChargingStatus,\n//     timerOver, // ⬅️ Include this in deps\n//   ]);\n//   const waveColor = useMemo(() => {\n//     const soc = bmsData?.SOC;\n//     if (soc >= 100) return \"rgba(52, 199, 89, 0.7)\";\n//     if (soc >= 75) return \"rgba(0, 122, 255, 0.7)\";\n//     if (soc >= 50) return \"rgba(255, 204, 0, 0.7)\";\n//     if (soc >= 25) return \"rgba(255, 59, 48, 0.7)\";\n//     return \"rgba(255, 59, 48, 0.7)\";\n//   }, [bmsData?.SOC]);\n//   const [parkCountdown, setParkCountdown] = useState(60);\n//   useEffect(() => {\n//     let interval: NodeJS.Timeout;\n//     if (!bmsData?.isReceiverCoilDetected) {\n//       if (parkCountdown === 0) {\n//         // Countdown is over, redirect to home\n//         router.push(\"/\");\n//         return;\n//       }\n//       // Start countdown\n//       interval = setInterval(() => {\n//         setParkCountdown((prev) => {\n//           if (prev <= 1) {\n//             clearInterval(interval);\n//             router.push(\"/\");\n//             return 0;\n//           }\n//           return prev - 1;\n//         });\n//       }, 1000);\n//     } else {\n//       // Reset countdown if receiver coil is detected\n//       setParkCountdown(60);\n//     }\n//     return () => clearInterval(interval);\n//   }, [bmsData?.isReceiverCoilDetected, parkCountdown, router]);\n//   const formatTime = (value: number): string => {\n//     return value.toString().padStart(2, \"0\");\n//   };\n//   return (\n//     <div\n//       className=\"w-full h-screen overflow-hidden bg-black font-sans\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex flex-col items-center justify-between h-full pb-6 pt-12\">\n//         {/* Header section */}\n//         <div className=\"flex flex-col items-center w-full\">\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider mb-6\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             {/* <span className={`relative ${bmsData?.isReceiverCoilDetected ? \"\" : \"text-white\"}`}>\n//               {bmsData?.isReceiverCoilDetected ? (\n//                 bmsData?.current <= 0 ? \"Charging Paused\" : \"Initializing Charging\"\n//               ) : (\n//                 <div className=\"flex items-center gap-3\">\n//                   <span>Park your vehicle</span>\n//                   <span className=\"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\">\n//                     {Math.floor(parkCountdown / 60)}:{(parkCountdown % 60).toString().padStart(2, \"0\")}\n//                   </span>\n//                 </div>\n//               )}\n//             </span> */}\n//           <span className={`relative ${bmsData?.isReceiverCoilDetected ? \"\" : \"text-white\"}`}>\n//             {bmsData?.isReceiverCoilDetected ? (\n//               isChargingInitialized ? (\n//                 bmsData?.current <= 0 ? (\n//                   \"Charging Paused\"\n//                 ) : (\n//                   \"Charging\"\n//                 )\n//               ) : (\n//                 \"Initializing Charging\"\n//               )\n//             ) : (\n//               <div className=\"flex items-center gap-3\">\n//                 <span>Park your vehicle</span>\n//                 <span className=\"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\">\n//                   {Math.floor(parkCountdown / 60)}:{(parkCountdown % 60).toString().padStart(2, \"0\")}\n//                 </span>\n//               </div>\n//             )}\n//           </span>\n//           </motion.div>\n//           {/* Charge percentage pill */}\n//           <motion.div\n//             className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10 mb-6\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 0.8 }}\n//           >\n//             <button\n//               onClick={() => {\n//                 updateChargingStatus(false);\n//                 router.push(\"/\");\n//               }}\n//               className=\"text-white/90 text-sm font-medium flex items-center\"\n//             >\n//               {bmsData?.SOC || 48}% Charged\n//             </button>\n//             <svg\n//               width=\"14\"\n//               height=\"14\"\n//               viewBox=\"0 0 24 24\"\n//               fill=\"none\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"text-cyan-400\"\n//             >\n//               <path\n//                 d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n//                 stroke=\"currentColor\"\n//                 strokeWidth=\"2\"\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//               />\n//             </svg>\n//           </motion.div>\n//         </div>\n//         {/* Alerts and Dialogs */}\n//         <div>\n//         {bmsData?.isFOD && <FODDialog />}\n//         {bmsData?.isMiss && <MissDialog />}\n//         </div>\n//         {/* Charging indicator and vehicle section */}\n//         <div className=\"flex flex-col items-center justify-center flex-grow\">\n//           {/* Charging wave animation */}\n//           <div className=\"relative mb-8\">\n//             <WaveCharging\n//               percentage={bmsData?.SOC || 48}\n//               waveColor={waveColor}\n//               backgroundColor=\"rgba(255, 255, 255, 0.1)\"\n//               size={200}\n//             />\n//             <div className=\"absolute inset-0 flex items-center justify-center text-white text-4xl font-medium\">\n//               {bmsData?.SOC || 48}%\n//             </div>\n//           </div>\n//           {/* Vehicle and charging pad */}\n//           <div className=\"relative flex flex-col items-center\">\n//             <motion.div\n//               initial={{ x: 200 }}\n//               animate={{ x: 0 }}\n//               key={bmsData?.isReceiverCoilDetected ? \"parked\" : \"not-parked\"}\n//               transition={{\n//                 duration: 2,\n//                 type: \"spring\",\n//                 stiffness: 100,\n//                 damping: 20,\n//                 repeat: bmsData?.isReceiverCoilDetected ? 0 : Infinity,\n//                 repeatType: \"reverse\"\n//               }}\n//               className=\"mb-4\"\n//             >\n//               <Image\n//                 src=\"/charge-bike.png\"\n//                 alt=\"Electric scooter\"\n//                 width={300}\n//                 height={180}\n//                 className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//               />\n//             </motion.div>\n//             <div className=\"relative\">\n//               <Image\n//                 src=\"/charge-pad.png\"\n//                 alt=\"Charger pad\"\n//                 width={150}\n//                 height={20}\n//                 className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//               />\n//               <div className=\"absolute inset-0 rounded-full border-2 border-cyan-500/30 animate-ping\"></div>\n//             </div>\n//           </div>\n//         </div>\n//         {/* Stats grid */}\n//         <div className=\"grid grid-cols-2 gap-4 w-full max-w-xl px-4 mt-8\">\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-4 py-3 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-lg font-medium w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"block\">Energy:</span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {energyConsumed?.toFixed(5) || \"0.00000\"} kWh\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-4 py-3 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-lg font-medium w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             <span className=\"block\">Time Remaining:</span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {formatTime(timeLeft?.hours || 0)}:{formatTime(timeLeft?.minutes || 59)}:\n//               {formatTime(timeLeft?.seconds || 45)}\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-4 py-3 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-lg font-medium w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             <span className=\"block\">Charging Current:</span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {(bmsData?.current || 0).toFixed(2)} A\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-4 py-3 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-lg font-medium w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             <span className=\"block\">Power:</span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {((chargingPower || 0) / 1000).toFixed(1)} W\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n//after app\n// \"use client\";\n// import { motion } from \"framer-motion\";\n// import { useChargingStatus, isChargingInitialized } from \"../../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";\n// import WaveCharging from \"../../../components/WaveCharging\";\n// import { useEffect, useMemo, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { Poppins } from \"next/font/google\";\n// import FODDialog from \"../../../components/FODDialog\";\n// import MissDialog from \"../../../components/MissDialog\";\n// import Image from \"next/image\";\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\n// export default function ChargePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus, isChargingInitialized } = useChargingStatus();\n//   const [timerOver, setTimerOver] = useState(false);\n//   const { bmsData, chargingPower } = useBMSData();\n//   const { endTime } = useTimerStatus();\n//   const [timeLeft, setTimeLeft] = useState({\n//     hours: 0,\n//     minutes: 0,\n//     seconds: 0,\n//   });\n//   const [energyConsumed, setEnergyConsumed] = useState(0);\n//   useEffect(() => {\n//     if (!endTime || !bmsData?.isReceiverCoilDetected) return;\n//     const interval = setInterval(() => {\n//       const now = Date.now();\n//       const remaining = Math.max(0, endTime - now);\n//       setTimeLeft({\n//         hours: Math.floor(remaining / (1000 * 60 * 60)),\n//         minutes: Math.floor((remaining % (1000 * 60 * 60)) / (1000 * 60)),\n//         seconds: Math.floor((remaining % (1000 * 60)) / 1000),\n//       });\n//       if (remaining <= 0) {\n//         clearInterval(interval);\n//         updateChargingStatus(false).then(() => {\n//           router.push(\"/\");\n//         });\n//       }\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, [endTime, updateChargingStatus, router, bmsData?.isReceiverCoilDetected]);\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected && bmsData.current > 0) {\n//       const interval = setInterval(() => {\n//         setEnergyConsumed((prev) => prev + chargingPower / 1000 / 3600);\n//       }, 1000);\n//       return () => clearInterval(interval);\n//     }\n//   }, [bmsData, chargingPower]);\n//   const [isIssueDetected, setIsIssueDetected] = useState({\n//     isFOD: false,\n//     isMiss: false,\n//   });\n//   useEffect(() => {\n//     if (timerOver) return; // ⬅️ Skip logic if timer is done\n//     const isFOD = bmsData?.isFOD;\n//     const isMiss = bmsData?.isMiss;\n//     const isReceiverDetected = bmsData?.isReceiverCoilDetected;\n//     if (isFOD || isMiss) {\n//       updateChargingStatus(false);\n//       // setIsIssueDetected({ isFOD, isMiss });\n//       setIsIssueDetected({ isFOD: isFOD ?? false, isMiss: isMiss ?? false });\n//     } else if (isReceiverDetected && !isFOD && !isMiss) {\n//       updateChargingStatus(true);\n//       setIsIssueDetected({ isFOD: false, isMiss: false });\n//     }\n//   }, [\n//     bmsData?.isFOD,\n//     bmsData?.isMiss,\n//     bmsData?.isReceiverCoilDetected,\n//     updateChargingStatus,\n//     timerOver, // ⬅️ Include this in deps\n//   ]);\n//   const waveColor = useMemo(() => {\n//     const soc = bmsData?.SOC;\n//     if (soc >= 100) return \"rgba(52, 199, 89, 0.7)\";\n//     if (soc >= 75) return \"rgba(0, 122, 255, 0.7)\";\n//     if (soc >= 50) return \"rgba(255, 204, 0, 0.7)\";\n//     if (soc >= 25) return \"rgba(255, 59, 48, 0.7)\";\n//     return \"rgba(255, 59, 48, 0.7)\";\n//   }, [bmsData?.SOC]);\n//   const [parkCountdown, setParkCountdown] = useState(60);\n//   useEffect(() => {\n//     let interval: NodeJS.Timeout;\n//     if (!bmsData?.isReceiverCoilDetected) {\n//       if (parkCountdown === 0) {\n//         // Countdown is over, redirect to home\n//         router.push(\"/\");\n//         return;\n//       }\n//       // Start countdown\n//       interval = setInterval(() => {\n//         setParkCountdown((prev) => {\n//           if (prev <= 1) {\n//             clearInterval(interval);\n//             router.push(\"/\");\n//             return 0;\n//           }\n//           return prev - 1;\n//         });\n//       }, 1000);\n//     } else {\n//       // Reset countdown if receiver coil is detected\n//       setParkCountdown(60);\n//     }\n//     return () => clearInterval(interval);\n//   }, [bmsData?.isReceiverCoilDetected, parkCountdown, router]);\n//   const formatTime = (value: number): string => {\n//     return value.toString().padStart(2, \"0\");\n//   };\n//   const chargingStatusText = useMemo(() => {\n//     if (!bmsData?.isReceiverCoilDetected) {\n//       return (\n//         <div className=\"flex items-center gap-3\">\n//           <span>Park your vehicle</span>\n//           <span className=\"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\">\n//             {Math.floor(parkCountdown / 60)}:{(parkCountdown % 60).toString().padStart(2, \"0\")}\n//           </span>\n//         </div>\n//       );\n//     }\n//     if (!isChargingInitialized) return \"Initializing Charging\";\n//     if (bmsData.current <= 0) return \"Charging Paused\";\n//     return \"Charging\";\n//   }, [bmsData, parkCountdown, isChargingInitialized]);\n//   return (\n//     <div\n//       className=\"w-full h-screen overflow-hidden bg-black font-sans\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex flex-col items-center justify-between h-full pb-6 pt-12\">\n//         {/* Header section */}\n//         <div className=\"flex flex-col items-center w-full\">\n//           <motion.div\n//             className=\"text-white/90 text-5xl font-medium tracking-wider mb-6\"\n//             initial={{ opacity: 0, x: -20 }}\n//             animate={{ opacity: 1, x: 0 }}\n//             transition={{ duration: 0.5, delay: 0.6 }}\n//           >\n//             <span className={`relative ${bmsData?.isReceiverCoilDetected ? \"\" : \"text-white\"}`}>\n//               {bmsData?.isReceiverCoilDetected ? (\n//                 bmsData?.current <= 0 ? \"Charging Paused\" : \"Initializing Charging\"\n//               ) : (\n//                 <div className=\"flex items-center gap-3\">\n//                   <span>Park your vehicle</span>\n//                   <span className=\"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\">\n//                     {Math.floor(parkCountdown / 60)}:{(parkCountdown % 60).toString().padStart(2, \"0\")}\n//                   </span>\n//                 </div>\n//               )}\n//             </span>\n//           <span className={`relative ${bmsData?.isReceiverCoilDetected ? \"\" : \"text-white\"}`}>\n//             {bmsData?.isReceiverCoilDetected ? (\n//               isChargingInitialized ? (\n//                 bmsData?.current <= 0 ? (\n//                   \"Charging Paused\"\n//                 ) : (\n//                   \"Charging\"\n//                 )\n//               ) : (\n//                 \"Initializing Charging\"\n//               )\n//             ) : (\n//               <div className=\"flex items-center gap-3\">\n//                 <span>Park your vehicle</span>\n//                 <span className=\"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\">\n//                   {Math.floor(parkCountdown / 60)}:{(parkCountdown % 60).toString().padStart(2, \"0\")}\n//                 </span>\n//               </div>\n//             )}\n//           </span>\n//           <span className=\"relative\">{chargingStatusText}</span>\n//           </motion.div>\n//           {/* Charge percentage pill */}\n//           <motion.div\n//             className=\"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg shadow-cyan-500/10 mb-6\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 0.8 }}\n//           >\n//             <button\n//               onClick={() => {\n//                 updateChargingStatus(false);\n//                 router.push(\"/\");\n//               }}\n//               className=\"text-white/90 text-sm font-medium flex items-center\"\n//             >\n//               {bmsData?.SOC || 48}% Charged\n//             </button>\n//             <svg\n//               width=\"14\"\n//               height=\"14\"\n//               viewBox=\"0 0 24 24\"\n//               fill=\"none\"\n//               xmlns=\"http://www.w3.org/2000/svg\"\n//               className=\"text-cyan-400\"\n//             >\n//               <path\n//                 d=\"M13 2L4.09347 12.6879C3.74466 13.1064 3.57026 13.3157 3.56759 13.4925C3.56526 13.6461 3.63373 13.7923 3.75326 13.8889C3.89075 14 4.16318 14 4.70803 14H12L11 22L19.9065 11.3121C20.2553 10.8936 20.4297 10.6843 20.4324 10.5075C20.4347 10.3539 20.3663 10.2077 20.2467 10.1111C20.1092 10 19.8368 10 19.292 10H12L13 2Z\"\n//                 stroke=\"currentColor\"\n//                 strokeWidth=\"2\"\n//                 strokeLinecap=\"round\"\n//                 strokeLinejoin=\"round\"\n//               />\n//             </svg>\n//           </motion.div>\n//         </div>\n//         {/* Alerts and Dialogs */}\n//         <div>\n//         {bmsData?.isFOD && <FODDialog />}\n//         {bmsData?.isMiss && <MissDialog />}\n//         </div>\n//         {/* Charging indicator and vehicle section */}\n//         <div className=\"flex flex-col items-center justify-center flex-grow\">\n//           {/* Charging wave animation */}\n//           <div className=\"relative mb-8\">\n//             <WaveCharging\n//               percentage={bmsData?.SOC || 48}\n//               waveColor={waveColor}\n//               backgroundColor=\"rgba(255, 255, 255, 0.1)\"\n//               size={200}\n//             />\n//             <div className=\"absolute inset-0 flex items-center justify-center text-white text-4xl font-medium\">\n//               {bmsData?.SOC || 48}%\n//             </div>\n//           </div>\n//           {/* Vehicle and charging pad */}\n//           <div className=\"relative flex flex-col items-center\">\n//             <motion.div\n//               initial={{ x: 200 }}\n//               animate={{ x: 0 }}\n//               key={bmsData?.isReceiverCoilDetected ? \"parked\" : \"not-parked\"}\n//               transition={{\n//                 duration: 2,\n//                 type: \"spring\",\n//                 stiffness: 100,\n//                 damping: 20,\n//                 repeat: bmsData?.isReceiverCoilDetected ? 0 : Infinity,\n//                 repeatType: \"reverse\"\n//               }}\n//               className=\"mb-4\"\n//             >\n//               <Image\n//                 src=\"/charge-bike.png\"\n//                 alt=\"Electric scooter\"\n//                 width={300}\n//                 height={180}\n//                 className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//               />\n//             </motion.div>\n//             <div className=\"relative\">\n//               <Image\n//                 src=\"/charge-pad.png\"\n//                 alt=\"Charger pad\"\n//                 width={150}\n//                 height={20}\n//                 className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//               />\n//               <div className=\"absolute inset-0 rounded-full border-2 border-cyan-500/30 animate-ping\"></div>\n//             </div>\n//           </div>\n//         </div>\n//         {/* Stats grid */}\n//         <div className=\"grid grid-cols-2 gap-4 w-full max-w-xl px-4 mt-8\">\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-4 py-3 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-lg font-medium w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.0 }}\n//           >\n//             <span className=\"block\">Energy:</span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {energyConsumed?.toFixed(5) || \"0.00000\"} kWh\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-4 py-3 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-lg font-medium w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.2 }}\n//           >\n//             <span className=\"block\">Time Remaining:</span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {formatTime(timeLeft?.hours || 0)}:{formatTime(timeLeft?.minutes || 0)}:\n//               {formatTime(timeLeft?.seconds || 0)}\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-4 py-3 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-lg font-medium w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.4 }}\n//           >\n//             <span className=\"block\">Charging Current:</span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {(bmsData?.current || 0).toFixed(2)} A\n//             </span>\n//           </motion.div>\n//           <motion.div\n//             className=\"group shadow-[0_0_0_1px_rgba(255,255,255,0.1)_inset] px-4 py-3 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-lg font-medium w-full text-center hover:shadow-[0_0_0_1px_rgba(6,182,212,0.2)_inset] transition-all duration-300 hover:bg-black/30\"\n//             initial={{ opacity: 0, y: 20 }}\n//             animate={{ opacity: 1, y: 0 }}\n//             transition={{ duration: 0.5, delay: 1.6 }}\n//           >\n//             <span className=\"block\">Power:</span>\n//             <span className=\"group-hover:text-cyan-400/90 transition-colors duration-300\">\n//               {((chargingPower || 0) / 1000).toFixed(1)} W\n//             </span>\n//           </motion.div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n//after final fix\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n// const poppins = Poppins({ subsets: [\"latin\"], weight: [\"500\"] });\nfunction ChargePage() {\n    _s();\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const { updateChargingStatus, isChargingInitialized } = (0,_hooks_useChargingStatus__WEBPACK_IMPORTED_MODULE_3__.useChargingStatus)();\n    const { bmsData, chargingPower } = (0,_hooks_useBMSData__WEBPACK_IMPORTED_MODULE_4__.useBMSData)();\n    const { endTime } = (0,_hooks_useTimerStatus__WEBPACK_IMPORTED_MODULE_5__.useTimerStatus)();\n    const [timeLeft, setTimeLeft] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n    });\n    const [energyConsumed, setEnergyConsumed] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [parkCountdown, setParkCountdown] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(60);\n    const parkCountdownRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(60);\n    const [timerOver, setTimerOver] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [isIssueDetected, setIsIssueDetected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        isFOD: false,\n        isMiss: false\n    });\n    // Timer for session\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChargePage.useEffect\": ()=>{\n            console.log(\"🔥 useEffect triggered\");\n            console.log(\"🧪 endTime:\", endTime);\n            console.log(\"🧪 bmsData?.isReceiverCoilDetected:\", bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected);\n            if (!endTime || !(bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected)) {\n                console.log(\"🚫 Skipping timer setup due to missing conditions\");\n                return;\n            }\n            const interval = setInterval({\n                \"ChargePage.useEffect.interval\": ()=>{\n                    const now = Date.now();\n                    const remaining = Math.max(0, endTime - now);\n                    console.log(\"⏱️ Timer tick:\", new Date().toLocaleTimeString(), \"Remaining:\", remaining);\n                    setTimeLeft({\n                        hours: Math.floor(remaining / 3600000),\n                        minutes: Math.floor(remaining % 3600000 / 60000),\n                        seconds: Math.floor(remaining % 60000 / 1000)\n                    });\n                    if (remaining <= 0) {\n                        clearInterval(interval);\n                        setTimerOver(true); //change\n                        updateChargingStatus(false).catch({\n                            \"ChargePage.useEffect.interval\": (err)=>console.error(\"❌ Failed to update charging status:\", err)\n                        }[\"ChargePage.useEffect.interval\"]).finally({\n                            \"ChargePage.useEffect.interval\": ()=>{\n                                console.log(\"✅ Timer ended. Redirecting to /done\");\n                                router.replace(\"/done\");\n                            }\n                        }[\"ChargePage.useEffect.interval\"]);\n                    }\n                }\n            }[\"ChargePage.useEffect.interval\"], 1000);\n            return ({\n                \"ChargePage.useEffect\": ()=>{\n                    console.log(\"🧹 Cleaning up timer interval\");\n                    clearInterval(interval);\n                }\n            })[\"ChargePage.useEffect\"];\n        }\n    }[\"ChargePage.useEffect\"], [\n        endTime,\n        updateChargingStatus,\n        router,\n        bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected\n    ]);\n    // Energy calculation\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChargePage.useEffect\": ()=>{\n            if ((bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected) && (bmsData === null || bmsData === void 0 ? void 0 : bmsData.current) > 0) {\n                const interval = setInterval({\n                    \"ChargePage.useEffect.interval\": ()=>{\n                        setEnergyConsumed({\n                            \"ChargePage.useEffect.interval\": (prev)=>prev + chargingPower / 1000 / 3600\n                        }[\"ChargePage.useEffect.interval\"]);\n                    }\n                }[\"ChargePage.useEffect.interval\"], 1000);\n                return ({\n                    \"ChargePage.useEffect\": ()=>clearInterval(interval)\n                })[\"ChargePage.useEffect\"];\n            }\n        // }, [bmsData?.isReceiverCoilDetected, bmsData?.current, chargingPower]);\n        }\n    }[\"ChargePage.useEffect\"], [\n        bmsData,\n        chargingPower\n    ]);\n    // Issue Detection\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChargePage.useEffect\": ()=>{\n            if (timerOver) return;\n            const isFOD = !!(bmsData === null || bmsData === void 0 ? void 0 : bmsData.isFOD);\n            const isMiss = !!(bmsData === null || bmsData === void 0 ? void 0 : bmsData.isMiss);\n            const isReceiverDetected = !!(bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected);\n            if (isFOD || isMiss) {\n                updateChargingStatus(false);\n                setIsIssueDetected({\n                    isFOD,\n                    isMiss\n                });\n            } else if (isReceiverDetected && !isFOD && !isMiss) {\n                updateChargingStatus(true);\n                setIsIssueDetected({\n                    isFOD: false,\n                    isMiss: false\n                });\n            }\n        }\n    }[\"ChargePage.useEffect\"], [\n        bmsData === null || bmsData === void 0 ? void 0 : bmsData.isFOD,\n        bmsData === null || bmsData === void 0 ? void 0 : bmsData.isMiss,\n        bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected,\n        updateChargingStatus,\n        timerOver\n    ]);\n    // Park countdown handler\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ChargePage.useEffect\": ()=>{\n            let interval = null;\n            if (!(bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected)) {\n                interval = setInterval({\n                    \"ChargePage.useEffect\": ()=>{\n                        parkCountdownRef.current -= 1;\n                        setParkCountdown(parkCountdownRef.current);\n                        if (parkCountdownRef.current <= 0) {\n                            clearInterval(interval);\n                            router.push(\"/\");\n                        }\n                    }\n                }[\"ChargePage.useEffect\"], 1000);\n            } else {\n                parkCountdownRef.current = 60;\n                setParkCountdown(60);\n            }\n            return ({\n                \"ChargePage.useEffect\": ()=>{\n                    if (interval) clearInterval(interval);\n                }\n            })[\"ChargePage.useEffect\"];\n        }\n    }[\"ChargePage.useEffect\"], [\n        bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected,\n        router\n    ]);\n    // useEffect(() => {\n    //   let interval: NodeJS.Timeout;\n    //   if (!bmsData?.isReceiverCoilDetected) {\n    //     if (parkCountdown === 0) {\n    //       // Countdown is over, redirect to home\n    //       router.push(\"/\");\n    //       return;\n    //     }\n    //     // Start countdown\n    //     interval = setInterval(() => {\n    //       setParkCountdown((prev) => {\n    //         if (prev <= 1) {\n    //           clearInterval(interval);\n    //           router.push(\"/\");\n    //           return 0;\n    //         }\n    //         return prev - 1;\n    //       });\n    //     }, 1000);\n    //   } else {\n    //     // Reset countdown if receiver coil is detected\n    //     setParkCountdown(60);\n    //   }\n    //   return () => clearInterval(interval);\n    // }, [bmsData?.isReceiverCoilDetected, parkCountdown, router]);\n    const formatTime = (val)=>val.toString().padStart(2, \"0\");\n    const waveColor = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ChargePage.useMemo[waveColor]\": ()=>{\n            var _bmsData_SOC;\n            const soc = (_bmsData_SOC = bmsData === null || bmsData === void 0 ? void 0 : bmsData.SOC) !== null && _bmsData_SOC !== void 0 ? _bmsData_SOC : 0;\n            if (soc >= 100) return \"rgba(52, 199, 89, 0.7)\";\n            if (soc >= 75) return \"rgba(0, 122, 255, 0.7)\";\n            if (soc >= 50) return \"rgba(255, 204, 0, 0.7)\";\n            return \"rgba(255, 59, 48, 0.7)\";\n        }\n    }[\"ChargePage.useMemo[waveColor]\"], [\n        bmsData === null || bmsData === void 0 ? void 0 : bmsData.SOC\n    ]);\n    const chargingStatusText = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)({\n        \"ChargePage.useMemo[chargingStatusText]\": ()=>{\n            if (!(bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected)) {\n                return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex items-center gap-3\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            children: \"Park your vehicle\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                            lineNumber: 4170,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"text-red-400 font-mono bg-red-500/10 px-3 py-0.5 rounded-md border border-red-500/20\",\n                            children: [\n                                Math.floor(parkCountdown / 60),\n                                \":\",\n                                formatTime(parkCountdown % 60)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                            lineNumber: 4171,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                    lineNumber: 4169,\n                    columnNumber: 9\n                }, this);\n            }\n            if (!isChargingInitialized) return \"Initializing Charging\";\n            if ((bmsData === null || bmsData === void 0 ? void 0 : bmsData.current) <= 0) return \"Charging Paused\";\n            return \"Charging\";\n        }\n    }[\"ChargePage.useMemo[chargingStatusText]\"], [\n        bmsData,\n        isChargingInitialized,\n        parkCountdown\n    ]);\n    var _bmsData_SOC, _bmsData_SOC1, _bmsData_current;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-screen overflow-hidden bg-black font-sans\",\n        style: {\n            backgroundImage: \"url(/main-bg.png)\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-col items-center justify-between h-full pb-6 pt-12\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_9__.motion.div, {\n                    className: \"text-white/90 text-5xl font-medium tracking-wider mb-6\",\n                    initial: {\n                        opacity: 0,\n                        x: -20\n                    },\n                    animate: {\n                        opacity: 1,\n                        x: 0\n                    },\n                    transition: {\n                        duration: 0.5,\n                        delay: 0.6\n                    },\n                    children: chargingStatusText\n                }, void 0, false, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                    lineNumber: 4186,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_9__.motion.div, {\n                    className: \"inline-flex items-center gap-2 px-4 py-2 bg-black/60 backdrop-blur-md rounded-full border border-white/5 shadow-lg mb-6\",\n                    initial: {\n                        opacity: 0,\n                        y: 20\n                    },\n                    animate: {\n                        opacity: 1,\n                        y: 0\n                    },\n                    transition: {\n                        duration: 0.5,\n                        delay: 0.8\n                    },\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>{\n                            updateChargingStatus(false);\n                            router.push(\"/\");\n                        },\n                        className: \"text-white/90 text-sm font-medium flex items-center\",\n                        children: [\n                            (_bmsData_SOC = bmsData === null || bmsData === void 0 ? void 0 : bmsData.SOC) !== null && _bmsData_SOC !== void 0 ? _bmsData_SOC : 48,\n                            \"% Charged\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                        lineNumber: 4192,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                    lineNumber: 4191,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    children: [\n                        (bmsData === null || bmsData === void 0 ? void 0 : bmsData.isFOD) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_FODDialog__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {}, void 0, false, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                            lineNumber: 4205,\n                            columnNumber: 28\n                        }, this),\n                        (bmsData === null || bmsData === void 0 ? void 0 : bmsData.isMiss) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_MissDialog__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {}, void 0, false, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                            lineNumber: 4206,\n                            columnNumber: 29\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                    lineNumber: 4204,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex flex-col items-center justify-center flex-grow\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative mb-8\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"absolute inset-0 flex items-center justify-center text-white text-4xl font-medium\",\n                                children: [\n                                    (_bmsData_SOC1 = bmsData === null || bmsData === void 0 ? void 0 : bmsData.SOC) !== null && _bmsData_SOC1 !== void 0 ? _bmsData_SOC1 : 48,\n                                    \"%\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                                lineNumber: 4215,\n                                columnNumber: 13\n                            }, this)\n                        }, void 0, false, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                            lineNumber: 4211,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative flex flex-col items-center\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_9__.motion.div, {\n                                    initial: {\n                                        x: 200\n                                    },\n                                    animate: {\n                                        x: 0\n                                    },\n                                    transition: {\n                                        duration: 2,\n                                        type: \"spring\",\n                                        stiffness: 100,\n                                        damping: 20,\n                                        repeat: (bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected) ? 0 : Infinity,\n                                        repeatType: \"reverse\"\n                                    },\n                                    className: \"mb-4\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                        src: \"/charge-bike.png\",\n                                        alt: \"Electric scooter\",\n                                        width: 300,\n                                        height: 180,\n                                        className: \"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n                                    }, void 0, false, {\n                                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                                        lineNumber: 4229,\n                                        columnNumber: 15\n                                    }, this)\n                                }, (bmsData === null || bmsData === void 0 ? void 0 : bmsData.isReceiverCoilDetected) ? \"detected\" : \"not-detected\", false, {\n                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                                    lineNumber: 4222,\n                                    columnNumber: 13\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"relative\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                                            src: \"/charge-pad.png\",\n                                            alt: \"Charger pad\",\n                                            width: 150,\n                                            height: 20,\n                                            className: \"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                                            lineNumber: 4232,\n                                            columnNumber: 15\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"absolute inset-0 rounded-full border-2 border-cyan-500/30 animate-ping\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                                            lineNumber: 4233,\n                                            columnNumber: 15\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                                    lineNumber: 4231,\n                                    columnNumber: 13\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                            lineNumber: 4221,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                    lineNumber: 4210,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"grid grid-cols-2 gap-4 w-full max-w-xl px-4 mt-8\",\n                    children: [\n                        {\n                            label: \"Energy\",\n                            value: \"\".concat(energyConsumed.toFixed(5), \" kWh\")\n                        },\n                        {\n                            label: \"Time Remaining\",\n                            value: \"\".concat(formatTime(timeLeft.hours), \":\").concat(formatTime(timeLeft.minutes), \":\").concat(formatTime(timeLeft.seconds))\n                        },\n                        {\n                            label: \"Charging Current\",\n                            value: \"\".concat(((_bmsData_current = bmsData === null || bmsData === void 0 ? void 0 : bmsData.current) !== null && _bmsData_current !== void 0 ? _bmsData_current : 0).toFixed(2), \" A\")\n                        },\n                        {\n                            label: \"Power\",\n                            value: \"\".concat(((chargingPower !== null && chargingPower !== void 0 ? chargingPower : 0) / 1000).toFixed(1), \" W\")\n                        }\n                    ].map((stat, idx)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(framer_motion__WEBPACK_IMPORTED_MODULE_9__.motion.div, {\n                            className: \"group px-4 py-3 bg-black/20 backdrop-blur-sm rounded-lg text-gray-400 text-lg font-medium text-center hover:bg-black/30 transition-all duration-300\",\n                            initial: {\n                                opacity: 0,\n                                y: 20\n                            },\n                            animate: {\n                                opacity: 1,\n                                y: 0\n                            },\n                            transition: {\n                                duration: 0.5,\n                                delay: 1 + idx * 0.2\n                            },\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"block\",\n                                    children: [\n                                        stat.label,\n                                        \":\"\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                                    lineNumber: 4253,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                    className: \"group-hover:text-cyan-400/90 transition-colors duration-300\",\n                                    children: stat.value\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                                    lineNumber: 4254,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, stat.label, true, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                            lineNumber: 4246,\n                            columnNumber: 13\n                        }, this))\n                }, void 0, false, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n                    lineNumber: 4239,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n            lineNumber: 4184,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\charge\\\\page.tsx\",\n        lineNumber: 4183,\n        columnNumber: 5\n    }, this);\n}\n_s(ChargePage, \"8Wl/z97lbRdMS/6ucFmiPd0jLkI=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter,\n        _hooks_useChargingStatus__WEBPACK_IMPORTED_MODULE_3__.useChargingStatus,\n        _hooks_useBMSData__WEBPACK_IMPORTED_MODULE_4__.useBMSData,\n        _hooks_useTimerStatus__WEBPACK_IMPORTED_MODULE_5__.useTimerStatus\n    ];\n});\n_c = ChargePage;\nvar _c;\n$RefreshReg$(_c, \"ChargePage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/charge/page.tsx\n"));

/***/ })

});