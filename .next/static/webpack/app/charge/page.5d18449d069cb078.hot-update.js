"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/charge/page",{

/***/ "(app-pages-browser)/./components/WaveCharging.tsx":
/*!*************************************!*\
  !*** ./components/WaveCharging.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// \"use client\";\n// import React, { useState, useEffect, useMemo } from \"react\";\n// import { Inter } from \"next/font/google\";\n// import { Zap } from \"lucide-react\";\n// const interThin = Inter({\n//   subsets: [\"latin\"],\n//   weight: [\"200\"],\n//   variable: \"--font-inter\",\n// });\n// interface WaveChargingProps {\n//   percentage?: number;\n//   waveColor?: string;\n//   backgroundColor?: string;\n//   size?: number;\n// }\n// const WaveCharging = ({ \n//   percentage = 0, \n//   waveColor = \"rgba(0, 123, 255, 0.7)\",\n//   backgroundColor = \"rgba(220, 220, 220, 0.2)\",\n//   size = 160\n// }: WaveChargingProps) => {\n//   const [phase, setPhase] = useState(0);\n//   const clampedPercentage = Math.min(100, Math.max(0, percentage));\n//   // Smoother animation using requestAnimationFrame\n//   useEffect(() => {\n//     let animationFrameId: number;\n//     let lastTime = 0;\n//     const fps = 30; // Target 30fps for smoother animation\n//     const interval = 1000 / fps;\n//     const animate = (time: number) => {\n//       if (time - lastTime > interval) {\n//         setPhase((prev) => (prev + 2) % 360); // Slightly faster phase change\n//         lastTime = time;\n//       }\n//       animationFrameId = requestAnimationFrame(animate);\n//     };\n//     animationFrameId = requestAnimationFrame(animate);\n//     return () => cancelAnimationFrame(animationFrameId);\n//   }, []);\n//   // Dynamic wave amplitude based on charging percentage\n//   const waveAmplitude = useMemo(() => {\n//     return clampedPercentage > 90 ? 1 : clampedPercentage > 50 ? 2 : 3;\n//   }, [clampedPercentage]);\n//   // Memoized wave path for better performance\n//   const wavePath = useMemo(() => {\n//     const yPos = 100 - clampedPercentage;\n//     return `M0 ${yPos} \n//             Q20 ${yPos + Math.sin((phase * Math.PI) / 180) * waveAmplitude} \n//             40 ${yPos} \n//             T100 ${yPos} \n//             V100 H0 Z`;\n//   }, [phase, clampedPercentage, waveAmplitude]);\n//   return (\n//     <div\n//       className=\"relative flex items-center justify-center rounded-full overflow-hidden\"\n//       style={{\n//         width: `${size}px`,\n//         height: `${size}px`,\n//         backgroundColor,\n//         boxShadow: `0px 0px 15px ${waveColor}`,\n//       }}\n//       role=\"progressbar\"\n//       aria-valuenow={clampedPercentage}\n//       aria-valuemin={0}\n//       aria-valuemax={100}\n//     >\n//       <svg \n//         className=\"absolute inset-0 w-full h-full\" \n//         viewBox=\"0 0 100 100\" \n//         preserveAspectRatio=\"none\"\n//         aria-hidden=\"true\"\n//       >\n//         <path\n//           fill={waveColor}\n//           d={wavePath}\n//         />\n//       </svg>\n//       <span\n//         className=\"text-white text-4xl font-bold relative z-10\"\n//         style={{\n//           textShadow: \"0 0 8px rgba(0, 0, 0, 0.5)\",\n//         }}\n//         aria-hidden=\"true\"\n//       >\n//         {clampedPercentage}%\n//       </span>\n//     </div>\n//   );\n// };\n// export default WaveCharging;\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst WaveCharging = (param)=>{\n    let { isChargeInit, percentage = 0 } = param;\n    _s();\n    const [phase, setPhase] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [hoverState, setHoverState] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WaveCharging.useEffect\": ()=>{\n            const interval = setInterval({\n                \"WaveCharging.useEffect.interval\": ()=>{\n                    setPhase({\n                        \"WaveCharging.useEffect.interval\": (prev)=>(prev + 1) % 360\n                    }[\"WaveCharging.useEffect.interval\"]);\n                }\n            }[\"WaveCharging.useEffect.interval\"], 20);\n            return ({\n                \"WaveCharging.useEffect\": ()=>clearInterval(interval)\n            })[\"WaveCharging.useEffect\"];\n        }\n    }[\"WaveCharging.useEffect\"], []);\n    // Enhanced color function with more vibrant colors and transitions\n    const getCurrentColor = (percent)=>{\n        if (percent <= 33) {\n            // Red to Blue (0-33%)\n            const ratio = percent / 33;\n            return {\n                main: \"rgb(255, \".concat(Math.round(20 + ratio * 20), \", \").concat(Math.round(20 + ratio * 200), \")\"),\n                glow: \"rgb(255, \".concat(Math.round(ratio * 50), \", \").concat(Math.round(ratio * 255), \")\"),\n                accent: \"rgb(255, \".concat(Math.round(50 + ratio * 50), \", \").concat(Math.round(100 + ratio * 155), \")\"),\n                opacity: 1\n            };\n        } else if (percent <= 66) {\n            // Blue to Green (33-66%)\n            const ratio = (percent - 33) / 33;\n            return {\n                main: \"rgb(\".concat(Math.round(255 - ratio * 200), \", \").concat(Math.round(40 + ratio * 215), \", \").concat(Math.round(220 - ratio * 100), \")\"),\n                glow: \"rgb(\".concat(Math.round(50 - ratio * 50), \", \").concat(Math.round(50 + ratio * 205), \", 255)\"),\n                accent: \"rgb(\".concat(Math.round(100 - ratio * 100), \", \").concat(Math.round(150 + ratio * 105), \", 255)\"),\n                opacity: 1\n            };\n        } else {\n            // Green (66-100%)\n            const ratio = (percent - 66) / 34;\n            return {\n                main: \"rgb(\".concat(Math.round(55 - ratio * 20), \", 255, \").concat(Math.round(120 + ratio * 20), \")\"),\n                glow: \"rgb(0, 255, \".concat(Math.round((1 - ratio) * 255), \")\"),\n                accent: \"rgb(\".concat(Math.round(50 - ratio * 50), \", 255, \").concat(Math.round(150 + ratio * 105), \")\"),\n                opacity: 1\n            };\n        }\n    };\n    const colors = getCurrentColor(percentage);\n    return(// <div className=\"flex items-center justify-center \">\n    //   <div\n    //     className=\"relative w-44 h-44 transition-transform duration-300\"\n    //     style={{ transform: hoverState ? \"scale(1.05)\" : \"scale(1)\" }}\n    //     onMouseEnter={() => setHoverState(true)}\n    //     onMouseLeave={() => setHoverState(false)}\n    //   >\n    //     {/* Ultra Glow Effects */}\n    //     <div\n    //       className=\"absolute -inset-6 rounded-full opacity-20 blur-2xl transition-all duration-300\"\n    //       style={{\n    //         background: `\n    //           radial-gradient(circle at center, \n    //             ${colors.glow} 0%,\n    //             ${colors.accent}50 30%,\n    //             transparent 70%\n    //           )\n    //         `,\n    //         transform: hoverState ? \"scale(1.1)\" : \"scale(1)\",\n    //       }}\n    //     />\n    //     <div\n    //       className=\"absolute -inset-4 rounded-full opacity-30 blur-xl\"\n    //       style={{\n    //         background: `radial-gradient(circle at center, ${colors.glow}, transparent 70%)`,\n    //       }}\n    //     />\n    //     {/* Main container with premium border effect */}\n    //     <div className=\"absolute inset-0 rounded-full backdrop-blur-sm\">\n    //       {/* Animated border */}\n    //       <div\n    //         className=\"absolute -inset-0.5 rounded-full opacity-50\"\n    //         style={{\n    //           background: `\n    //             linear-gradient(${phase}deg, \n    //               transparent,\n    //               ${colors.glow}50,\n    //               ${colors.accent}50,\n    //               transparent\n    //             )\n    //           `,\n    //         }}\n    //       />\n    //       <div\n    //         className=\"absolute inset-px rounded-full overflow-hidden\"\n    //         style={{ background: \"rgba(0, 0, 0, 0.2)\" }}\n    //       >\n    //         {/* SVG Wave Animation */}\n    //         <svg\n    //           className=\"absolute inset-0 w-full h-full\"\n    //           viewBox=\"0 0 100 100\"\n    //           preserveAspectRatio=\"none\"\n    //         >\n    //           <defs>\n    //             <linearGradient id=\"waveGradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n    //               <stop\n    //                 offset=\"0%\"\n    //                 stopColor={colors.accent}\n    //                 stopOpacity=\"0.8\"\n    //               />\n    //               <stop\n    //                 offset=\"100%\"\n    //                 stopColor={colors.main}\n    //                 stopOpacity=\"0.9\"\n    //               />\n    //             </linearGradient>\n    //             <filter id=\"glow\">\n    //               <feGaussianBlur stdDeviation=\"2\" result=\"coloredBlur\" />\n    //               <feMerge>\n    //                 <feMergeNode in=\"coloredBlur\" />\n    //                 <feMergeNode in=\"SourceGraphic\" />\n    //               </feMerge>\n    //             </filter>\n    //             <filter id=\"turbulence\">\n    //               <feTurbulence\n    //                 baseFrequency=\"0.02\"\n    //                 numOctaves=\"3\"\n    //                 seed={phase}\n    //               />\n    //               <feDisplacementMap in=\"SourceGraphic\" scale=\"5\" />\n    //             </filter>\n    //           </defs>\n    //           {/* Background wave layer */}\n    //           <path\n    //             fill={colors.main}\n    //             opacity=\"0.2\"\n    //             filter=\"url(#glow)\"\n    //             d={`\n    //               M 0 ${100 - percentage - 2}\n    //               Q 15 ${100 - percentage + Math.sin(phase * 0.08) * 12}\n    //                 35 ${100 - percentage - 2}\n    //                 T 65 ${100 - percentage - 2}\n    //                 T 100 ${100 - percentage - 2}\n    //               V 100\n    //               H 0\n    //               Z\n    //             `}\n    //           />\n    //           {/* Multiple wave layers with different phases and amplitudes */}\n    //           {[...Array(5)].map((_, i) => (\n    //             <path\n    //               key={i}\n    //               fill={colors.main}\n    //               opacity={0.15 + i * 0.05}\n    //               filter=\"url(#glow)\"\n    //               d={`\n    //                 M 0 ${100 - percentage + i}\n    //                 Q 20 ${\n    //                   100 -\n    //                   percentage +\n    //                   Math.sin((phase + i * 30) * 0.1) * (8 + i * 2)\n    //                 }\n    //                   40 ${100 - percentage + i}\n    //                   T 70 ${100 - percentage + i}\n    //                   T 100 ${100 - percentage + i}\n    //                 V 100\n    //                 H 0\n    //                 Z\n    //               `}\n    //             />\n    //           ))}\n    //           {/* Main wave layers with enhanced complexity */}\n    //           <path\n    //             fill={colors.main}\n    //             opacity=\"0.4\"\n    //             filter=\"url(#glow)\"\n    //             d={`\n    //               M 0 ${100 - percentage + 2}\n    //               Q 25 ${100 - percentage + Math.cos((phase + 45) * 0.1) * 12}\n    //                 50 ${100 - percentage + 2}\n    //                 T 100 ${100 - percentage + 2}\n    //               V 100\n    //               H 0\n    //               Z\n    //             `}\n    //           />\n    //           <path\n    //             fill=\"url(#waveGradient)\"\n    //             opacity=\"0.6\"\n    //             filter=\"url(#glow)\"\n    //             d={`\n    //               M 0 ${100 - percentage + 1}\n    //               Q 20 ${100 - percentage + Math.sin((phase + 90) * 0.1) * 15}\n    //                 50 ${100 - percentage + 1}\n    //                 T 100 ${100 - percentage + 1}\n    //               V 100\n    //               H 0\n    //               Z\n    //             `}\n    //           />\n    //           {/* Ripple effect waves */}\n    //           {[...Array(3)].map((_, i) => (\n    //             <path\n    //               key={`ripple-${i}`}\n    //               fill={colors.accent}\n    //               opacity={0.1}\n    //               filter=\"url(#glow)\"\n    //               d={`\n    //                 M 0 ${100 - percentage + 3 + i}\n    //                 Q 30 ${\n    //                   100 -\n    //                   percentage +\n    //                   Math.sin((phase + i * 120) * 0.1) * (10 - i * 2)\n    //                 }\n    //                   60 ${100 - percentage + 3 + i}\n    //                   T 100 ${100 - percentage + 3 + i}\n    //                 V 100\n    //                 H 0\n    //                 Z\n    //               `}\n    //             />\n    //           ))}\n    //         </svg>\n    //         {/* Dynamic inner glow */}\n    //         <div\n    //           className=\"absolute inset-0 pointer-events-none transition-opacity duration-300\"\n    //           style={{\n    //             background: `\n    //               radial-gradient(circle at center, \n    //                 ${colors.glow}30 0%,\n    //                 ${colors.accent}10 40%,\n    //                 transparent 70%\n    //               )\n    //             `,\n    //             opacity: hoverState ? 0.8 : 0.5,\n    //           }}\n    //         />\n    //         {/* Percentage Display with enhanced effects */}\n    //         <div className=\"absolute inset-0 flex items-center justify-center\">\n    //           {/* <Zap\n    //             width={40}\n    //             height={40}\n    //             className=\"text-green-500 absolute  top-5\"\n    //           /> */}\n    //           <div className=\"flex-col  justify-center items-center gap-2\">\n    //             <span\n    //               className={`${interThin.className} text-4xl ml-3    ${\n    //                 percentage >= 60 ? \"text-black \" : \"text-white\"\n    //               } transition-all duration-300`}\n    //               style={{\n    //                 textShadow: `\n    //                 0 0 10px ${colors.glow}80,\n    //                 0 0 20px ${colors.accent}50,\n    //                 0 0 30px ${colors.main}30\n    //               `,\n    //                 transform: hoverState ? \"scale(1.1)\" : \"scale(1)\",\n    //               }}\n    //             >\n    //               {percentage}%\n    //             </span>\n    //           </div>\n    //         </div>\n    //         {/* Enhanced shine effects */}\n    //         <div\n    //           className=\"absolute inset-0 bg-gradient-to-b from-white/30 via-transparent to-transparent pointer-events-none\"\n    //           style={{\n    //             opacity: hoverState ? 0.4 : 0.2,\n    //           }}\n    //         />\n    //       </div>\n    //     </div>\n    //     {/* Animated pulse rings */}\n    //     {[...Array(3)].map((_, i) => (\n    //       <div\n    //         key={i}\n    //         className=\"absolute -inset-2 rounded-full animate-pulse\"\n    //         style={{\n    //           animation: `pulse ${2 + i * 0.5}s infinite`,\n    //           background: `radial-gradient(circle at center, ${colors.glow}${\n    //             20 - i * 5\n    //           }, transparent 70%)`,\n    //           animationDelay: `${i * 0.5}s`,\n    //         }}\n    //       />\n    //     ))}\n    //   </div>\n    // </div>\n    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: \"hi\"\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\components\\\\WaveCharging.tsx\",\n        lineNumber: 430,\n        columnNumber: 5\n    }, undefined));\n};\n_s(WaveCharging, \"TeVkNybmdqEHTMOGg0IxJDhpVg4=\");\n_c = WaveCharging;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (WaveCharging);\nvar _c;\n$RefreshReg$(_c, \"WaveCharging\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/WaveCharging.tsx\n"));

/***/ })

});