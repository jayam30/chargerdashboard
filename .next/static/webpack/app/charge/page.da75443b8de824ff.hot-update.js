"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/charge/page",{

/***/ "(app-pages-browser)/./components/WaveCharging.tsx":
/*!*************************************!*\
  !*** ./components/WaveCharging.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WaveCharging)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// \"use client\";\n// import React, { useState, useEffect, useMemo } from \"react\";\n// import { Inter } from \"next/font/google\";\n// import { Zap } from \"lucide-react\";\n// const interThin = Inter({\n//   subsets: [\"latin\"],\n//   weight: [\"200\"],\n//   variable: \"--font-inter\",\n// });\n// interface WaveChargingProps {\n//   percentage?: number;\n//   waveColor?: string;\n//   backgroundColor?: string;\n//   size?: number;\n// }\n// const WaveCharging = ({ \n//   percentage = 0, \n//   waveColor = \"rgba(0, 123, 255, 0.7)\",\n//   backgroundColor = \"rgba(220, 220, 220, 0.2)\",\n//   size = 160\n// }: WaveChargingProps) => {\n//   const [phase, setPhase] = useState(0);\n//   const clampedPercentage = Math.min(100, Math.max(0, percentage));\n//   // Smoother animation using requestAnimationFrame\n//   useEffect(() => {\n//     let animationFrameId: number;\n//     let lastTime = 0;\n//     const fps = 30; // Target 30fps for smoother animation\n//     const interval = 1000 / fps;\n//     const animate = (time: number) => {\n//       if (time - lastTime > interval) {\n//         setPhase((prev) => (prev + 2) % 360); // Slightly faster phase change\n//         lastTime = time;\n//       }\n//       animationFrameId = requestAnimationFrame(animate);\n//     };\n//     animationFrameId = requestAnimationFrame(animate);\n//     return () => cancelAnimationFrame(animationFrameId);\n//   }, []);\n//   // Dynamic wave amplitude based on charging percentage\n//   const waveAmplitude = useMemo(() => {\n//     return clampedPercentage > 90 ? 1 : clampedPercentage > 50 ? 2 : 3;\n//   }, [clampedPercentage]);\n//   // Memoized wave path for better performance\n//   const wavePath = useMemo(() => {\n//     const yPos = 100 - clampedPercentage;\n//     return `M0 ${yPos} \n//             Q20 ${yPos + Math.sin((phase * Math.PI) / 180) * waveAmplitude} \n//             40 ${yPos} \n//             T100 ${yPos} \n//             V100 H0 Z`;\n//   }, [phase, clampedPercentage, waveAmplitude]);\n//   return (\n//     <div\n//       className=\"relative flex items-center justify-center rounded-full overflow-hidden\"\n//       style={{\n//         width: `${size}px`,\n//         height: `${size}px`,\n//         backgroundColor,\n//         boxShadow: `0px 0px 15px ${waveColor}`,\n//       }}\n//       role=\"progressbar\"\n//       aria-valuenow={clampedPercentage}\n//       aria-valuemin={0}\n//       aria-valuemax={100}\n//     >\n//       <svg \n//         className=\"absolute inset-0 w-full h-full\" \n//         viewBox=\"0 0 100 100\" \n//         preserveAspectRatio=\"none\"\n//         aria-hidden=\"true\"\n//       >\n//         <path\n//           fill={waveColor}\n//           d={wavePath}\n//         />\n//       </svg>\n//       <span\n//         className=\"text-white text-4xl font-bold relative z-10\"\n//         style={{\n//           textShadow: \"0 0 8px rgba(0, 0, 0, 0.5)\",\n//         }}\n//         aria-hidden=\"true\"\n//       >\n//         {clampedPercentage}%\n//       </span>\n//     </div>\n//   );\n// };\n// export default WaveCharging;\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction getWaveColor(percent) {\n    // Clamp between 0 and 100\n    const p = Math.max(0, Math.min(percent, 100));\n    // Custom blend: Red → Yellow → Blue → Green\n    let r = 0, g = 0, b = 0;\n    if (p < 25) {\n        // Red to Yellow\n        r = 255;\n        g = Math.round(p / 25 * 255);\n        b = 0;\n    } else if (p < 50) {\n        // Yellow to Blue\n        r = Math.round(255 - (p - 25) / 25 * 255);\n        g = 255;\n        b = Math.round((p - 25) / 25 * 255);\n    } else if (p < 75) {\n        // Blue to Cyan\n        r = 0;\n        g = Math.round(255 - (p - 50) / 25 * 155);\n        b = 255;\n    } else {\n        // Cyan to Green\n        r = 0;\n        g = 255;\n        b = Math.round(255 - (p - 75) / 25 * 255);\n    }\n    return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n}\nfunction WaveCharging(param) {\n    let { safePercentag } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WaveCharging.useEffect\": ()=>{\n            const canvas = canvasRef.current;\n            if (!canvas) return;\n            const ctx = canvas.getContext('2d');\n            if (!ctx) return;\n            const width = canvas.width;\n            const height = canvas.height;\n            const waveHeight = 10;\n            const waveLength = 60;\n            const waveSpeed = 0.05;\n            let offset = 0;\n            let animationFrameId;\n            const drawWave = {\n                \"WaveCharging.useEffect.drawWave\": ()=>{\n                    ctx.clearRect(0, 0, width, height);\n                    // Clip in a circle\n                    ctx.beginPath();\n                    ctx.arc(width / 2, height / 2, width / 2, 0, Math.PI * 2);\n                    ctx.clip();\n                    // Background\n                    ctx.fillStyle = '#0f172a'; // dark slate\n                    ctx.fillRect(0, 0, width, height);\n                    const waveY = height * (1 - safePercentag / 100);\n                    // Dynamic wave color\n                    ctx.beginPath();\n                    for(let x = 0; x <= width; x++){\n                        const y = waveY + Math.sin((x + offset) / waveLength) * waveHeight;\n                        ctx.lineTo(x, y);\n                    }\n                    ctx.lineTo(width, height);\n                    ctx.lineTo(0, height);\n                    ctx.closePath();\n                    ctx.fillStyle = getWaveColor(safePercentag);\n                    ctx.shadowColor = ctx.fillStyle;\n                    ctx.shadowBlur = 20;\n                    ctx.fill();\n                    offset += waveSpeed * waveLength;\n                    animationFrameId = requestAnimationFrame(drawWave);\n                }\n            }[\"WaveCharging.useEffect.drawWave\"];\n            drawWave();\n            return ({\n                \"WaveCharging.useEffect\": ()=>cancelAnimationFrame(animationFrameId)\n            })[\"WaveCharging.useEffect\"];\n        }\n    }[\"WaveCharging.useEffect\"], [\n        safePercentag\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        width: 200,\n        height: 200,\n        className: \"rounded-full bg-transparent\"\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\components\\\\WaveCharging.tsx\",\n        lineNumber: 204,\n        columnNumber: 5\n    }, this);\n}\n_s(WaveCharging, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = WaveCharging;\nvar _c;\n$RefreshReg$(_c, \"WaveCharging\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/WaveCharging.tsx\n"));

/***/ })

});