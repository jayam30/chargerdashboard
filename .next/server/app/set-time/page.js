/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/set-time/page";
exports.ids = ["app/set-time/page"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fset-time%2Fpage&page=%2Fset-time%2Fpage&appPaths=%2Fset-time%2Fpage&pagePath=private-next-app-dir%2Fset-time%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fset-time%2Fpage&page=%2Fset-time%2Fpage&appPaths=%2Fset-time%2Fpage&pagePath=private-next-app-dir%2Fset-time%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?91d2\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/forbidden-error */ \"(rsc)/./node_modules/next/dist/client/components/forbidden-error.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/unauthorized-error */ \"(rsc)/./node_modules/next/dist/client/components/unauthorized-error.js\", 23));\nconst page4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/set-time/page.tsx */ \"(rsc)/./src/app/set-time/page.tsx\"));\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'set-time',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page4, \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [module0, \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\"],\n'not-found': [module1, \"next/dist/client/components/not-found-error\"],\n'forbidden': [module2, \"next/dist/client/components/forbidden-error\"],\n'unauthorized': [module3, \"next/dist/client/components/unauthorized-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/set-time/page\",\n        pathname: \"/set-time\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZzZXQtdGltZSUyRnBhZ2UmcGFnZT0lMkZzZXQtdGltZSUyRnBhZ2UmYXBwUGF0aHM9JTJGc2V0LXRpbWUlMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGc2V0LXRpbWUlMkZwYWdlLnRzeCZhcHBEaXI9RCUzQSU1Q2NvZGluZyU1Q2Rhc2glMjBkeW5hbWljcyU1Q2Rhc2hib2FyZHMlNUNMb2NhbGJhY2tlbmQlNUNjaGFyZ2luZy1zeXN0ZW0lNUNzcmMlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUQlM0ElNUNjb2RpbmclNUNkYXNoJTIwZHluYW1pY3MlNUNkYXNoYm9hcmRzJTVDTG9jYWxiYWNrZW5kJTVDY2hhcmdpbmctc3lzdGVtJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzQkFBc0Isb0pBQStIO0FBQ3JKLHNCQUFzQiwwTkFBZ0Y7QUFDdEcsc0JBQXNCLDBOQUFnRjtBQUN0RyxzQkFBc0IsZ09BQW1GO0FBQ3pHLG9CQUFvQixrS0FBdUk7QUFHeko7QUFDc0Q7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUN1QjtBQUM2RDtBQUNwRiw2QkFBNkIsbUJBQW1CO0FBQ2hEO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDdUQ7QUFDdkQ7QUFDTyx3QkFBd0IsdUdBQWtCO0FBQ2pEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vZHVsZTAgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxzcmNcXFxcYXBwXFxcXGxheW91dC50c3hcIik7XG5jb25zdCBtb2R1bGUxID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWVycm9yXCIpO1xuY29uc3QgbW9kdWxlMiA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2ZvcmJpZGRlbi1lcnJvclwiKTtcbmNvbnN0IG1vZHVsZTMgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy91bmF1dGhvcml6ZWQtZXJyb3JcIik7XG5jb25zdCBwYWdlNCA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxcc2V0LXRpbWVcXFxccGFnZS50c3hcIik7XG5pbXBvcnQgeyBBcHBQYWdlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1wYWdlL21vZHVsZS5jb21waWxlZFwiIHdpdGgge1xuICAgICd0dXJib3BhY2stdHJhbnNpdGlvbic6ICduZXh0LXNzcidcbn07XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG4vLyBXZSBpbmplY3QgdGhlIHRyZWUgYW5kIHBhZ2VzIGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCB0cmVlID0ge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnJyxcbiAgICAgICAge1xuICAgICAgICBjaGlsZHJlbjogW1xuICAgICAgICAnc2V0LXRpbWUnLFxuICAgICAgICB7XG4gICAgICAgIGNoaWxkcmVuOiBbJ19fUEFHRV9fJywge30sIHtcbiAgICAgICAgICBwYWdlOiBbcGFnZTQsIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxcc2V0LXRpbWVcXFxccGFnZS50c3hcIl0sXG4gICAgICAgICAgXG4gICAgICAgIH1dXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgIFxuICAgICAgICBcbiAgICAgIH1cbiAgICAgIF1cbiAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgJ2xheW91dCc6IFttb2R1bGUwLCBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxzcmNcXFxcYXBwXFxcXGxheW91dC50c3hcIl0sXG4nbm90LWZvdW5kJzogW21vZHVsZTEsIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL25vdC1mb3VuZC1lcnJvclwiXSxcbidmb3JiaWRkZW4nOiBbbW9kdWxlMiwgXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZm9yYmlkZGVuLWVycm9yXCJdLFxuJ3VuYXV0aG9yaXplZCc6IFttb2R1bGUzLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy91bmF1dGhvcml6ZWQtZXJyb3JcIl0sXG4gICAgICAgIFxuICAgICAgfVxuICAgICAgXVxuICAgICAgfS5jaGlsZHJlbjtcbmNvbnN0IHBhZ2VzID0gW1wiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxcc2V0LXRpbWVcXFxccGFnZS50c3hcIl07XG5leHBvcnQgeyB0cmVlLCBwYWdlcyB9O1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBHbG9iYWxFcnJvciB9IGZyb20gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZXJyb3ItYm91bmRhcnlcIjtcbmNvbnN0IF9fbmV4dF9hcHBfcmVxdWlyZV9fID0gX193ZWJwYWNrX3JlcXVpcmVfX1xuY29uc3QgX19uZXh0X2FwcF9sb2FkX2NodW5rX18gPSAoKSA9PiBQcm9taXNlLnJlc29sdmUoKVxuZXhwb3J0IGNvbnN0IF9fbmV4dF9hcHBfXyA9IHtcbiAgICByZXF1aXJlOiBfX25leHRfYXBwX3JlcXVpcmVfXyxcbiAgICBsb2FkQ2h1bms6IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fXG59O1xuZXhwb3J0ICogZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvYXBwLXJlbmRlci9lbnRyeS1iYXNlXCI7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBQYWdlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9QQUdFLFxuICAgICAgICBwYWdlOiBcIi9zZXQtdGltZS9wYWdlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9zZXQtdGltZVwiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJycsXG4gICAgICAgIGFwcFBhdGhzOiBbXVxuICAgIH0sXG4gICAgdXNlcmxhbmQ6IHtcbiAgICAgICAgbG9hZGVyVHJlZTogdHJlZVxuICAgIH1cbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcGFnZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fset-time%2Fpage&page=%2Fset-time%2Fpage&appPaths=%2Fset-time%2Fpage&pagePath=private-next-app-dir%2Fset-time%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./contexts/WebSocketContext.tsx */ \"(rsc)/./contexts/WebSocketContext.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/sonner/dist/index.mjs */ \"(rsc)/./node_modules/sonner/dist/index.mjs\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDY29udGV4dHMlNUMlNUNXZWJTb2NrZXRDb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMldlYlNvY2tldFByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDc29ubmVyJTVDJTVDZGlzdCU1QyU1Q2luZGV4Lm1qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRvYXN0ZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNzcmMlNUMlNUNzdHlsZXMlNUMlNUNnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQWdMO0FBQ2hMO0FBQ0Esb0xBQTZLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJXZWJTb2NrZXRQcm92aWRlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxjb250ZXh0c1xcXFxXZWJTb2NrZXRDb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVG9hc3RlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcc29ubmVyXFxcXGRpc3RcXFxcaW5kZXgubWpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./contexts/WebSocketContext.tsx */ \"(ssr)/./contexts/WebSocketContext.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/sonner/dist/index.mjs */ \"(ssr)/./node_modules/sonner/dist/index.mjs\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDY29udGV4dHMlNUMlNUNXZWJTb2NrZXRDb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMldlYlNvY2tldFByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDc29ubmVyJTVDJTVDZGlzdCU1QyU1Q2luZGV4Lm1qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRvYXN0ZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNzcmMlNUMlNUNzdHlsZXMlNUMlNUNnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQWdMO0FBQ2hMO0FBQ0Esb0xBQTZLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJXZWJTb2NrZXRQcm92aWRlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxjb250ZXh0c1xcXFxXZWJTb2NrZXRDb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVG9hc3RlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcc29ubmVyXFxcXGRpc3RcXFxcaW5kZXgubWpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNjbGllbnQtc2VnbWVudC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2Vycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2xheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q21ldGFkYXRhLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxvT0FBdUs7QUFDdks7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSxvUkFBZ007QUFDaE07QUFDQSx3T0FBeUs7QUFDeks7QUFDQSxzUUFBd0w7QUFDeEw7QUFDQSxzT0FBd0siLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGNsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGh0dHAtYWNjZXNzLWZhbGxiYWNrXFxcXGVycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxsYXlvdXQtcm91dGVyLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxsaWJcXFxcbWV0YWRhdGFcXFxcbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNjbGllbnQtc2VnbWVudC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2Vycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2xheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q21ldGFkYXRhLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxvT0FBdUs7QUFDdks7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSxvUkFBZ007QUFDaE07QUFDQSx3T0FBeUs7QUFDeks7QUFDQSxzUUFBd0w7QUFDeEw7QUFDQSxzT0FBd0siLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGNsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGh0dHAtYWNjZXNzLWZhbGxiYWNrXFxcXGVycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxsYXlvdXQtcm91dGVyLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxsaWJcXFxcbWV0YWRhdGFcXFxcbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cset-time%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cset-time%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/set-time/page.tsx */ \"(rsc)/./src/app/set-time/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDc2V0LXRpbWUlNUMlNUNwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsa0tBQXVJIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcc3JjXFxcXGFwcFxcXFxzZXQtdGltZVxcXFxwYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cset-time%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cset-time%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!**********************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cset-time%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/set-time/page.tsx */ \"(ssr)/./src/app/set-time/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDc2V0LXRpbWUlNUMlNUNwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsa0tBQXVJIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcc3JjXFxcXGFwcFxcXFxzZXQtdGltZVxcXFxwYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cset-time%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./components/ui/button.tsx":
/*!**********************************!*\
  !*** ./components/ui/button.tsx ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Button: () => (/* binding */ Button),\n/* harmony export */   buttonVariants: () => (/* binding */ buttonVariants)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @radix-ui/react-slot */ \"(ssr)/./node_modules/@radix-ui/react-slot/dist/index.mjs\");\n/* harmony import */ var class_variance_authority__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! class-variance-authority */ \"(ssr)/./node_modules/class-variance-authority/dist/index.mjs\");\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./src/lib/utils.ts\");\n// components/ui/button.tsx\n\n\n\n\n\nconst buttonVariants = (0,class_variance_authority__WEBPACK_IMPORTED_MODULE_2__.cva)(\"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\", {\n    variants: {\n        variant: {\n            default: \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\n            destructive: \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\n            outline: \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\n            secondary: \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\n            ghost: \"hover:bg-accent hover:text-accent-foreground\",\n            link: \"text-primary underline-offset-4 hover:underline\"\n        },\n        size: {\n            default: \"h-9 px-4 py-2\",\n            sm: \"h-8 rounded-md px-3 text-xs\",\n            lg: \"h-10 rounded-md px-8\",\n            icon: \"h-9 w-9\"\n        }\n    },\n    defaultVariants: {\n        variant: \"default\",\n        size: \"default\"\n    }\n});\nconst Button = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, variant, size, asChild = false, ...props }, ref)=>{\n    const Comp = asChild ? _radix_ui_react_slot__WEBPACK_IMPORTED_MODULE_4__.Slot : \"button\";\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Comp, {\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.cn)(buttonVariants({\n            variant,\n            size,\n            className\n        })),\n        ref: ref,\n        ...props\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\components\\\\ui\\\\button.tsx\",\n        lineNumber: 46,\n        columnNumber: 7\n    }, undefined);\n});\nButton.displayName = \"Button\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3VpL2J1dHRvbi50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsMkJBQTJCOztBQUNHO0FBQ2E7QUFDc0I7QUFDakM7QUFFaEMsTUFBTUksaUJBQWlCRiw2REFBR0EsQ0FDeEIsdU9BQ0E7SUFDRUcsVUFBVTtRQUNSQyxTQUFTO1lBQ1BDLFNBQVM7WUFDVEMsYUFDRTtZQUNGQyxTQUNFO1lBQ0ZDLFdBQ0U7WUFDRkMsT0FBTztZQUNQQyxNQUFNO1FBQ1I7UUFDQUMsTUFBTTtZQUNKTixTQUFTO1lBQ1RPLElBQUk7WUFDSkMsSUFBSTtZQUNKQyxNQUFNO1FBQ1I7SUFDRjtJQUNBQyxpQkFBaUI7UUFDZlgsU0FBUztRQUNUTyxNQUFNO0lBQ1I7QUFDRjtBQVNGLE1BQU1LLHVCQUFTbEIsNkNBQWdCLENBQzdCLENBQUMsRUFBRW9CLFNBQVMsRUFBRWQsT0FBTyxFQUFFTyxJQUFJLEVBQUVRLFVBQVUsS0FBSyxFQUFFLEdBQUdDLE9BQU8sRUFBRUM7SUFDeEQsTUFBTUMsT0FBT0gsVUFBVXBCLHNEQUFJQSxHQUFHO0lBQzlCLHFCQUNFLDhEQUFDdUI7UUFDQ0osV0FBV2pCLDhDQUFFQSxDQUFDQyxlQUFlO1lBQUVFO1lBQVNPO1lBQU1PO1FBQVU7UUFDeERHLEtBQUtBO1FBQ0osR0FBR0QsS0FBSzs7Ozs7O0FBR2Y7QUFFRkosT0FBT08sV0FBVyxHQUFHO0FBRVkiLCJzb3VyY2VzIjpbIkQ6XFxjb2RpbmdcXGRhc2ggZHluYW1pY3NcXGRhc2hib2FyZHNcXExvY2FsYmFja2VuZFxcY2hhcmdpbmctc3lzdGVtXFxjb21wb25lbnRzXFx1aVxcYnV0dG9uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb21wb25lbnRzL3VpL2J1dHRvbi50c3hcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCJcclxuaW1wb3J0IHsgU2xvdCB9IGZyb20gXCJAcmFkaXgtdWkvcmVhY3Qtc2xvdFwiXHJcbmltcG9ydCB7IGN2YSwgdHlwZSBWYXJpYW50UHJvcHMgfSBmcm9tIFwiY2xhc3MtdmFyaWFuY2UtYXV0aG9yaXR5XCJcclxuaW1wb3J0IHsgY24gfSBmcm9tIFwiQC9saWIvdXRpbHNcIlxyXG5cclxuY29uc3QgYnV0dG9uVmFyaWFudHMgPSBjdmEoXHJcbiAgXCJpbmxpbmUtZmxleCBpdGVtcy1jZW50ZXIganVzdGlmeS1jZW50ZXIgd2hpdGVzcGFjZS1ub3dyYXAgcm91bmRlZC1tZCB0ZXh0LXNtIGZvbnQtbWVkaXVtIHRyYW5zaXRpb24tY29sb3JzIGZvY3VzLXZpc2libGU6b3V0bGluZS1ub25lIGZvY3VzLXZpc2libGU6cmluZy0xIGZvY3VzLXZpc2libGU6cmluZy1yaW5nIGRpc2FibGVkOnBvaW50ZXItZXZlbnRzLW5vbmUgZGlzYWJsZWQ6b3BhY2l0eS01MFwiLFxyXG4gIHtcclxuICAgIHZhcmlhbnRzOiB7XHJcbiAgICAgIHZhcmlhbnQ6IHtcclxuICAgICAgICBkZWZhdWx0OiBcImJnLXByaW1hcnkgdGV4dC1wcmltYXJ5LWZvcmVncm91bmQgc2hhZG93IGhvdmVyOmJnLXByaW1hcnkvOTBcIixcclxuICAgICAgICBkZXN0cnVjdGl2ZTpcclxuICAgICAgICAgIFwiYmctZGVzdHJ1Y3RpdmUgdGV4dC1kZXN0cnVjdGl2ZS1mb3JlZ3JvdW5kIHNoYWRvdy1zbSBob3ZlcjpiZy1kZXN0cnVjdGl2ZS85MFwiLFxyXG4gICAgICAgIG91dGxpbmU6XHJcbiAgICAgICAgICBcImJvcmRlciBib3JkZXItaW5wdXQgYmctYmFja2dyb3VuZCBzaGFkb3ctc20gaG92ZXI6YmctYWNjZW50IGhvdmVyOnRleHQtYWNjZW50LWZvcmVncm91bmRcIixcclxuICAgICAgICBzZWNvbmRhcnk6XHJcbiAgICAgICAgICBcImJnLXNlY29uZGFyeSB0ZXh0LXNlY29uZGFyeS1mb3JlZ3JvdW5kIHNoYWRvdy1zbSBob3ZlcjpiZy1zZWNvbmRhcnkvODBcIixcclxuICAgICAgICBnaG9zdDogXCJob3ZlcjpiZy1hY2NlbnQgaG92ZXI6dGV4dC1hY2NlbnQtZm9yZWdyb3VuZFwiLFxyXG4gICAgICAgIGxpbms6IFwidGV4dC1wcmltYXJ5IHVuZGVybGluZS1vZmZzZXQtNCBob3Zlcjp1bmRlcmxpbmVcIixcclxuICAgICAgfSxcclxuICAgICAgc2l6ZToge1xyXG4gICAgICAgIGRlZmF1bHQ6IFwiaC05IHB4LTQgcHktMlwiLFxyXG4gICAgICAgIHNtOiBcImgtOCByb3VuZGVkLW1kIHB4LTMgdGV4dC14c1wiLFxyXG4gICAgICAgIGxnOiBcImgtMTAgcm91bmRlZC1tZCBweC04XCIsXHJcbiAgICAgICAgaWNvbjogXCJoLTkgdy05XCIsXHJcbiAgICAgIH0sXHJcbiAgICB9LFxyXG4gICAgZGVmYXVsdFZhcmlhbnRzOiB7XHJcbiAgICAgIHZhcmlhbnQ6IFwiZGVmYXVsdFwiLFxyXG4gICAgICBzaXplOiBcImRlZmF1bHRcIixcclxuICAgIH0sXHJcbiAgfVxyXG4pXHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIEJ1dHRvblByb3BzXHJcbiAgZXh0ZW5kcyBSZWFjdC5CdXR0b25IVE1MQXR0cmlidXRlczxIVE1MQnV0dG9uRWxlbWVudD4sXHJcbiAgICBWYXJpYW50UHJvcHM8dHlwZW9mIGJ1dHRvblZhcmlhbnRzPiB7XHJcbiAgYXNDaGlsZD86IGJvb2xlYW5cclxufVxyXG5cclxuY29uc3QgQnV0dG9uID0gUmVhY3QuZm9yd2FyZFJlZjxIVE1MQnV0dG9uRWxlbWVudCwgQnV0dG9uUHJvcHM+KFxyXG4gICh7IGNsYXNzTmFtZSwgdmFyaWFudCwgc2l6ZSwgYXNDaGlsZCA9IGZhbHNlLCAuLi5wcm9wcyB9LCByZWYpID0+IHtcclxuICAgIGNvbnN0IENvbXAgPSBhc0NoaWxkID8gU2xvdCA6IFwiYnV0dG9uXCJcclxuICAgIHJldHVybiAoXHJcbiAgICAgIDxDb21wXHJcbiAgICAgICAgY2xhc3NOYW1lPXtjbihidXR0b25WYXJpYW50cyh7IHZhcmlhbnQsIHNpemUsIGNsYXNzTmFtZSB9KSl9XHJcbiAgICAgICAgcmVmPXtyZWZ9XHJcbiAgICAgICAgey4uLnByb3BzfVxyXG4gICAgICAvPlxyXG4gICAgKVxyXG4gIH1cclxuKVxyXG5CdXR0b24uZGlzcGxheU5hbWUgPSBcIkJ1dHRvblwiXHJcblxyXG5leHBvcnQgeyBCdXR0b24sIGJ1dHRvblZhcmlhbnRzIH0iXSwibmFtZXMiOlsiUmVhY3QiLCJTbG90IiwiY3ZhIiwiY24iLCJidXR0b25WYXJpYW50cyIsInZhcmlhbnRzIiwidmFyaWFudCIsImRlZmF1bHQiLCJkZXN0cnVjdGl2ZSIsIm91dGxpbmUiLCJzZWNvbmRhcnkiLCJnaG9zdCIsImxpbmsiLCJzaXplIiwic20iLCJsZyIsImljb24iLCJkZWZhdWx0VmFyaWFudHMiLCJCdXR0b24iLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwiYXNDaGlsZCIsInByb3BzIiwicmVmIiwiQ29tcCIsImRpc3BsYXlOYW1lIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/button.tsx\n");

/***/ }),

/***/ "(ssr)/./components/ui/card.tsx":
/*!********************************!*\
  !*** ./components/ui/card.tsx ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Card: () => (/* binding */ Card),\n/* harmony export */   CardContent: () => (/* binding */ CardContent),\n/* harmony export */   CardDescription: () => (/* binding */ CardDescription),\n/* harmony export */   CardFooter: () => (/* binding */ CardFooter),\n/* harmony export */   CardHeader: () => (/* binding */ CardHeader),\n/* harmony export */   CardTitle: () => (/* binding */ CardTitle)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/utils */ \"(ssr)/./src/lib/utils.ts\");\n// components/ui/card.tsx\n\n\n\nconst Card = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"rounded-xl border bg-card text-card-foreground shadow\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 9,\n        columnNumber: 3\n    }, undefined));\nCard.displayName = \"Card\";\nconst CardHeader = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex flex-col space-y-1.5 p-6\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 24,\n        columnNumber: 3\n    }, undefined));\nCardHeader.displayName = \"CardHeader\";\nconst CardTitle = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"font-semibold leading-none tracking-tight\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 36,\n        columnNumber: 3\n    }, undefined));\nCardTitle.displayName = \"CardTitle\";\nconst CardDescription = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"text-sm text-muted-foreground\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 48,\n        columnNumber: 3\n    }, undefined));\nCardDescription.displayName = \"CardDescription\";\nconst CardContent = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"p-6 pt-0\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 60,\n        columnNumber: 3\n    }, undefined));\nCardContent.displayName = \"CardContent\";\nconst CardFooter = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1__.forwardRef(({ className, ...props }, ref)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        ref: ref,\n        className: (0,_lib_utils__WEBPACK_IMPORTED_MODULE_2__.cn)(\"flex items-center p-6 pt-0\", className),\n        ...props\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\components\\\\ui\\\\card.tsx\",\n        lineNumber: 68,\n        columnNumber: 3\n    }, undefined));\nCardFooter.displayName = \"CardFooter\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9jb21wb25lbnRzL3VpL2NhcmQudHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQUEseUJBQXlCOztBQUNLO0FBQ0U7QUFFaEMsTUFBTUUscUJBQU9GLDZDQUFnQixDQUczQixDQUFDLEVBQUVJLFNBQVMsRUFBRSxHQUFHQyxPQUFPLEVBQUVDLG9CQUMxQiw4REFBQ0M7UUFDQ0QsS0FBS0E7UUFDTEYsV0FBV0gsOENBQUVBLENBQ1gseURBQ0FHO1FBRUQsR0FBR0MsS0FBSzs7Ozs7O0FBR2JILEtBQUtNLFdBQVcsR0FBRztBQUVuQixNQUFNQywyQkFBYVQsNkNBQWdCLENBR2pDLENBQUMsRUFBRUksU0FBUyxFQUFFLEdBQUdDLE9BQU8sRUFBRUMsb0JBQzFCLDhEQUFDQztRQUNDRCxLQUFLQTtRQUNMRixXQUFXSCw4Q0FBRUEsQ0FBQyxpQ0FBaUNHO1FBQzlDLEdBQUdDLEtBQUs7Ozs7OztBQUdiSSxXQUFXRCxXQUFXLEdBQUc7QUFFekIsTUFBTUUsMEJBQVlWLDZDQUFnQixDQUdoQyxDQUFDLEVBQUVJLFNBQVMsRUFBRSxHQUFHQyxPQUFPLEVBQUVDLG9CQUMxQiw4REFBQ0s7UUFDQ0wsS0FBS0E7UUFDTEYsV0FBV0gsOENBQUVBLENBQUMsNkNBQTZDRztRQUMxRCxHQUFHQyxLQUFLOzs7Ozs7QUFHYkssVUFBVUYsV0FBVyxHQUFHO0FBRXhCLE1BQU1JLGdDQUFrQlosNkNBQWdCLENBR3RDLENBQUMsRUFBRUksU0FBUyxFQUFFLEdBQUdDLE9BQU8sRUFBRUMsb0JBQzFCLDhEQUFDTztRQUNDUCxLQUFLQTtRQUNMRixXQUFXSCw4Q0FBRUEsQ0FBQyxpQ0FBaUNHO1FBQzlDLEdBQUdDLEtBQUs7Ozs7OztBQUdiTyxnQkFBZ0JKLFdBQVcsR0FBRztBQUU5QixNQUFNTSw0QkFBY2QsNkNBQWdCLENBR2xDLENBQUMsRUFBRUksU0FBUyxFQUFFLEdBQUdDLE9BQU8sRUFBRUMsb0JBQzFCLDhEQUFDQztRQUFJRCxLQUFLQTtRQUFLRixXQUFXSCw4Q0FBRUEsQ0FBQyxZQUFZRztRQUFhLEdBQUdDLEtBQUs7Ozs7OztBQUVoRVMsWUFBWU4sV0FBVyxHQUFHO0FBRTFCLE1BQU1PLDJCQUFhZiw2Q0FBZ0IsQ0FHakMsQ0FBQyxFQUFFSSxTQUFTLEVBQUUsR0FBR0MsT0FBTyxFQUFFQyxvQkFDMUIsOERBQUNDO1FBQ0NELEtBQUtBO1FBQ0xGLFdBQVdILDhDQUFFQSxDQUFDLDhCQUE4Qkc7UUFDM0MsR0FBR0MsS0FBSzs7Ozs7O0FBR2JVLFdBQVdQLFdBQVcsR0FBRztBQUV1RCIsInNvdXJjZXMiOlsiRDpcXGNvZGluZ1xcZGFzaCBkeW5hbWljc1xcZGFzaGJvYXJkc1xcTG9jYWxiYWNrZW5kXFxjaGFyZ2luZy1zeXN0ZW1cXGNvbXBvbmVudHNcXHVpXFxjYXJkLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb21wb25lbnRzL3VpL2NhcmQudHN4XHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gXCJyZWFjdFwiXHJcbmltcG9ydCB7IGNuIH0gZnJvbSBcIkAvbGliL3V0aWxzXCJcclxuXHJcbmNvbnN0IENhcmQgPSBSZWFjdC5mb3J3YXJkUmVmPFxyXG4gIEhUTUxEaXZFbGVtZW50LFxyXG4gIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PlxyXG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgPGRpdlxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFxyXG4gICAgICBcInJvdW5kZWQteGwgYm9yZGVyIGJnLWNhcmQgdGV4dC1jYXJkLWZvcmVncm91bmQgc2hhZG93XCIsXHJcbiAgICAgIGNsYXNzTmFtZVxyXG4gICAgKX1cclxuICAgIHsuLi5wcm9wc31cclxuICAvPlxyXG4pKVxyXG5DYXJkLmRpc3BsYXlOYW1lID0gXCJDYXJkXCJcclxuXHJcbmNvbnN0IENhcmRIZWFkZXIgPSBSZWFjdC5mb3J3YXJkUmVmPFxyXG4gIEhUTUxEaXZFbGVtZW50LFxyXG4gIFJlYWN0LkhUTUxBdHRyaWJ1dGVzPEhUTUxEaXZFbGVtZW50PlxyXG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgPGRpdlxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFwiZmxleCBmbGV4LWNvbCBzcGFjZS15LTEuNSBwLTZcIiwgY2xhc3NOYW1lKX1cclxuICAgIHsuLi5wcm9wc31cclxuICAvPlxyXG4pKVxyXG5DYXJkSGVhZGVyLmRpc3BsYXlOYW1lID0gXCJDYXJkSGVhZGVyXCJcclxuXHJcbmNvbnN0IENhcmRUaXRsZSA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTFBhcmFncmFwaEVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTEhlYWRpbmdFbGVtZW50PlxyXG4+KCh7IGNsYXNzTmFtZSwgLi4ucHJvcHMgfSwgcmVmKSA9PiAoXHJcbiAgPGgzXHJcbiAgICByZWY9e3JlZn1cclxuICAgIGNsYXNzTmFtZT17Y24oXCJmb250LXNlbWlib2xkIGxlYWRpbmctbm9uZSB0cmFja2luZy10aWdodFwiLCBjbGFzc05hbWUpfVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbikpXHJcbkNhcmRUaXRsZS5kaXNwbGF5TmFtZSA9IFwiQ2FyZFRpdGxlXCJcclxuXHJcbmNvbnN0IENhcmREZXNjcmlwdGlvbiA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTFBhcmFncmFwaEVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTFBhcmFncmFwaEVsZW1lbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8cFxyXG4gICAgcmVmPXtyZWZ9XHJcbiAgICBjbGFzc05hbWU9e2NuKFwidGV4dC1zbSB0ZXh0LW11dGVkLWZvcmVncm91bmRcIiwgY2xhc3NOYW1lKX1cclxuICAgIHsuLi5wcm9wc31cclxuICAvPlxyXG4pKVxyXG5DYXJkRGVzY3JpcHRpb24uZGlzcGxheU5hbWUgPSBcIkNhcmREZXNjcmlwdGlvblwiXHJcblxyXG5jb25zdCBDYXJkQ29udGVudCA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTERpdkVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8ZGl2IHJlZj17cmVmfSBjbGFzc05hbWU9e2NuKFwicC02IHB0LTBcIiwgY2xhc3NOYW1lKX0gey4uLnByb3BzfSAvPlxyXG4pKVxyXG5DYXJkQ29udGVudC5kaXNwbGF5TmFtZSA9IFwiQ2FyZENvbnRlbnRcIlxyXG5cclxuY29uc3QgQ2FyZEZvb3RlciA9IFJlYWN0LmZvcndhcmRSZWY8XHJcbiAgSFRNTERpdkVsZW1lbnQsXHJcbiAgUmVhY3QuSFRNTEF0dHJpYnV0ZXM8SFRNTERpdkVsZW1lbnQ+XHJcbj4oKHsgY2xhc3NOYW1lLCAuLi5wcm9wcyB9LCByZWYpID0+IChcclxuICA8ZGl2XHJcbiAgICByZWY9e3JlZn1cclxuICAgIGNsYXNzTmFtZT17Y24oXCJmbGV4IGl0ZW1zLWNlbnRlciBwLTYgcHQtMFwiLCBjbGFzc05hbWUpfVxyXG4gICAgey4uLnByb3BzfVxyXG4gIC8+XHJcbikpXHJcbkNhcmRGb290ZXIuZGlzcGxheU5hbWUgPSBcIkNhcmRGb290ZXJcIlxyXG5cclxuZXhwb3J0IHsgQ2FyZCwgQ2FyZEhlYWRlciwgQ2FyZEZvb3RlciwgQ2FyZFRpdGxlLCBDYXJkRGVzY3JpcHRpb24sIENhcmRDb250ZW50IH0iXSwibmFtZXMiOlsiUmVhY3QiLCJjbiIsIkNhcmQiLCJmb3J3YXJkUmVmIiwiY2xhc3NOYW1lIiwicHJvcHMiLCJyZWYiLCJkaXYiLCJkaXNwbGF5TmFtZSIsIkNhcmRIZWFkZXIiLCJDYXJkVGl0bGUiLCJoMyIsIkNhcmREZXNjcmlwdGlvbiIsInAiLCJDYXJkQ29udGVudCIsIkNhcmRGb290ZXIiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./components/ui/card.tsx\n");

/***/ }),

/***/ "(ssr)/./contexts/WebSocketContext.tsx":
/*!***************************************!*\
  !*** ./contexts/WebSocketContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketProvider: () => (/* binding */ WebSocketProvider),\n/* harmony export */   useWebSocket: () => (/* binding */ useWebSocket)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sonner */ \"(ssr)/./node_modules/sonner/dist/index.mjs\");\n// \"use client\";\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\";\n// // Define WebSocket data types\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n// }\n// interface ChargingStatus {\n//   isCharging: boolean;\n// }\n// // Define WebSocket message structure\n// interface WebSocketMessage {\n//   type: string;\n//   data: BMSData | ChargingStatus;\n// }\n// // Define WebSocket context type\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void;\n//   connected: boolean;\n//   bmsData: BMSData;\n//   chargingStatus: ChargingStatus;\n//   lastMessage: WebSocketMessage | null;\n// }\n// // Create WebSocket context\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // Default data values\n// const defaultBMSData: BMSData = {\n//   voltage: 0,\n//   current: 0,\n//   SOC: 0,\n//   isReceiverCoilDetected: false,\n// };\n// const defaultChargingStatus: ChargingStatus = {\n//   isCharging: false,\n// };\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false);\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null);\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData);\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus);\n//   const ws = useRef<WebSocket | null>(null);\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n//   const connect = useCallback(() => {\n//     if (ws.current) return; // Prevent multiple WebSocket instances\n//     ws.current = new WebSocket(\"ws://localhost:8080\"); // Replace with your WebSocket server URL\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true);\n//       toast.success(\"Connected to charging system\");\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current);\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data);\n//         console.log(\"🟢 Received WebSocket Data:\", data);\n//         setLastMessage(data);\n//         switch (data.type) {\n//           case \"bms_data\":\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData);\n//             break;\n//             case \"charging_status\":\n//               const chargingData = data.data as ChargingStatus;\n//               console.log(\"⚡ Raw Charging Status Received:\", JSON.stringify(chargingData, null, 2));\n//               setChargingStatus((prev) => ({\n//                 ...prev,\n//                 ...chargingData,\n//               }));\n//               break;\n//           case \"error\":\n//             toast.error(\"⚠️ Unknown error occurred\");\n//             break;\n//           default:\n//             console.log(\"🔍 Received unknown message type:\", data);\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\");\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false);\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect();\n//       }, 3000);\n//     };\n//   }, []);\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close();\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n//     };\n//   }, [connect]);\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       ws.current.send(JSON.stringify(message));\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\");\n//     }\n//   };\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // Custom hook to use WebSocket context\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n//   }\n//   return context;\n// };\n//FALSE CHARGING\n// \"use client\";\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\";\n// // Define WebSocket data types\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n// }\n// interface ChargingStatus {\n//   isCharging: boolean;\n// }\n// // Define WebSocket message structure\n// interface WebSocketMessage {\n//   type: string;\n//   data: BMSData | ChargingStatus;\n// }\n// // Define WebSocket context type\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void;\n//   connected: boolean;\n//   bmsData: BMSData;\n//   chargingStatus: ChargingStatus;\n//   lastMessage: WebSocketMessage | null;\n// }\n// // Create WebSocket context\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // Default data values\n// const defaultBMSData: BMSData = {\n//   voltage: 0,\n//   current: 0,\n//   SOC: 0,\n//   isReceiverCoilDetected: false,\n// };\n// const defaultChargingStatus: ChargingStatus = {\n//   isCharging: false,\n// };\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false);\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null);\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData);\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus);\n//   const ws = useRef<WebSocket | null>(null);\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n//   const connect = useCallback(() => {\n//     if (ws.current) return;\n//     ws.current = new WebSocket(\"ws://localhost:8080\");\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true);\n//       toast.success(\"Connected to charging system\");\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current);\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data);\n//         console.log(\"🟢 Received WebSocket Data:\", data);\n//         setLastMessage(data);\n//         switch (data.type) {\n//           case \"bms_data\":\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData);\n//             break;\n//           case \"charging_status\":\n//             const chargingData = data.data as ChargingStatus;\n//             console.log(\"⚡ Charging Status Received:\", JSON.stringify(chargingData, null, 2));\n//             setChargingStatus(chargingData);\n//             if (!chargingData.isCharging) {\n//               toast.info(\"Charging has been turned OFF by the user.\");\n//             } else {\n//               toast.info(\"Charging has started.\");\n//             }\n//             break;\n//           case \"error\":\n//             toast.error(\"⚠️ Unknown error occurred\");\n//             break;\n//           default:\n//             console.log(\"🔍 Received unknown message type:\", data);\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\");\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false);\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect();\n//       }, 3000);\n//     };\n//   }, []);\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close();\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n//     };\n//   }, [connect]);\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       ws.current.send(JSON.stringify(message));\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\");\n//     }\n//   };\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // Custom hook to use WebSocket context\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n//   }\n//   return context;\n// };\n///test\n// \"use client\"; // Next.js ka client component batane ke liye\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\"; // Notification dikhane ke liye\n// // ✅ WebSocket se aane wale data ka type define karna\n// interface BMSData {\n//   voltage: number; // Battery voltage\n//   current: number; // Current flow\n//   SOC: number; // Battery ka charge level (State of Charge)\n//   isReceiverCoilDetected: boolean; // Kya receiver coil detect ho rahi hai ya nahi\n// }\n// interface ChargingStatus {\n//   isCharging: boolean; // Kya charging chal rahi hai ya nahi\n// }\n// // ✅ WebSocket se aane wale message ka structure define karna\n// interface WebSocketMessage {\n//   type: string; // Message ka type batane ke liye\n//   data: BMSData | ChargingStatus | { message: string }; // Ya to BMS ka data hoga ya charging status\n// }\n// // ✅ WebSocket context ka type define karna\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void; // Message bhejne ka function\n//   connected: boolean; // Kya WebSocket connected hai ya nahi\n//   bmsData: BMSData; // Battery ka data\n//   chargingStatus: ChargingStatus; // Charging ka status\n//   lastMessage: WebSocketMessage | null; // Last message jo WebSocket se aaya\n// }\n// // ✅ WebSocket context create karna\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // ✅ Default values set karna\n// const defaultBMSData: BMSData = { voltage: 0, current: 0, SOC: 0, isReceiverCoilDetected: false };\n// const defaultChargingStatus: ChargingStatus = { isCharging: false };\n// // ✅ WebSocket Provider component banaya jisme WebSocket ka connection handle hoga\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false); // Connection ka status\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null); // Last received message\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData); // Battery data store karne ke liye\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus); // Charging status store karne ke liye\n//   const ws = useRef<WebSocket | null>(null); // WebSocket connection ka reference\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined); // Auto-reconnect ka timeout store karne ke liye\n//   // ✅ WebSocket se connection establish karne ka function\n//   const connect = useCallback(() => {\n//     if (ws.current) return; // Agar pehle se connected hai to dobara mat connect karo\n//     ws.current = new WebSocket(\"ws://localhost:8080\"); // WebSocket ka connection start karo\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true); // Connected status ko true kar do\n//       toast.success(\"Connected to charging system\"); // Notification bhejo\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current); // Agar koi reconnect timeout hai to use hata do\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       console.log(\"🔄 RAW WebSocket Data Received:\", event.data); // Received message ka log dikhana\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data); // Message ko JSON me parse karna\n//         console.log(\"✅ Parsed WebSocket Data:\", data);\n//         setLastMessage(data); // Last message ko update karna\n//         switch (data.type) {\n//           case \"bms_data\": // Agar message BMS ka data hai\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData); // BMS ka data update kar do\n//             break;\n//           case \"charging_status\": // Agar message charging status ka hai\n//             const chargingData = data.data as ChargingStatus;\n//             console.log(\"⚡ Charging Status:\", JSON.stringify(chargingData, null, 2));\n//             setChargingStatus(chargingData); // Charging status update kar do\n//             if (!chargingData.isCharging) {\n//               toast.info(\"🔴 Charging has been turned OFF.\"); // Charging band hone ka message dikhana\n//             } else {\n//               toast.success(\"⚡ Charging Started!\"); // Charging start hone ka message dikhana\n//             }\n//             break;\n//           case \"test_message\": // Server se koi test message aya\n//             console.log(\"📩 Test Message from Server:\", data.data);\n//             break;\n//           case \"error\": // Agar WebSocket error aayi\n//             toast.error(\"⚠️ WebSocket Error Received\");\n//             break;\n//           default:\n//             console.warn(\"🔍 Unknown WebSocket Message:\", data); // Agar unknown message aaye to warning do\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\"); // WebSocket error ka notification bhejna\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false); // Connection ko false kar do\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect(); // 3 second baad reconnect karne ka try karna\n//       }, 3000);\n//     };\n//   }, []);\n//   // ✅ Component jab load ho to WebSocket connection start ho\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close(); // Component unload hone par connection close kar do\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current); // Timeout clear kar do\n//     };\n//   }, [connect]);\n//   // ✅ WebSocket message bhejne ka function\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message)); // Message ka log\n//       ws.current.send(JSON.stringify(message)); // WebSocket par message bhejna\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\"); // Agar connection nahi hai to error dikhana\n//     }\n//   };\n//   // ✅ WebSocket provider return kar raha hai jo children ko wrap karega\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // ✅ Custom hook jo WebSocket context ka use karega\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\"); // Agar context nahi mila to error do\n//   }\n//   return context;\n// };\n////fod\n// \"use client\"; // Next.js ka client component batane ke liye\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\"; // Notification dikhane ke liye\n// // ✅ WebSocket se aane wale data ka type define karna\n// interface BMSData {\n//   voltage: number; // Battery voltage\n//   current: number; // Current flow\n//   SOC: number; // Battery ka charge level (State of Charge)\n//   isReceiverCoilDetected: boolean;\n//   isFOD: boolean;// Kya receiver coil detect ho rahi hai ya nahi\n//   isMiss: boolean;\n// }\n// interface ChargingStatus {\n//   isCharging: boolean; // Kya charging chal rahi hai ya nahi\n// }\n// // ✅ WebSocket se aane wale message ka structure define karna\n// interface WebSocketMessage {\n//   type: string; // Message ka type batane ke liye\n//   data: BMSData | ChargingStatus | { message: string }; // Ya to BMS ka data hoga ya charging status\n// }\n// // ✅ WebSocket context ka type define karna\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void; // Message bhejne ka function\n//   connected: boolean; // Kya WebSocket connected hai ya nahi\n//   bmsData: BMSData; // Battery ka data\n//   chargingStatus: ChargingStatus; // Charging ka status\n//   lastMessage: WebSocketMessage | null; // Last message jo WebSocket se aaya\n// }\n// // ✅ WebSocket context create karna\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // ✅ Default values set karna\n// const defaultBMSData: BMSData = { voltage: 0, current: 0, SOC: 0, isReceiverCoilDetected: false,  isFOD: false, isMiss:false, };\n// const defaultChargingStatus: ChargingStatus = { isCharging: false };\n// // ✅ WebSocket Provider component banaya jisme WebSocket ka connection handle hoga\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false); // Connection ka status\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null); // Last received message\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData); // Battery data store karne ke liye\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus); // Charging status store karne ke liye\n//   const ws = useRef<WebSocket | null>(null); // WebSocket connection ka reference\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined); // Auto-reconnect ka timeout store karne ke liye\n//   // ✅ WebSocket se connection establish karne ka function\n//   const connect = useCallback(() => {\n//     if (ws.current) return; // Agar pehle se connected hai to dobara mat connect karo\n//     ws.current = new WebSocket(\"ws://localhost:8080\"); // WebSocket ka connection start karo\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true); // Connected status ko true kar do\n//       toast.success(\"Connected to charging system\"); // Notification bhejo\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current); // Agar koi reconnect timeout hai to use hata do\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       console.log(\"🔄 RAW WebSocket Data Received:\", event.data); // Received message ka log dikhana\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data); // Message ko JSON me parse karna\n//         console.log(\"✅ Parsed WebSocket Data:\", data);\n//         setLastMessage(data); // Last message ko update karna\n//         switch (data.type) {\n//           case \"bms_data\": // Agar message BMS ka data hai\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData); // BMS ka data update kar do\n//             break;\n//           case \"charging_status\": // Agar message charging status ka hai\n//             const chargingData = data.data as ChargingStatus;\n//             console.log(\"⚡ Charging Status:\", JSON.stringify(chargingData, null, 2));\n//             setChargingStatus(chargingData); // Charging status update kar do\n//             if (!chargingData.isCharging) {\n//               toast.info(\"🔴 Charging has been turned OFF.\"); // Charging band hone ka message dikhana\n//             } else {\n//               toast.success(\"⚡ Charging Started!\"); // Charging start hone ka message dikhana\n//             }\n//             break;\n//           case \"test_message\": // Server se koi test message aya\n//             console.log(\"📩 Test Message from Server:\", data.data);\n//             break;\n//           case \"error\": // Agar WebSocket error aayi\n//             toast.error(\"⚠️ WebSocket Error Received\");\n//             break;\n//           default:\n//             console.warn(\"🔍 Unknown WebSocket Message:\", data); // Agar unknown message aaye to warning do\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\"); // WebSocket error ka notification bhejna\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false); // Connection ko false kar do\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect(); // 3 second baad reconnect karne ka try karna\n//       }, 3000);\n//     };\n//   }, []);\n//   // ✅ Component jab load ho to WebSocket connection start ho\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close(); // Component unload hone par connection close kar do\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current); // Timeout clear kar do\n//     };\n//   }, [connect]);\n//   // ✅ WebSocket message bhejne ka function\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message)); // Message ka log\n//       ws.current.send(JSON.stringify(message)); // WebSocket par message bhejna\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\"); // Agar connection nahi hai to error dikhana\n//     }\n//   };\n//   useEffect(() => {\n//     if (bmsData.isFOD) {\n//       toast.error(\"⚠️ Foreign Object Detected! Charging may be unsafe.\");\n//     }\n//   }, [bmsData.isFOD]);\n//   // ✅ WebSocket provider return kar raha hai jo children ko wrap karega\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // ✅ Custom hook jo WebSocket context ka use karega\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\"); // Agar context nahi mila to error do\n//   }\n//   return context;\n// };\n// /missalignemnt\n/* __next_internal_client_entry_do_not_use__ WebSocketProvider,useWebSocket auto */ \n\n // Notification dikhane ke liye\n// ✅ WebSocket context create karna\nconst WebSocketContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n// ✅ Default values set karna\nconst defaultBMSData = {\n    voltage: 0,\n    current: 0,\n    SOC: 0,\n    isReceiverCoilDetected: false,\n    isFOD: false,\n    isMiss: false\n};\nconst defaultChargingStatus = {\n    isCharging: false\n};\n// ✅ WebSocket Provider component banaya jisme WebSocket ka connection handle hoga\nfunction WebSocketProvider({ children }) {\n    const [connected, setConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Connection ka status\n    const [lastMessage, setLastMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Last received message\n    const [bmsData, setBMSData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultBMSData); // Battery data store karne ke liye\n    const [chargingStatus, setChargingStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultChargingStatus); // Charging status store karne ke liye\n    const ws = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // WebSocket connection ka reference\n    const reconnectTimeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(undefined); // Auto-reconnect ka timeout store karne ke liye\n    // ✅ WebSocket se connection establish karne ka function\n    const connect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketProvider.useCallback[connect]\": ()=>{\n            if (ws.current) return; // Agar pehle se connected hai to dobara mat connect karo\n            ws.current = new WebSocket(\"ws://localhost:8080\"); // WebSocket ka connection start karo\n            ws.current.onopen = ({\n                \"WebSocketProvider.useCallback[connect]\": ()=>{\n                    console.log(\"✅ WebSocket Connected\");\n                    setConnected(true); // Connected status ko true kar do\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Connected to charging system\"); // Notification bhejo\n                    if (reconnectTimeout.current) {\n                        clearTimeout(reconnectTimeout.current); // Agar koi reconnect timeout hai to use hata do\n                        reconnectTimeout.current = undefined;\n                    }\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n            ws.current.onmessage = ({\n                \"WebSocketProvider.useCallback[connect]\": (event)=>{\n                    console.log(\"🔄 RAW WebSocket Data Received:\", event.data); // Received message ka log dikhana\n                    try {\n                        const data = JSON.parse(event.data); // Message ko JSON me parse karna\n                        console.log(\"✅ Parsed WebSocket Data:\", data);\n                        setLastMessage(data); // Last message ko update karna\n                        switch(data.type){\n                            case \"bms_data\":\n                                console.log(\"🔋 BMS Data:\", data.data);\n                                setBMSData(data.data); // BMS ka data update kar do\n                                break;\n                            case \"charging_status\":\n                                const chargingData = data.data;\n                                console.log(\"⚡ Charging Status:\", JSON.stringify(chargingData, null, 2));\n                                setChargingStatus(chargingData); // Charging status update kar do\n                                if (!chargingData.isCharging) {\n                                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.info(\"🔴 Charging has been turned OFF.\"); // Charging band hone ka message dikhana\n                                } else {\n                                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"⚡ Charging Started!\"); // Charging start hone ka message dikhana\n                                }\n                                break;\n                            case \"test_message\":\n                                console.log(\"📩 Test Message from Server:\", data.data);\n                                break;\n                            case \"error\":\n                                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"⚠️ WebSocket Error Received\");\n                                break;\n                            default:\n                                console.warn(\"🔍 Unknown WebSocket Message:\", data); // Agar unknown message aaye to warning do\n                        }\n                    } catch (error) {\n                        console.error(\"❌ WebSocket Data Parsing Error:\", error);\n                    }\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n            ws.current.onerror = ({\n                \"WebSocketProvider.useCallback[connect]\": (event)=>{\n                    console.error(\"🚨 WebSocket Error:\", event);\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"WebSocket connection error\"); // WebSocket error ka notification bhejna\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n            ws.current.onclose = ({\n                \"WebSocketProvider.useCallback[connect]\": ()=>{\n                    console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n                    setConnected(false); // Connection ko false kar do\n                    ws.current = null;\n                    reconnectTimeout.current = setTimeout({\n                        \"WebSocketProvider.useCallback[connect]\": ()=>{\n                            console.log(\"🔄 Attempting to reconnect...\");\n                            connect(); // 3 second baad reconnect karne ka try karna\n                        }\n                    }[\"WebSocketProvider.useCallback[connect]\"], 3000);\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n        }\n    }[\"WebSocketProvider.useCallback[connect]\"], []);\n    // ✅ Component jab load ho to WebSocket connection start ho\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketProvider.useEffect\": ()=>{\n            connect();\n            return ({\n                \"WebSocketProvider.useEffect\": ()=>{\n                    if (ws.current) ws.current.close(); // Component unload hone par connection close kar do\n                    if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current); // Timeout clear kar do\n                }\n            })[\"WebSocketProvider.useEffect\"];\n        }\n    }[\"WebSocketProvider.useEffect\"], [\n        connect\n    ]);\n    // ✅ WebSocket message bhejne ka function\n    const sendMessage = (message)=>{\n        if (ws.current?.readyState === WebSocket.OPEN) {\n            console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message)); // Message ka log\n            ws.current.send(JSON.stringify(message)); // WebSocket par message bhejna\n        } else {\n            sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"❌ Not connected to charging system\"); // Agar connection nahi hai to error dikhana\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketProvider.useEffect\": ()=>{\n            if (bmsData.isFOD) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"⚠️ Foreign Object Detected! Charging may be unsafe.\");\n            }\n        }\n    }[\"WebSocketProvider.useEffect\"], [\n        bmsData.isFOD\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketProvider.useEffect\": ()=>{\n            if (bmsData.isMiss) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"⚠️ Misalignment detected! Please realign the vehicle.\");\n            }\n        }\n    }[\"WebSocketProvider.useEffect\"], [\n        bmsData.isMiss\n    ]);\n    // ✅ WebSocket provider return kar raha hai jo children ko wrap karega\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WebSocketContext.Provider, {\n        value: {\n            sendMessage,\n            connected,\n            bmsData,\n            chargingStatus,\n            lastMessage\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\contexts\\\\WebSocketContext.tsx\",\n        lineNumber: 813,\n        columnNumber: 5\n    }, this);\n}\n// ✅ Custom hook jo WebSocket context ka use karega\nconst useWebSocket = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WebSocketContext);\n    if (!context) {\n        throw new Error(\"useWebSocket must be used within a WebSocketProvider\"); // Agar context nahi mila to error do\n    }\n    return context;\n}; //soc\n // \"use client\";\n // import React, {\n //   createContext,\n //   useContext,\n //   useEffect,\n //   useRef,\n //   useState,\n //   useCallback,\n // } from \"react\";\n // import { toast } from \"sonner\";\n // // Updated BMSData with targetSOC\n // interface BMSData {\n //   voltage: number;\n //   current: number;\n //   SOC: number;\n //   isReceiverCoilDetected: boolean;\n //   isFOD: boolean;\n //   isMiss: boolean;\n //   targetSOC: number; // ✅ New field\n // }\n // interface ChargingStatus {\n //   isCharging: boolean;\n // }\n // interface WebSocketMessage {\n //   type: string;\n //   data: BMSData | ChargingStatus | { message: string };\n // }\n // interface WebSocketContextType {\n //   sendMessage: (message: unknown) => void;\n //   connected: boolean;\n //   bmsData: BMSData;\n //   chargingStatus: ChargingStatus;\n //   lastMessage: WebSocketMessage | null;\n // }\n // const WebSocketContext = createContext<WebSocketContextType | null>(null);\n // // Updated defaultBMSData\n // const defaultBMSData: BMSData = {\n //   voltage: 0,\n //   current: 0,\n //   SOC: 15,\n //   isReceiverCoilDetected: false,\n //   isFOD: false,\n //   isMiss: false,\n //   targetSOC: 100, // ✅ Default value for targetSOC\n // };\n // const defaultChargingStatus: ChargingStatus = {\n //   isCharging: false,\n // };\n // export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n //   const [connected, setConnected] = useState(false);\n //   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null);\n //   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData);\n //   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus);\n //   const ws = useRef<WebSocket | null>(null);\n //   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n //   const connect = useCallback(() => {\n //     if (ws.current) return;\n //     ws.current = new WebSocket(\"ws://localhost:8080\");\n //     ws.current.onopen = () => {\n //       console.log(\"✅ WebSocket Connected\");\n //       setConnected(true);\n //       toast.success(\"Connected to charging system\");\n //       if (reconnectTimeout.current) {\n //         clearTimeout(reconnectTimeout.current);\n //         reconnectTimeout.current = undefined;\n //       }\n //     };\n //     ws.current.onmessage = (event) => {\n //       try {\n //         const data: WebSocketMessage = JSON.parse(event.data);\n //         console.log(\"📨 WebSocket Data:\", data);\n //         setLastMessage(data);\n //         switch (data.type) {\n //           case \"bms_data\": {\n //             const incomingData = data.data as BMSData;\n //             setBMSData((prev) => ({\n //               ...prev,\n //               ...incomingData,\n //               targetSOC: incomingData.targetSOC ?? prev.targetSOC, // ✅ Handle partial data\n //             }));\n //             break;\n //           }\n //           case \"charging_status\": {\n //             const chargingData = data.data as ChargingStatus;\n //             setChargingStatus(chargingData);\n //             toast[chargingData.isCharging ? \"success\" : \"info\"](\n //               chargingData.isCharging ? \"⚡ Charging Started!\" : \"🔴 Charging has been turned OFF.\"\n //             );\n //             break;\n //           }\n //           case \"test_message\":\n //             console.log(\"📩 Test Message from Server:\", data.data);\n //             break;\n //           case \"error\":\n //             toast.error(\"⚠️ WebSocket Error Received\");\n //             break;\n //           default:\n //             console.warn(\"🔍 Unknown WebSocket Message:\", data);\n //         }\n //       } catch (error) {\n //         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n //       }\n //     };\n //     ws.current.onerror = (event) => {\n //       console.error(\"🚨 WebSocket Error:\", event);\n //       toast.error(\"WebSocket connection error\");\n //     };\n //     ws.current.onclose = () => {\n //       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n //       setConnected(false);\n //       ws.current = null;\n //       reconnectTimeout.current = setTimeout(() => {\n //         console.log(\"🔄 Attempting to reconnect...\");\n //         connect();\n //       }, 3000);\n //     };\n //   }, []);\n //   useEffect(() => {\n //     connect();\n //     return () => {\n //       if (ws.current) ws.current.close();\n //       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n //     };\n //   }, [connect]);\n //   const sendMessage = (message: unknown) => {\n //     if (ws.current?.readyState === WebSocket.OPEN) {\n //       console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message));\n //       ws.current.send(JSON.stringify(message));\n //     } else {\n //       toast.error(\"❌ Not connected to charging system\");\n //     }\n //   };\n //   useEffect(() => {\n //     if (bmsData.isFOD) {\n //       toast.error(\"⚠️ Foreign Object Detected! Charging may be unsafe.\");\n //     }\n //   }, [bmsData.isFOD]);\n //   useEffect(() => {\n //     if (bmsData.isMiss) {\n //       toast.error(\"⚠️ Misalignment detected! Please realign the vehicle.\");\n //     }\n //   }, [bmsData.isMiss]);\n //   return (\n //     <WebSocketContext.Provider\n //       value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}\n //     >\n //       {children}\n //     </WebSocketContext.Provider>\n //   );\n // }\n // export const useWebSocket = () => {\n //   const context = useContext(WebSocketContext);\n //   if (!context) {\n //     throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n //   }\n //   return context;\n // };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./contexts/WebSocketContext.tsx\n");

/***/ }),

/***/ "(ssr)/./hooks/useBMSData.ts":
/*!*****************************!*\
  !*** ./hooks/useBMSData.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBMSData: () => (/* binding */ useBMSData)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/WebSocketContext */ \"(ssr)/./contexts/WebSocketContext.tsx\");\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sonner */ \"(ssr)/./node_modules/sonner/dist/index.mjs\");\n// \"use client\";\n// import { useState, useEffect, useCallback } from 'react';\n// import { useWebSocket } from '../contexts/WebSocketContext';\n// import { toast } from 'sonner';\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n// }\n// export function useBMSData() {\n//   const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = useWebSocket();\n//   const [bmsData, setBMSData] = useState<BMSData>({\n//     voltage: 0,\n//     current: 0,\n//     SOC: 15,\n//     isReceiverCoilDetected: false,\n//   });\n//   // Update BMS data when receiving new messages\n//   useEffect(() => {\n//     if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n//       setBMSData(lastMessage.data as BMSData);\n//     }\n//   }, [lastMessage]);\n//   // Sync with context BMS data\n//   useEffect(() => {\n//     setBMSData(contextBMSData);\n//   }, [contextBMSData]);\n//   // Update BMS data\n//   const updateBMSData = useCallback(async (newData: Partial<BMSData>): Promise<boolean> => {\n//     if (!connected) {\n//       toast.error('Not connected to charging system');\n//       return false;\n//     }\n//     try {\n//       const updatedData = {\n//         ...bmsData,\n//         ...newData,\n//       };\n//       sendMessage({\n//         type: 'updateBMSData',\n//         data: updatedData,\n//       });\n//       setBMSData(updatedData);\n//       return true;\n//     } catch (error) {\n//       console.error('Error updating BMS data:', error);\n//       toast.error('Failed to update BMS data');\n//       return false;\n//     }\n//   }, [connected, sendMessage, bmsData]);\n//   // Reset BMS data\n//   const resetBMSData = useCallback(() => {\n//     if (!connected) {\n//       toast.error('Not connected to charging system');\n//       return;\n//     }\n//     try {\n//       const resetData: BMSData = {\n//         voltage: 0,\n//         current: 0,\n//         SOC: 15,\n//         isReceiverCoilDetected: false,\n//       };\n//       sendMessage({\n//         type: 'resetBMSData',\n//         data: resetData,\n//       });\n//       setBMSData(resetData);\n//       toast.success('BMS data reset');\n//     } catch (error) {\n//       console.error('Error resetting BMS data:', error);\n//       toast.error('Failed to reset BMS data');\n//     }\n//   }, [connected, sendMessage]);\n//   // Monitor receiver coil detection\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected) {\n//       toast.success('Receiver coil detected');\n//     } else if (bmsData.isReceiverCoilDetected === false) {\n//       toast.error('Receiver coil not detected');\n//     }\n//   }, [bmsData.isReceiverCoilDetected]);\n//   // Calculate charging power\n//   const calculateChargingPower = useCallback((): number => {\n//     return bmsData.voltage * bmsData.current;\n//   }, [bmsData.voltage, bmsData.current]);\n//   return {\n//     bmsData,\n//     updateBMSData,\n//     resetBMSData,\n//     isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n//     chargingPower: calculateChargingPower(),\n//   };\n// }\n////fod\n// \"use client\";\n// import { useState, useEffect, useCallback } from 'react';\n// import { useWebSocket } from '../contexts/WebSocketContext';\n// import { toast } from 'sonner';\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n//   isFOD: boolean;\n//   isMiss: boolean;\n// }\n// export function useBMSData() {\n//   const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = useWebSocket();\n//   const [bmsData, setBMSData] = useState<BMSData>({\n//     voltage: 0,\n//     current: 0,\n//     SOC: 15,\n//     isReceiverCoilDetected: false,\n//     isFOD: false,\n//     isMiss: false,\n//   });\n//   // Update BMS data when receiving new messages\n//   useEffect(() => {\n//     if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n//       setBMSData(lastMessage.data as BMSData);\n//     }\n//   }, [lastMessage]);\n//   // Sync with context BMS data\n//   useEffect(() => {\n//     setBMSData(contextBMSData);\n//   }, [contextBMSData]);\n//   // Update BMS data\n//   const updateBMSData = useCallback(async (newData: Partial<BMSData>): Promise<boolean> => {\n//     if (!connected) {\n//       toast.error('Not connected to charging system');\n//       return false;\n//     }\n//     try {\n//       const updatedData = {\n//         ...bmsData,\n//         ...newData,\n//       };\n//       sendMessage({\n//         type: 'updateBMSData',\n//         data: updatedData,\n//       });\n//       setBMSData(updatedData);\n//       return true;\n//     } catch (error) {\n//       console.error('Error updating BMS data:', error);\n//       toast.error('Failed to update BMS data');\n//       return false;\n//     }\n//   }, [connected, sendMessage, bmsData]);\n//   // Reset BMS data\n//   const resetBMSData = useCallback(() => {\n//     if (!connected) {\n//       toast.error('Not connected to charging system');\n//       return;\n//     }\n//     try {\n//       const resetData: BMSData = {\n//         voltage: 0,\n//         current: 0,\n//         SOC: 15,\n//         isReceiverCoilDetected: false,\n//         isFOD: false,\n//         isMiss: false,\n//       };\n//       sendMessage({\n//         type: 'resetBMSData',\n//         data: resetData,\n//       });\n//       setBMSData(resetData);\n//       toast.success('BMS data reset');\n//     } catch (error) {\n//       console.error('Error resetting BMS data:', error);\n//       toast.error('Failed to reset BMS data');\n//     }\n//   }, [connected, sendMessage]);\n//   // Monitor receiver coil detection\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected) {\n//       toast.success('Receiver coil detected');\n//     } else if (bmsData.isReceiverCoilDetected === false) {\n//       toast.error('Receiver coil not detected');\n//     }\n//   }, [bmsData.isReceiverCoilDetected]);\n//   // Calculate charging power\n//   const calculateChargingPower = useCallback((): number => {\n//     return bmsData.voltage * bmsData.current;\n//   }, [bmsData.voltage, bmsData.current]);\n//   return {\n//     bmsData,\n//     updateBMSData,\n//     resetBMSData,\n//     isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n//     isFOD: bmsData.isFOD,\n//     isMiss: bmsData.isMiss,\n//     chargingPower: calculateChargingPower(),\n//   };\n// }\n//miss alignment\n/* __next_internal_client_entry_do_not_use__ useBMSData auto */ \n\n\nfunction useBMSData() {\n    const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = (0,_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__.useWebSocket)();\n    const [bmsData, setBMSData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        voltage: 0,\n        current: 0,\n        SOC: 15,\n        isReceiverCoilDetected: false,\n        // targetSOC: 0,\n        isFOD: false,\n        isMiss: false\n    });\n    // Update BMS data when receiving new messages\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useBMSData.useEffect\": ()=>{\n            if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n                setBMSData(lastMessage.data);\n            }\n        }\n    }[\"useBMSData.useEffect\"], [\n        lastMessage\n    ]);\n    // Sync with context BMS data\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useBMSData.useEffect\": ()=>{\n            setBMSData(contextBMSData);\n        }\n    }[\"useBMSData.useEffect\"], [\n        contextBMSData\n    ]);\n    // Update BMS data\n    const updateBMSData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useBMSData.useCallback[updateBMSData]\": async (newData)=>{\n            if (!connected) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Not connected to charging system');\n                return false;\n            }\n            try {\n                const updatedData = {\n                    ...bmsData,\n                    ...newData\n                };\n                sendMessage({\n                    type: 'updateBMSData',\n                    data: updatedData\n                });\n                setBMSData(updatedData);\n                return true;\n            } catch (error) {\n                console.error('Error updating BMS data:', error);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Failed to update BMS data');\n                return false;\n            }\n        }\n    }[\"useBMSData.useCallback[updateBMSData]\"], [\n        connected,\n        sendMessage,\n        bmsData\n    ]);\n    // Reset BMS data\n    const resetBMSData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useBMSData.useCallback[resetBMSData]\": ()=>{\n            if (!connected) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Not connected to charging system');\n                return;\n            }\n            try {\n                const resetData = {\n                    voltage: 0,\n                    current: 0,\n                    SOC: 15,\n                    isReceiverCoilDetected: false,\n                    isFOD: false,\n                    // targetSOC: 0,\n                    isMiss: false\n                };\n                sendMessage({\n                    type: 'resetBMSData',\n                    data: resetData\n                });\n                setBMSData(resetData);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success('BMS data reset');\n            } catch (error) {\n                console.error('Error resetting BMS data:', error);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Failed to reset BMS data');\n            }\n        }\n    }[\"useBMSData.useCallback[resetBMSData]\"], [\n        connected,\n        sendMessage\n    ]);\n    // Monitor receiver coil detection\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useBMSData.useEffect\": ()=>{\n            if (bmsData.isReceiverCoilDetected) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success('Receiver coil detected');\n            } else if (bmsData.isReceiverCoilDetected === false) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Receiver coil not detected');\n            }\n        }\n    }[\"useBMSData.useEffect\"], [\n        bmsData.isReceiverCoilDetected\n    ]);\n    // Calculate charging power\n    // const calculateChargingPower = useCallback((): number => {\n    //   return bmsData.voltage * bmsData.current;\n    // }, [bmsData.voltage, bmsData.current]);\n    const calculateChargingPower = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useBMSData.useCallback[calculateChargingPower]\": ()=>{\n            const voltage = bmsData?.voltage ?? 0;\n            const current = bmsData?.current ?? 0;\n            const powerW = voltage * current; // Power in Watts\n            const energyIncrement = powerW / 1000 / 3600; // kWh added every second\n            return Number(energyIncrement.toFixed(6)); // rounded to 6 decimal places\n        }\n    }[\"useBMSData.useCallback[calculateChargingPower]\"], [\n        bmsData?.voltage,\n        bmsData?.current\n    ]);\n    return {\n        bmsData,\n        updateBMSData,\n        resetBMSData,\n        isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n        isFOD: bmsData.isFOD,\n        isMiss: bmsData.isMiss,\n        chargingPower: calculateChargingPower()\n    };\n} // soc\n // \"use client\";\n // import { useState, useEffect, useCallback } from 'react';\n // import { useWebSocket } from '../contexts/WebSocketContext';\n // import { toast } from 'sonner';\n // interface BMSData {\n //   voltage: number;\n //   current: number;\n //   SOC: number;\n //   isReceiverCoilDetected: boolean;\n //   isFOD: boolean;\n //   isMiss: boolean;\n // }\n // export function useBMSData() {\n //   const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = useWebSocket();\n //   const [bmsData, setBMSData] = useState<BMSData>({\n //     voltage: 0,\n //     current: 0,\n //     SOC: 15,\n //     isReceiverCoilDetected: false,\n //     isFOD: false,\n //     isMiss: false,\n //   });\n //   // Update BMS data when receiving new messages\n //   useEffect(() => {\n //     if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n //       setBMSData(lastMessage.data as BMSData);\n //     }\n //   }, [lastMessage]);\n //   // Sync with context BMS data\n //   useEffect(() => {\n //     setBMSData(contextBMSData);\n //   }, [contextBMSData]);\n //   // Update BMS data\n //   const updateBMSData = useCallback(async (newData: Partial<BMSData>): Promise<boolean> => {\n //     if (!connected) {\n //       toast.error('Not connected to charging system');\n //       return false;\n //     }\n //     try {\n //       const updatedData = {\n //         ...bmsData,\n //         ...newData,\n //       };\n //       sendMessage({\n //         type: 'updateBMSData',\n //         data: updatedData,\n //       });\n //       setBMSData(updatedData);\n //       return true;\n //     } catch (error) {\n //       console.error('Error updating BMS data:', error);\n //       toast.error('Failed to update BMS data');\n //       return false;\n //     }\n //   }, [connected, sendMessage, bmsData]);\n //   // Reset BMS data\n //   const resetBMSData = useCallback(() => {\n //     if (!connected) {\n //       toast.error('Not connected to charging system');\n //       return;\n //     }\n //     try {\n //       const resetData: BMSData = {\n //         voltage: 0,\n //         current: 0,\n //         SOC: 15,\n //         isReceiverCoilDetected: false,\n //         isFOD: false,\n //         isMiss: false,\n //       };\n //       sendMessage({\n //         type: 'resetBMSData',\n //         data: resetData,\n //       });\n //       setBMSData(resetData);\n //       toast.success('BMS data reset');\n //     } catch (error) {\n //       console.error('Error resetting BMS data:', error);\n //       toast.error('Failed to reset BMS data');\n //     }\n //   }, [connected, sendMessage]);\n //   // Monitor receiver coil detection\n //   useEffect(() => {\n //     if (bmsData.isReceiverCoilDetected) {\n //       toast.success('Receiver coil detected');\n //     } else if (bmsData.isReceiverCoilDetected === false) {\n //       toast.error('Receiver coil not detected');\n //     }\n //   }, [bmsData.isReceiverCoilDetected]);\n //   // Calculate charging power\n //   const calculateChargingPower = useCallback((): number => {\n //     return bmsData.voltage * bmsData.current;\n //   }, [bmsData.voltage, bmsData.current]);\n //   return {\n //     bmsData,\n //     updateBMSData,\n //     resetBMSData,\n //     isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n //     isFOD: bmsData.isFOD,\n //     isMiss: bmsData.isMiss,\n //     chargingPower: calculateChargingPower(),\n //   };\n // }\n //soc\n // \"use client\";\n // import { useState, useEffect, useCallback } from 'react';\n // import { useWebSocket } from '../contexts/WebSocketContext';\n // import { toast } from 'sonner';\n // interface BMSData {\n //   voltage: number;\n //   current: number;\n //   SOC: number;\n //   targetSOC: number; // ✅ Added targetSOC\n //   isReceiverCoilDetected: boolean;\n //   isFOD: boolean;\n //   isMiss: boolean;\n // }\n // export function useBMSData() {\n //   const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = useWebSocket();\n //   const [bmsData, setBMSData] = useState<BMSData>({\n //     voltage: 0,\n //     current: 0,\n //     SOC: 15,\n //     targetSOC: 100, // ✅ Default value\n //     isReceiverCoilDetected: false,\n //     isFOD: false,\n //     isMiss: false,\n //   });\n //   // Update BMS data when receiving new messages\n //   useEffect(() => {\n //     if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n //       setBMSData(lastMessage.data as BMSData);\n //     }\n //   }, [lastMessage]);\n //   // Sync with context BMS data\n //   useEffect(() => {\n //     setBMSData(contextBMSData);\n //   }, [contextBMSData]);\n //   // Update BMS data (including targetSOC)\n //   const updateBMSData = useCallback(async (newData: Partial<BMSData>): Promise<boolean> => {\n //     if (!connected) {\n //       toast.error('Not connected to charging system');\n //       return false;\n //     }\n //     try {\n //       const updatedData = {\n //         ...bmsData,\n //         ...newData,\n //       };\n //       // Use a consistent message type for bms_data\n //       sendMessage({\n //         type: 'bms_data',\n //         data: updatedData,\n //       });\n //       setBMSData(updatedData);\n //       return true;\n //     } catch (error) {\n //       console.error('Error updating BMS data:', error);\n //       toast.error('Failed to update BMS data');\n //       return false;\n //     }\n //   }, [connected, sendMessage, bmsData]);\n //   // Reset BMS data\n //   const resetBMSData = useCallback(() => {\n //     if (!connected) {\n //       toast.error('Not connected to charging system');\n //       return;\n //     }\n //     try {\n //       const resetData: BMSData = {\n //         voltage: 0,\n //         current: 0,\n //         SOC: 15,\n //         targetSOC: 100,\n //         isReceiverCoilDetected: false,\n //         isFOD: false,\n //         isMiss: false,\n //       };\n //       sendMessage({\n //         type: 'bms_data',\n //         data: resetData,\n //       });\n //       setBMSData(resetData);\n //       toast.success('BMS data reset');\n //     } catch (error) {\n //       console.error('Error resetting BMS data:', error);\n //       toast.error('Failed to reset BMS data');\n //     }\n //   }, [connected, sendMessage]);\n //   // Monitor receiver coil detection\n //   useEffect(() => {\n //     if (bmsData.isReceiverCoilDetected) {\n //       toast.success('Receiver coil detected');\n //     } else if (bmsData.isReceiverCoilDetected === false) {\n //       toast.error('Receiver coil not detected');\n //     }\n //   }, [bmsData.isReceiverCoilDetected]);\n //   // Calculate charging power\n //   const calculateChargingPower = useCallback((): number => {\n //     return bmsData.voltage * bmsData.current;\n //   }, [bmsData.voltage, bmsData.current]);\n //   return {\n //     bmsData,\n //     updateBMSData,\n //     resetBMSData,\n //     isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n //     isFOD: bmsData.isFOD,\n //     isMiss: bmsData.isMiss,\n //     chargingPower: calculateChargingPower(),\n //   };\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./hooks/useBMSData.ts\n");

/***/ }),

/***/ "(ssr)/./hooks/useChargingStatus.ts":
/*!************************************!*\
  !*** ./hooks/useChargingStatus.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChargingStatus: () => (/* binding */ useChargingStatus)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/WebSocketContext */ \"(ssr)/./contexts/WebSocketContext.tsx\");\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sonner */ \"(ssr)/./node_modules/sonner/dist/index.mjs\");\n// \"use client\"\n// import { useState, useEffect, useCallback } from \"react\";\n// import { useWebSocket } from \"../contexts/WebSocketContext\";\n// import { toast } from \"sonner\";\n// export function useChargingStatus() {\n//   const { sendMessage, lastMessage, connected } = useWebSocket();\n//   const [isChargingInitialized, setIsChargingInitialized] = useState(false);\n//   useEffect(() => {\n//     if (!lastMessage?.data) return;\n//     try {\n//       const data = typeof lastMessage.data === \"string\" ? JSON.parse(lastMessage.data) : lastMessage.data;\n//       console.log(\"received websocket data\", data);\n//       if (typeof data.isChargingInitialized === \"boolean\") {\n//         setIsChargingInitialized(data.isChargingInitialized);\n//       }\n//     } catch (error) {\n//       console.error(\"error parsing websocket message\", error);\n//     }\n//   }, [lastMessage]); //YEH MESSAGE READ KRTEA HAI\n//   const updateChargingStatus = useCallback(\n//     async (isCharging: boolean): Promise<boolean> => {\n//       if (!connected) {\n//         toast.error(\"not connected to charging system\")\n//         return false;\n//       }\n//       try {\n//         console.log(\"sending charging status update\", { isCharging });\n//         sendMessage({\n//           type: \"charging_status\",\n//           data: { isCharging: isCharging }, ///YEH MESSAGES BHETET HAI\n//         });\n//         setIsChargingInitialized(isCharging);\n//         return true;\n//       } catch (error) {\n//         console.error(\"error updating charging status\", error);\n//         toast.error(\"failed to update charging status\");\n//         return false;\n//       }\n//     }, [connected, sendMessage, setIsChargingInitialized]\n//   );\n//   return {\n//     isChargingInitialized,\n//     updateChargingStatus,\n//   };\n// }\n//FALSE CHARGING\n/* __next_internal_client_entry_do_not_use__ useChargingStatus auto */ \n\n\nfunction useChargingStatus() {\n    const { sendMessage, lastMessage, connected } = (0,_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__.useWebSocket)();\n    const [isChargingInitialized, setIsChargingInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useChargingStatus.useEffect\": ()=>{\n            if (!lastMessage?.data) return;\n            try {\n                const data = typeof lastMessage.data === \"string\" ? JSON.parse(lastMessage.data) : lastMessage.data;\n                console.log(\"Received WebSocket Data:\", data);\n                if (typeof data.isCharging === \"boolean\") {\n                    setIsChargingInitialized(data.isCharging);\n                }\n            } catch (error) {\n                console.error(\"Error parsing WebSocket message:\", error);\n            }\n        }\n    }[\"useChargingStatus.useEffect\"], [\n        lastMessage\n    ]);\n    const updateChargingStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useChargingStatus.useCallback[updateChargingStatus]\": async (isCharging)=>{\n            if (!connected) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Not connected to charging system\");\n                return false;\n            }\n            try {\n                console.log(\"Sending charging status update:\", {\n                    isCharging\n                });\n                // Update local state\n                setIsChargingInitialized(isCharging);\n                // Send message to WebSocketContext\n                sendMessage({\n                    type: \"charging_status\",\n                    data: {\n                        isCharging\n                    }\n                });\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success(isCharging ? \"Charging started\" : \"Charging stopped\");\n                return true;\n            } catch (error) {\n                console.error(\"Error updating charging status:\", error);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update charging status\");\n                return false;\n            }\n        }\n    }[\"useChargingStatus.useCallback[updateChargingStatus]\"], [\n        connected,\n        sendMessage,\n        setIsChargingInitialized\n    ]);\n    return {\n        isChargingInitialized,\n        updateChargingStatus\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ob29rcy91c2VDaGFyZ2luZ1N0YXR1cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBLGVBQWU7QUFDZiw0REFBNEQ7QUFDNUQsK0RBQStEO0FBQy9ELGtDQUFrQztBQUVsQyx3Q0FBd0M7QUFDeEMsb0VBQW9FO0FBQ3BFLCtFQUErRTtBQUUvRSxzQkFBc0I7QUFDdEIsc0NBQXNDO0FBQ3RDLFlBQVk7QUFDWiw2R0FBNkc7QUFDN0csc0RBQXNEO0FBRXRELCtEQUErRDtBQUMvRCxnRUFBZ0U7QUFDaEUsVUFBVTtBQUNWLHdCQUF3QjtBQUN4QixpRUFBaUU7QUFDakUsUUFBUTtBQUNSLG9EQUFvRDtBQUVwRCw4Q0FBOEM7QUFDOUMseURBQXlEO0FBQ3pELDBCQUEwQjtBQUMxQiwwREFBMEQ7QUFDMUQsd0JBQXdCO0FBQ3hCLFVBQVU7QUFFVixjQUFjO0FBQ2QseUVBQXlFO0FBQ3pFLHdCQUF3QjtBQUN4QixxQ0FBcUM7QUFDckMseUVBQXlFO0FBQ3pFLGNBQWM7QUFFZCxnREFBZ0Q7QUFDaEQsdUJBQXVCO0FBRXZCLDBCQUEwQjtBQUMxQixrRUFBa0U7QUFDbEUsMkRBQTJEO0FBQzNELHdCQUF3QjtBQUN4QixVQUFVO0FBQ1YsNERBQTREO0FBRTVELE9BQU87QUFFUCxhQUFhO0FBQ2IsNkJBQTZCO0FBQzdCLDRCQUE0QjtBQUU1QixPQUFPO0FBQ1AsSUFBSTtBQUVKLGdCQUFnQjt1RUFFeUM7QUFDRztBQUM3QjtBQUV4QixTQUFTSztJQUNkLE1BQU0sRUFBRUMsV0FBVyxFQUFFQyxXQUFXLEVBQUVDLFNBQVMsRUFBRSxHQUFHTCx3RUFBWUE7SUFDNUQsTUFBTSxDQUFDTSx1QkFBdUJDLHlCQUF5QixHQUFHViwrQ0FBUUEsQ0FBQztJQUVuRUMsZ0RBQVNBO3VDQUFDO1lBQ1IsSUFBSSxDQUFDTSxhQUFhSSxNQUFNO1lBQ3hCLElBQUk7Z0JBQ0YsTUFBTUEsT0FBTyxPQUFPSixZQUFZSSxJQUFJLEtBQUssV0FBV0MsS0FBS0MsS0FBSyxDQUFDTixZQUFZSSxJQUFJLElBQUlKLFlBQVlJLElBQUk7Z0JBQ25HRyxRQUFRQyxHQUFHLENBQUMsNEJBQTRCSjtnQkFFeEMsSUFBSSxPQUFPQSxLQUFLSyxVQUFVLEtBQUssV0FBVztvQkFDeENOLHlCQUF5QkMsS0FBS0ssVUFBVTtnQkFDMUM7WUFDRixFQUFFLE9BQU9DLE9BQU87Z0JBQ2RILFFBQVFHLEtBQUssQ0FBQyxvQ0FBb0NBO1lBQ3BEO1FBQ0Y7c0NBQUc7UUFBQ1Y7S0FBWTtJQUVoQixNQUFNVyx1QkFBdUJoQixrREFBV0E7K0RBQ3RDLE9BQU9jO1lBQ0wsSUFBSSxDQUFDUixXQUFXO2dCQUNkSix5Q0FBS0EsQ0FBQ2EsS0FBSyxDQUFDO2dCQUNaLE9BQU87WUFDVDtZQUVBLElBQUk7Z0JBQ0ZILFFBQVFDLEdBQUcsQ0FBQyxtQ0FBbUM7b0JBQUVDO2dCQUFXO2dCQUU1RCxxQkFBcUI7Z0JBQ3JCTix5QkFBeUJNO2dCQUV6QixtQ0FBbUM7Z0JBQ25DVixZQUFZO29CQUNWYSxNQUFNO29CQUNOUixNQUFNO3dCQUFFSztvQkFBVztnQkFDckI7Z0JBRUFaLHlDQUFLQSxDQUFDZ0IsT0FBTyxDQUFDSixhQUFhLHFCQUFxQjtnQkFDaEQsT0FBTztZQUNULEVBQUUsT0FBT0MsT0FBTztnQkFDZEgsUUFBUUcsS0FBSyxDQUFDLG1DQUFtQ0E7Z0JBQ2pEYix5Q0FBS0EsQ0FBQ2EsS0FBSyxDQUFDO2dCQUNaLE9BQU87WUFDVDtRQUNGOzhEQUNBO1FBQUNUO1FBQVdGO1FBQWFJO0tBQXlCO0lBR3BELE9BQU87UUFDTEQ7UUFDQVM7SUFDRjtBQUNGIiwic291cmNlcyI6WyJEOlxcY29kaW5nXFxkYXNoIGR5bmFtaWNzXFxkYXNoYm9hcmRzXFxMb2NhbGJhY2tlbmRcXGNoYXJnaW5nLXN5c3RlbVxcaG9va3NcXHVzZUNoYXJnaW5nU3RhdHVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG4vLyBcInVzZSBjbGllbnRcIlxyXG4vLyBpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xyXG4vLyBpbXBvcnQgeyB1c2VXZWJTb2NrZXQgfSBmcm9tIFwiLi4vY29udGV4dHMvV2ViU29ja2V0Q29udGV4dFwiO1xyXG4vLyBpbXBvcnQgeyB0b2FzdCB9IGZyb20gXCJzb25uZXJcIjtcclxuXHJcbi8vIGV4cG9ydCBmdW5jdGlvbiB1c2VDaGFyZ2luZ1N0YXR1cygpIHtcclxuLy8gICBjb25zdCB7IHNlbmRNZXNzYWdlLCBsYXN0TWVzc2FnZSwgY29ubmVjdGVkIH0gPSB1c2VXZWJTb2NrZXQoKTtcclxuLy8gICBjb25zdCBbaXNDaGFyZ2luZ0luaXRpYWxpemVkLCBzZXRJc0NoYXJnaW5nSW5pdGlhbGl6ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cclxuLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4vLyAgICAgaWYgKCFsYXN0TWVzc2FnZT8uZGF0YSkgcmV0dXJuO1xyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgY29uc3QgZGF0YSA9IHR5cGVvZiBsYXN0TWVzc2FnZS5kYXRhID09PSBcInN0cmluZ1wiID8gSlNPTi5wYXJzZShsYXN0TWVzc2FnZS5kYXRhKSA6IGxhc3RNZXNzYWdlLmRhdGE7XHJcbi8vICAgICAgIGNvbnNvbGUubG9nKFwicmVjZWl2ZWQgd2Vic29ja2V0IGRhdGFcIiwgZGF0YSk7XHJcblxyXG4vLyAgICAgICBpZiAodHlwZW9mIGRhdGEuaXNDaGFyZ2luZ0luaXRpYWxpemVkID09PSBcImJvb2xlYW5cIikge1xyXG4vLyAgICAgICAgIHNldElzQ2hhcmdpbmdJbml0aWFsaXplZChkYXRhLmlzQ2hhcmdpbmdJbml0aWFsaXplZCk7XHJcbi8vICAgICAgIH1cclxuLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbi8vICAgICAgIGNvbnNvbGUuZXJyb3IoXCJlcnJvciBwYXJzaW5nIHdlYnNvY2tldCBtZXNzYWdlXCIsIGVycm9yKTtcclxuLy8gICAgIH1cclxuLy8gICB9LCBbbGFzdE1lc3NhZ2VdKTsgLy9ZRUggTUVTU0FHRSBSRUFEIEtSVEVBIEhBSVxyXG4gIFxyXG4vLyAgIGNvbnN0IHVwZGF0ZUNoYXJnaW5nU3RhdHVzID0gdXNlQ2FsbGJhY2soXHJcbi8vICAgICBhc3luYyAoaXNDaGFyZ2luZzogYm9vbGVhbik6IFByb21pc2U8Ym9vbGVhbj4gPT4ge1xyXG4vLyAgICAgICBpZiAoIWNvbm5lY3RlZCkge1xyXG4vLyAgICAgICAgIHRvYXN0LmVycm9yKFwibm90IGNvbm5lY3RlZCB0byBjaGFyZ2luZyBzeXN0ZW1cIilcclxuLy8gICAgICAgICByZXR1cm4gZmFsc2U7XHJcbi8vICAgICAgIH1cclxuXHJcbi8vICAgICAgIHRyeSB7XHJcbi8vICAgICAgICAgY29uc29sZS5sb2coXCJzZW5kaW5nIGNoYXJnaW5nIHN0YXR1cyB1cGRhdGVcIiwgeyBpc0NoYXJnaW5nIH0pO1xyXG4vLyAgICAgICAgIHNlbmRNZXNzYWdlKHtcclxuLy8gICAgICAgICAgIHR5cGU6IFwiY2hhcmdpbmdfc3RhdHVzXCIsXHJcbi8vICAgICAgICAgICBkYXRhOiB7IGlzQ2hhcmdpbmc6IGlzQ2hhcmdpbmcgfSwgLy8vWUVIIE1FU1NBR0VTIEJIRVRFVCBIQUlcclxuLy8gICAgICAgICB9KTtcclxuXHJcbi8vICAgICAgICAgc2V0SXNDaGFyZ2luZ0luaXRpYWxpemVkKGlzQ2hhcmdpbmcpO1xyXG4vLyAgICAgICAgIHJldHVybiB0cnVlO1xyXG5cclxuLy8gICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgICAgICBjb25zb2xlLmVycm9yKFwiZXJyb3IgdXBkYXRpbmcgY2hhcmdpbmcgc3RhdHVzXCIsIGVycm9yKTtcclxuLy8gICAgICAgICB0b2FzdC5lcnJvcihcImZhaWxlZCB0byB1cGRhdGUgY2hhcmdpbmcgc3RhdHVzXCIpO1xyXG4vLyAgICAgICAgIHJldHVybiBmYWxzZTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfSwgW2Nvbm5lY3RlZCwgc2VuZE1lc3NhZ2UsIHNldElzQ2hhcmdpbmdJbml0aWFsaXplZF1cclxuXHJcbi8vICAgKTtcclxuXHJcbi8vICAgcmV0dXJuIHtcclxuLy8gICAgIGlzQ2hhcmdpbmdJbml0aWFsaXplZCxcclxuLy8gICAgIHVwZGF0ZUNoYXJnaW5nU3RhdHVzLFxyXG4gICBcclxuLy8gICB9O1xyXG4vLyB9XHJcblxyXG4vL0ZBTFNFIENIQVJHSU5HXHJcblwidXNlIGNsaWVudFwiXHJcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHVzZVdlYlNvY2tldCB9IGZyb20gXCIuLi9jb250ZXh0cy9XZWJTb2NrZXRDb250ZXh0XCI7XHJcbmltcG9ydCB7IHRvYXN0IH0gZnJvbSBcInNvbm5lclwiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUNoYXJnaW5nU3RhdHVzKCkge1xyXG4gIGNvbnN0IHsgc2VuZE1lc3NhZ2UsIGxhc3RNZXNzYWdlLCBjb25uZWN0ZWQgfSA9IHVzZVdlYlNvY2tldCgpO1xyXG4gIGNvbnN0IFtpc0NoYXJnaW5nSW5pdGlhbGl6ZWQsIHNldElzQ2hhcmdpbmdJbml0aWFsaXplZF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoIWxhc3RNZXNzYWdlPy5kYXRhKSByZXR1cm47XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBkYXRhID0gdHlwZW9mIGxhc3RNZXNzYWdlLmRhdGEgPT09IFwic3RyaW5nXCIgPyBKU09OLnBhcnNlKGxhc3RNZXNzYWdlLmRhdGEpIDogbGFzdE1lc3NhZ2UuZGF0YTtcclxuICAgICAgY29uc29sZS5sb2coXCJSZWNlaXZlZCBXZWJTb2NrZXQgRGF0YTpcIiwgZGF0YSk7XHJcblxyXG4gICAgICBpZiAodHlwZW9mIGRhdGEuaXNDaGFyZ2luZyA9PT0gXCJib29sZWFuXCIpIHtcclxuICAgICAgICBzZXRJc0NoYXJnaW5nSW5pdGlhbGl6ZWQoZGF0YS5pc0NoYXJnaW5nKTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHBhcnNpbmcgV2ViU29ja2V0IG1lc3NhZ2U6XCIsIGVycm9yKTtcclxuICAgIH1cclxuICB9LCBbbGFzdE1lc3NhZ2VdKTtcclxuXHJcbiAgY29uc3QgdXBkYXRlQ2hhcmdpbmdTdGF0dXMgPSB1c2VDYWxsYmFjayhcclxuICAgIGFzeW5jIChpc0NoYXJnaW5nOiBib29sZWFuKTogUHJvbWlzZTxib29sZWFuPiA9PiB7XHJcbiAgICAgIGlmICghY29ubmVjdGVkKSB7XHJcbiAgICAgICAgdG9hc3QuZXJyb3IoXCJOb3QgY29ubmVjdGVkIHRvIGNoYXJnaW5nIHN5c3RlbVwiKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJTZW5kaW5nIGNoYXJnaW5nIHN0YXR1cyB1cGRhdGU6XCIsIHsgaXNDaGFyZ2luZyB9KTtcclxuXHJcbiAgICAgICAgLy8gVXBkYXRlIGxvY2FsIHN0YXRlXHJcbiAgICAgICAgc2V0SXNDaGFyZ2luZ0luaXRpYWxpemVkKGlzQ2hhcmdpbmcpO1xyXG5cclxuICAgICAgICAvLyBTZW5kIG1lc3NhZ2UgdG8gV2ViU29ja2V0Q29udGV4dFxyXG4gICAgICAgIHNlbmRNZXNzYWdlKHtcclxuICAgICAgICAgIHR5cGU6IFwiY2hhcmdpbmdfc3RhdHVzXCIsXHJcbiAgICAgICAgICBkYXRhOiB7IGlzQ2hhcmdpbmcgfSxcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdG9hc3Quc3VjY2Vzcyhpc0NoYXJnaW5nID8gXCJDaGFyZ2luZyBzdGFydGVkXCIgOiBcIkNoYXJnaW5nIHN0b3BwZWRcIik7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHVwZGF0aW5nIGNoYXJnaW5nIHN0YXR1czpcIiwgZXJyb3IpO1xyXG4gICAgICAgIHRvYXN0LmVycm9yKFwiRmFpbGVkIHRvIHVwZGF0ZSBjaGFyZ2luZyBzdGF0dXNcIik7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgW2Nvbm5lY3RlZCwgc2VuZE1lc3NhZ2UsIHNldElzQ2hhcmdpbmdJbml0aWFsaXplZF1cclxuICApO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgaXNDaGFyZ2luZ0luaXRpYWxpemVkLFxyXG4gICAgdXBkYXRlQ2hhcmdpbmdTdGF0dXMsXHJcbiAgfTtcclxufVxyXG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VDYWxsYmFjayIsInVzZVdlYlNvY2tldCIsInRvYXN0IiwidXNlQ2hhcmdpbmdTdGF0dXMiLCJzZW5kTWVzc2FnZSIsImxhc3RNZXNzYWdlIiwiY29ubmVjdGVkIiwiaXNDaGFyZ2luZ0luaXRpYWxpemVkIiwic2V0SXNDaGFyZ2luZ0luaXRpYWxpemVkIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsImNvbnNvbGUiLCJsb2ciLCJpc0NoYXJnaW5nIiwiZXJyb3IiLCJ1cGRhdGVDaGFyZ2luZ1N0YXR1cyIsInR5cGUiLCJzdWNjZXNzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./hooks/useChargingStatus.ts\n");

/***/ }),

/***/ "(ssr)/./hooks/useTimerStatus.ts":
/*!*********************************!*\
  !*** ./hooks/useTimerStatus.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useTimerStatus: () => (/* binding */ useTimerStatus)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var _useChargingStatus__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./useChargingStatus */ \"(ssr)/./hooks/useChargingStatus.ts\");\n/* harmony import */ var _useBMSData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./useBMSData */ \"(ssr)/./hooks/useBMSData.ts\");\n// \"use client\";\n// import { useState, useEffect } from \"react\";\n// export function useTimerStatus() {\n//   const [endTime, setEndTime] = useState<number | null>(null);\n//   // Function to set the timer\n//   const setTimer = (durationMinutes: number) => {\n//     const currentTime = Date.now();\n//     const calculatedEndTime = currentTime + durationMinutes * 60 * 1000; // Convert minutes to milliseconds\n//     setEndTime(calculatedEndTime);\n//     localStorage.setItem(\"chargingEndTime\", calculatedEndTime.toString()); // Persist data\n//   };\n//   // Retrieve stored endTime on component mount\n//   useEffect(() => {\n//     const storedEndTime = localStorage.getItem(\"chargingEndTime\");\n//     if (storedEndTime) {\n//       setEndTime(Number(storedEndTime));\n//     }\n//   }, []);\n//   return {\n//     endTime,\n//     setTimer,\n//   };\n// }\n//pushing to done page\n// \"use client\";\n// import { useState, useEffect } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { useChargingStatus } from \"./useChargingStatus\"; // ✅ Import charging status hook\n// export function useTimerStatus() {\n//   const [endTime, setEndTime] = useState<number | null>(null);\n//   const router = useRouter();\n//   const { isChargingInitialized } = useChargingStatus(); // ✅ Check if charging is active\n//   // Function to set the timer\n//   const setTimer = (durationMinutes: number) => {\n//     const currentTime = Date.now();\n//     const calculatedEndTime = currentTime + durationMinutes * 60 * 1000; // Convert minutes to milliseconds\n//     setEndTime(calculatedEndTime);\n//     localStorage.setItem(\"chargingEndTime\", calculatedEndTime.toString()); // Persist data\n//   };\n//   // Retrieve stored endTime on component mount\n//   useEffect(() => {\n//     const storedEndTime = localStorage.getItem(\"chargingEndTime\");\n//     if (storedEndTime) {\n//       setEndTime(Number(storedEndTime));\n//     }\n//   }, []);\n//   // ✅ Automatically redirect when timer reaches zero AND charging is active\n//   useEffect(() => {\n//     if (!endTime || !isChargingInitialized) return; // ✅ Prevent flicker issue\n//     const checkTime = () => {\n//       const now = Date.now();\n//       if (now >= endTime && isChargingInitialized) {\n//         console.log(\"⏰ Timer expired! Redirecting to /done...\");\n//         router.replace(\"/done\"); // ✅ Redirect only when charging is active\n//       }\n//     };\n//     const interval = setInterval(checkTime, 1000);\n//     checkTime(); // Run immediately\n//     return () => clearInterval(interval);\n//   }, [endTime, isChargingInitialized, router]);\n//   return {\n//     endTime,\n//     setTimer,\n//   };\n// }\n//pause and resumne\n// \"use client\";\n// import { useState, useEffect } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { useChargingStatus } from \"./useChargingStatus\";\n// import { useBMSData } from \"./useBMSData\"; // ✅ Import BMS data hook\n// export function useTimerStatus() {\n//   const [endTime, setEndTime] = useState<number | null>(null);\n//   const [remainingTime, setRemainingTime] = useState<number | null>(null);\n//   const [isPaused, setIsPaused] = useState(false); // ✅ Track pause state\n//   const router = useRouter();\n//   const { isChargingInitialized } = useChargingStatus();\n//   const { bmsData } = useBMSData(); // ✅ Get FOD & misalignment status\n//   // Function to set the timer\n//   const setTimer = (durationMinutes: number) => {\n//     const currentTime = Date.now();\n//     const calculatedEndTime = currentTime + durationMinutes * 60 * 1000;\n//     setEndTime(calculatedEndTime);\n//     setRemainingTime(durationMinutes * 60 * 1000);\n//     localStorage.setItem(\"chargingEndTime\", calculatedEndTime.toString());\n//   };\n//   // Retrieve stored endTime on component mount\n//   useEffect(() => {\n//     const storedEndTime = localStorage.getItem(\"chargingEndTime\");\n//     if (storedEndTime) {\n//       setEndTime(Number(storedEndTime));\n//     }\n//   }, []);\n//   // ✅ Handle pause and resume logic\n//   useEffect(() => {\n//     if (bmsData?.isFOD || bmsData?.isMiss ) {\n//       if (!isPaused) {\n//         setIsPaused(true);\n//         setRemainingTime((prev) => (endTime ? endTime - Date.now() : prev)); // Store remaining time\n//         setEndTime(null); // Pause the countdown\n//       }\n//     } else {\n//       if (isPaused) {\n//         setIsPaused(false);\n//         if (remainingTime !== null) {\n//           const newEndTime = Date.now() + remainingTime;\n//           setEndTime(newEndTime);\n//           localStorage.setItem(\"chargingEndTime\", newEndTime.toString());\n//         }\n//       }\n//     }\n//   }, [bmsData?.isFOD, bmsData?.isMiss]);\n//   // ✅ Timer countdown logic\n//   useEffect(() => {\n//     if (!endTime || !isChargingInitialized || isPaused) return;\n//     const checkTime = () => {\n//       const now = Date.now();\n//       if (now >= endTime && isChargingInitialized) {\n//         console.log(\"⏰ Timer expired! Redirecting to /done...\");\n//         router.replace(\"/done\");\n//       }\n//     };\n//     const interval = setInterval(checkTime, 1000);\n//     checkTime();\n//     return () => clearInterval(interval);\n//   }, [endTime, isChargingInitialized, isPaused, router]);\n//   return {\n//     endTime,\n//     setTimer,\n//     isPaused,\n//   };\n// }\n//counter\n// \"use client\";\n// import { useState, useEffect } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { useChargingStatus } from \"./useChargingStatus\";\n// import { useBMSData } from \"./useBMSData\"; // ✅ Import BMS data hook\n// export function useTimerStatus() {\n//   const [endTime, setEndTime] = useState<number | null>(null);\n//   const [remainingTime, setRemainingTime] = useState<number | null>(null);\n//   const [isPaused, setIsPaused] = useState(true);\n//   const router = useRouter();\n//   const { updateChargingStatus, isChargingInitialized } = useChargingStatus(); // ✅ Update charging state\n//   const { bmsData } = useBMSData(); // ✅ Get FOD & misalignment status\n//   // Function to set the timer\n//   const setTimer = (durationMinutes: number) => {\n//     const currentTime = Date.now();\n//     const calculatedEndTime = currentTime + durationMinutes * 60 * 1000;\n//     setEndTime(calculatedEndTime);\n//     setRemainingTime(durationMinutes * 60 * 1000);\n//     localStorage.setItem(\"chargingEndTime\", calculatedEndTime.toString());\n//     updateChargingStatus(true); // ✅ Start charging when timer starts\n//   };\n//   // Retrieve stored endTime on component mount\n//   useEffect(() => {\n//     const storedEndTime = localStorage.getItem(\"chargingEndTime\");\n//     if (storedEndTime) {\n//       setEndTime(Number(storedEndTime));\n//     }\n//   }, []);\n//   // ✅ Handle pause and resume logic\n//   useEffect(() => {\n//     const shouldPause = bmsData?.isFOD || bmsData?.isMiss || !bmsData?.isReceiverCoilDetected;\n//     if (shouldPause && !isPaused) {\n//       // Pause the timer\n//       setIsPaused(true);\n//       setRemainingTime(endTime ? Math.max(endTime - Date.now(), 0) : remainingTime);\n//       setEndTime(null); // Stop the countdown\n//       updateChargingStatus(false); // ✅ Stop charging when paused\n//     } else if (!shouldPause && isPaused && remainingTime !== null) {\n//       // Resume the timer\n//       setIsPaused(false);\n//       const newEndTime = Date.now() + remainingTime;\n//       setEndTime(newEndTime);\n//       localStorage.setItem(\"chargingEndTime\", newEndTime.toString());\n//       updateChargingStatus(true); // ✅ Resume charging\n//     }\n//   }, [bmsData?.isFOD, bmsData?.isMiss, bmsData?.isReceiverCoilDetected]);\n//   // ✅ Timer countdown logic\n//   useEffect(() => {\n//     if (!endTime || !isChargingInitialized || isPaused) return;\n//     const checkTime = () => {\n//       const now = Date.now();\n//       if (now >= endTime && isChargingInitialized) {\n//         console.log(\"⏰ Timer expired! Redirecting to /done...\");\n//         router.replace(\"/done\");\n//       }\n//     };\n//     const interval = setInterval(checkTime, 1000);\n//     checkTime();\n//     return () => clearInterval(interval);\n//   }, [endTime, isChargingInitialized, isPaused, router]);\n//   return {\n//     endTime,\n//     setTimer,\n//     isPaused,\n//   };\n// }\n//after app building\n// \"use client\";\n// import { useState, useEffect } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { useChargingStatus } from \"./useChargingStatus\";\n// import { useBMSData } from \"./useBMSData\";\n// export function useTimerStatus() {\n//   const [endTime, setEndTime] = useState<number | null>(null);\n//   const [remainingTime, setRemainingTime] = useState<number | null>(null);\n//   const [isPaused, setIsPaused] = useState(true);\n//   const router = useRouter();\n//   const { updateChargingStatus, isChargingInitialized } = useChargingStatus();\n//   const { bmsData } = useBMSData();\n//   // Set a timer with duration in minutes\n//   const setTimer = (durationMinutes: number) => {\n//     const currentTime = Date.now();\n//     const calculatedEndTime = currentTime + durationMinutes * 60 * 1000;\n//     setEndTime(calculatedEndTime);\n//     setRemainingTime(durationMinutes * 60 * 1000);\n//     localStorage.setItem(\"chargingEndTime\", calculatedEndTime.toString());\n//     updateChargingStatus(true); // Start charging\n//     setIsPaused(false);\n//   };\n//   // Load endTime from localStorage when hook mounts\n//   useEffect(() => {\n//     const storedEndTime = localStorage.getItem(\"chargingEndTime\");\n//     if (storedEndTime) {\n//       const parsedEndTime = Number(storedEndTime);\n//       const currentTime = Date.now();\n//       const timeLeft = parsedEndTime - currentTime;\n//       if (timeLeft > 0) {\n//         setEndTime(parsedEndTime);\n//         setRemainingTime(timeLeft);\n//         setIsPaused(false);\n//       } else {\n//         localStorage.removeItem(\"chargingEndTime\");\n//         router.replace(\"/done\");\n//       }\n//     }\n//   }, [router]);\n//   // Pause/resume based on FOD, misalignment, or receiver coil detection\n//   // useEffect(() => {\n//   //   const shouldPause =\n//   //     bmsData?.isFOD || bmsData?.isMiss || !bmsData?.isReceiverCoilDetected;\n//   //   if (shouldPause && !isPaused) {\n//   //     // Pause\n//   //     const now = Date.now();\n//   //     setIsPaused(true);\n//   //     if (endTime) {\n//   //       const timeLeft = Math.max(endTime - now, 0);\n//   //       setRemainingTime(timeLeft);\n//   //       setEndTime(null);\n//   //     }\n//   //     updateChargingStatus(false);\n//   //   } else if (!shouldPause && isPaused && remainingTime !== null) {\n//   //     // Resume\n//   //     if (remainingTime <= 0) {\n//   //       localStorage.removeItem(\"chargingEndTime\");\n//   //       router.replace(\"/done\");\n//   //       return;\n//   //     }\n//   //     const newEndTime = Date.now() + remainingTime;\n//   //     setEndTime(newEndTime);\n//   //     localStorage.setItem(\"chargingEndTime\", newEndTime.toString());\n//   //     setIsPaused(false);\n//   //     updateChargingStatus(true);\n//   //   }\n//   // }, [\n//   //   bmsData?.isFOD,\n//   //   bmsData?.isMiss,\n//   //   bmsData?.isReceiverCoilDetected,\n//   //   isPaused,\n//   //   endTime,\n//   //   remainingTime,\n//   //   router,\n//   //   updateChargingStatus,\n//   // ]);\n// useEffect(() => {\n//   const shouldPause =\n//     bmsData?.isFOD || bmsData?.isMiss || !bmsData?.isReceiverCoilDetected;\n//   const now = Date.now();\n//   if (shouldPause && !isPaused) {\n//     // 🔴 Pause logic\n//     setIsPaused(true);\n//     if (endTime) {\n//       const timeLeft = Math.max(endTime - now, 0);\n//       setRemainingTime(timeLeft);\n//       setEndTime(null);\n//     }\n//     updateChargingStatus(false); // Optional: await if you want to guarantee state sync\n//   }\n//   else if (!shouldPause && isPaused) {\n//     // 🟢 Resume logic\n//     const safeRemaining = remainingTime ?? (endTime ? Math.max(endTime - now, 0) : 0);\n//     if (safeRemaining <= 0) {\n//       localStorage.removeItem(\"chargingEndTime\");\n//       updateChargingStatus(false).then(() => {\n//         // router.replace(\"/done\");\n//       });\n//       return;\n//     }\n//     const newEndTime = now + safeRemaining;\n//     setEndTime(newEndTime);\n//     localStorage.setItem(\"chargingEndTime\", newEndTime.toString());\n//     setRemainingTime(null); // Clear after using\n//     setIsPaused(false);\n//     updateChargingStatus(true);\n//   }\n// }, [\n//   bmsData?.isFOD,\n//   bmsData?.isMiss,\n//   bmsData?.isReceiverCoilDetected,\n//   isPaused,\n//   endTime,\n//   remainingTime,\n//   router,\n//   updateChargingStatus,\n// ]);\n//   // Countdown timer - redirect when complete\n//   useEffect(() => {\n//     if (!endTime || !isChargingInitialized || isPaused) return;\n//     const interval = setInterval(() => {\n//       const now = Date.now();\n//       if (now >= endTime) {\n//         localStorage.removeItem(\"chargingEndTime\");\n//         // router.replace(\"/done\");\n//       }\n//     }, 1000);\n//     return () => clearInterval(interval);\n//   }, [endTime, isChargingInitialized, isPaused, router]);\n//   return {\n//     endTime,\n//     setTimer,\n//     isPaused,\n//   };\n// }\n///inal fix\n/* __next_internal_client_entry_do_not_use__ useTimerStatus auto */ \n\n\n\nfunction useTimerStatus() {\n    const [endTime, setEndTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [remainingTime, setRemainingTime] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isPaused, setIsPaused] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const timerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const { updateChargingStatus, isChargingInitialized } = (0,_useChargingStatus__WEBPACK_IMPORTED_MODULE_2__.useChargingStatus)();\n    const { bmsData } = (0,_useBMSData__WEBPACK_IMPORTED_MODULE_3__.useBMSData)();\n    const setTimer = (durationMinutes)=>{\n        const currentTime = Date.now();\n        const calculatedEndTime = currentTime + durationMinutes * 60 * 1000;\n        setEndTime(calculatedEndTime);\n        setRemainingTime(null);\n        setIsPaused(false);\n        localStorage.setItem(\"chargingEndTime\", calculatedEndTime.toString());\n        updateChargingStatus(true);\n    };\n    // Load from localStorage on mount\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useTimerStatus.useEffect\": ()=>{\n            const storedEndTime = localStorage.getItem(\"chargingEndTime\");\n            if (storedEndTime) {\n                const parsed = Number(storedEndTime);\n                if (!isNaN(parsed)) {\n                    setEndTime(parsed);\n                    setIsPaused(false);\n                }\n            }\n        }\n    }[\"useTimerStatus.useEffect\"], []);\n    // Pause/Resume logic\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useTimerStatus.useEffect\": ()=>{\n            const isFOD = bmsData?.isFOD;\n            const isMiss = bmsData?.isMiss;\n            const isReceiverDetected = bmsData?.isReceiverCoilDetected;\n            const shouldPause = isFOD || isMiss || !isReceiverDetected;\n            const now = Date.now();\n            if (shouldPause && !isPaused) {\n                console.log(\"⏸ Pausing charging due to issue.\");\n                setIsPaused(true);\n                if (endTime) {\n                    const timeLeft = Math.max(endTime - now, 0);\n                    setRemainingTime(timeLeft);\n                    setEndTime(null);\n                }\n                updateChargingStatus(false);\n            } else if (!shouldPause && isPaused && remainingTime) {\n                console.log(\"▶️ Resuming charging.\");\n                const newEndTime = now + remainingTime;\n                setEndTime(newEndTime);\n                localStorage.setItem(\"chargingEndTime\", newEndTime.toString());\n                setRemainingTime(null);\n                setIsPaused(false);\n                updateChargingStatus(true);\n            }\n        }\n    }[\"useTimerStatus.useEffect\"], [\n        bmsData?.isFOD,\n        bmsData?.isMiss,\n        bmsData?.isReceiverCoilDetected,\n        isPaused,\n        endTime,\n        remainingTime,\n        updateChargingStatus\n    ]);\n    // Timer effect\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useTimerStatus.useEffect\": ()=>{\n            if (!endTime || isPaused || !isChargingInitialized) {\n                if (timerRef.current) {\n                    clearInterval(timerRef.current);\n                    timerRef.current = null;\n                    console.log(\"🧹 Cleared timer interval.\");\n                }\n                return;\n            }\n            console.log(\"⏱ Timer started until\", new Date(endTime).toLocaleTimeString());\n            const tick = {\n                \"useTimerStatus.useEffect.tick\": ()=>{\n                    const now = Date.now();\n                    if (now >= endTime) {\n                        clearInterval(timerRef.current);\n                        timerRef.current = null;\n                        console.log(\"✅ Timer done. Redirecting to /done\");\n                        localStorage.removeItem(\"chargingEndTime\");\n                        updateChargingStatus(false).finally({\n                            \"useTimerStatus.useEffect.tick\": ()=>{\n                                router.replace(\"/done\");\n                            }\n                        }[\"useTimerStatus.useEffect.tick\"]);\n                    }\n                }\n            }[\"useTimerStatus.useEffect.tick\"];\n            timerRef.current = setInterval(tick, 1000);\n            tick(); // Immediate check\n            return ({\n                \"useTimerStatus.useEffect\": ()=>{\n                    if (timerRef.current) {\n                        clearInterval(timerRef.current);\n                        timerRef.current = null;\n                        console.log(\"🧹 Cleanup on unmount or deps change\");\n                    }\n                }\n            })[\"useTimerStatus.useEffect\"];\n        }\n    }[\"useTimerStatus.useEffect\"], [\n        endTime,\n        isPaused,\n        isChargingInitialized,\n        router,\n        updateChargingStatus\n    ]);\n    return {\n        setTimer,\n        endTime,\n        isPaused\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./hooks/useTimerStatus.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/set-time/page.tsx":
/*!***********************************!*\
  !*** ./src/app/set-time/page.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SetTimePage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! sonner */ \"(ssr)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var _barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=ChevronLeft,ChevronRight,Home,Timer,Zap!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/house.js\");\n/* harmony import */ var _barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! __barrel_optimize__?names=ChevronLeft,ChevronRight,Home,Timer,Zap!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/timer.js\");\n/* harmony import */ var _barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! __barrel_optimize__?names=ChevronLeft,ChevronRight,Home,Timer,Zap!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/chevron-left.js\");\n/* harmony import */ var _barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! __barrel_optimize__?names=ChevronLeft,ChevronRight,Home,Timer,Zap!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/chevron-right.js\");\n/* harmony import */ var _barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! __barrel_optimize__?names=ChevronLeft,ChevronRight,Home,Timer,Zap!=!lucide-react */ \"(ssr)/./node_modules/lucide-react/dist/esm/icons/zap.js\");\n/* harmony import */ var _components_ui_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../components/ui/button */ \"(ssr)/./components/ui/button.tsx\");\n/* harmony import */ var _components_ui_card__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../components/ui/card */ \"(ssr)/./components/ui/card.tsx\");\n/* harmony import */ var _hooks_useChargingStatus__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../hooks/useChargingStatus */ \"(ssr)/./hooks/useChargingStatus.ts\");\n/* harmony import */ var _hooks_useTimerStatus__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../hooks/useTimerStatus */ \"(ssr)/./hooks/useTimerStatus.ts\");\n// app/page.tsx\n// \"use client\";\n// import {  useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { toast } from \"sonner\";\n// import {\n//   ChevronLeft,\n//   ChevronRight,\n//   Timer,\n//   Zap,\n//   Info,\n//   Home,\n// } from \"lucide-react\";\n// import { Button } from \"../../components/ui/button\";\n// import { Card, CardContent } from \"../../components/ui/card\";\n// import { useChargingStatus } from \"../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../hooks/useBMSData\";\n// import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from \"../../components/ui/tooltip\"; // Fix path\n// import { useWebSocket } from \"../../contexts/WebSocketContext\";\n// export default function HomePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus } = useChargingStatus();\n//   const [step, setStep] = useState<\"hours\" | \"minutes\">(\"hours\");\n//   const [hours, setHours] = useState(0);\n//   const [minutes, setMinutes] = useState(0);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const { sendMessage } = useWebSocket();\n//   const formatNumber = (num: number) => num.toString().padStart(2, \"0\");\n//   const incrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev < 23 ? prev + 1 : 0));\n//     } else {\n//       setMinutes((prev) => (prev < 59 ? prev + 1 : 0));\n//     }\n//   };\n//   const decrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev > 0 ? prev - 1 : 23));\n//     } else {\n//       setMinutes((prev) => (prev > 0 ? prev - 1 : 59));\n//     }\n//   };\n//   const handleSelect = async () => {\n//     if (hours === 0 && minutes === 0) {\n//       toast.error(\"Please select a valid charging duration\");\n//       return;\n//     }\n//     setIsLoading(true);\n//     try {\n//       const success = await updateChargingStatus(true);\n//       // if (success) {\n//       //   sendMessage({ type: \"SET_TIMER\", data: { hours, minutes } });\n//       //   sendMessage({ type: \"request_charging_status\" });\n// // Correct way to send WebSocket message\n//         toast.success(`Charging scheduled for ${hours}h ${minutes}m`);\n//         router.push(\"/charge\");\n//       // } else {\n//       //   toast.error(\"Failed to initialize charging\");\n//     } catch (error) {\n//       console.error(\"Error initializing charging:\", error);\n//       toast.error(\"Failed to initialize charging\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   const handleQuickSelect = (mins: number) => {\n//     setHours(Math.floor(mins / 60));\n//     setMinutes(mins % 60);\n//   };\n//   const getTotalMinutes = () => hours * 60 + minutes;\n//   return (\n//     <div\n//   className=\"w-full min-h-screen bg-transparent font-sans pt-7 px-4 sm:px-6 md:px-8 flex flex-col items-center justify-center\"\n//   style={{\n//     backgroundImage: \"url('/lib/main-bg.png')\",\n//     backgroundSize: \"cover\",\n//     backgroundPosition: \"center\",\n//   }}\n// >\n//       {/* Home Button */}\n//       <Button className=\"mb-6 text-lg sm:text-xl bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded-full shadow-lg transition-all duration-200 flex items-center\">\n//         <Home className=\"w-5 h-5 mr-2\" />\n//         Home\n//       </Button>\n//       {/* Main Card */}\n//       <div className=\"flex justify-center items-center w-full max-w-3xl px-4 sm:px-8 md:px-12\">\n//         <Card className=\"w-full bg-transparent border-none\">\n//           <CardContent className=\"border-none p-6 sm:p-8\">\n//             <div className=\"flex flex-col items-center space-y-6 sm:space-y-8\">\n//               {/* Header */}\n//               <div className=\"flex items-center space-x-3\">\n//                 <Timer className=\"w-6 h-6 sm:w-8 sm:h-8 text-red-500\" />\n//                 <span className=\"text-lg sm:text-xl font-semibold text-white\">\n//                   Set Charging Duration\n//                 </span>\n//                 <TooltipProvider>\n//                   <Tooltip>\n//                     <TooltipTrigger>\n//                       <Info className=\"w-5 h-5 text-neutral-400\" />\n//                     </TooltipTrigger>\n//                     <TooltipContent>\n//                       <p>Select how long you want to charge your vehicle</p>\n//                     </TooltipContent>\n//                   </Tooltip>\n//                 </TooltipProvider>\n//               </div>\n//               {/* Quick Select Buttons */}\n//               <div className=\"flex gap-2 w-full justify-center flex-wrap\">\n//                 {[1, 5, 20, 60].map((mins) => (\n//                   <Button\n//                     key={mins}\n//                     variant=\"outline\"\n//                     size=\"sm\"\n//                     onClick={() => handleQuickSelect(mins)}\n//                     className={`px-3 py-1 text-sm sm:text-base ${\n//                       getTotalMinutes() === mins\n//                         ? \"bg-red-500 text-white border-red-500\"\n//                         : \"text-neutral-400 hover:text-white\"\n//                     }`}\n//                   >\n//                     {mins >= 60 ? `${Math.floor(mins / 60)}h` : `${mins}m`}\n//                   </Button>\n//                 ))}\n//               </div>\n//               {/* Time Selection */}\n//               <div className=\"flex items-center justify-center w-full space-x-6 sm:space-x-8\">\n//                 <Button\n//                   variant=\"outline\"\n//                   className=\"text-black hover:text-white hover:bg-neutral-950 transition-all duration-200 transform hover:scale-110 p-2 sm:p-4\"\n//                   onClick={() => decrementValue(step)}\n//                 >\n//                   <ChevronLeft className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//                 <div className=\"flex items-baseline space-x-3\">\n//                   <div\n//                     className={`text-5xl sm:text-7xl font-bold transition-all duration-300 cursor-pointer ${\n//                       step === \"hours\"\n//                         ? \"text-red-500 scale-110\"\n//                         : \"text-white scale-100 hover:text-red-400\"\n//                     }`}\n//                     onClick={() => setStep(\"hours\")}\n//                   >\n//                     {formatNumber(hours)}\n//                   </div>\n//                   <div className=\"text-5xl sm:text-7xl font-bold text-white\">:</div>\n//                   <div\n//                     className={`text-5xl sm:text-7xl font-bold transition-all duration-300 cursor-pointer ${\n//                       step === \"minutes\"\n//                         ? \"text-red-500 scale-110\"\n//                         : \"text-white scale-100 hover:text-red-400\"\n//                     }`}\n//                     onClick={() => setStep(\"minutes\")}\n//                   >\n//                     {formatNumber(minutes)}\n//                   </div>\n//                 </div>\n//                 <Button\n//                   variant=\"outline\"\n//                   className=\"text-black hover:text-white hover:bg-neutral-950 transition-all duration-200 transform hover:scale-110 p-2 sm:p-4\"\n//                   onClick={() => incrementValue(step)}\n//                 >\n//                   <ChevronRight className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//               </div>\n//               {/* Initialize Button */}\n//               <Button\n//                 className=\"w-36 sm:w-40 h-10 sm:h-12 text-lg bg-red-500 hover:bg-red-600 text-white font-semibold transition-all duration-200 hover:scale-105 disabled:opacity-50\"\n//                 onClick={handleSelect}\n//                 disabled={isLoading || (hours === 0 && minutes === 0)}\n//               >\n//                 {isLoading ? \"Loading...\" : <><Zap className=\"w-5 h-5 mr-2\" /> Initialize</>}\n//               </Button>\n//             </div>\n//           </CardContent>\n//         </Card>\n//       </div>\n//     </div>\n//   );\n// };\n// \"use client\";\n// import { useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { toast } from \"sonner\";\n// import {\n//   ChevronLeft,\n//   ChevronRight,\n//   Timer,\n//   Zap,\n//   Info,\n//   Home,\n// } from \"lucide-react\";\n// import { Button } from \"../../components/ui/button\";\n// import { Card, CardContent } from \"../../components/ui/card\";\n// import { useChargingStatus } from \"../../hooks/useChargingStatus\";\n// import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from \"../../components/ui/tooltip\";\n// export default function HomePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus } = useChargingStatus();\n//   const [step, setStep] = useState<\"hours\" | \"minutes\">(\"hours\");\n//   const [hours, setHours] = useState(0);\n//   const [minutes, setMinutes] = useState(0);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const formatNumber = (num: number) => num.toString().padStart(2, \"0\");\n//   const incrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev < 23 ? prev + 1 : 0));\n//     } else {\n//       setMinutes((prev) => (prev < 59 ? prev + 1 : 0));\n//     }\n//   };\n//   const decrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev > 0 ? prev - 1 : 23));\n//     } else {\n//       setMinutes((prev) => (prev > 0 ? prev - 1 : 59));\n//     }\n//   };\n//   const handleSelect = async () => {\n//     if (hours === 0 && minutes === 0) {\n//       toast.error(\"Please select a valid charging duration\");\n//       return;\n//     }\n//     setIsLoading(true);\n//     try {\n//       const success = await updateChargingStatus(true);\n//       if (success) {\n//         toast.success(`Charging scheduled for ${hours}h ${minutes}m`);\n//         router.push(\"/charge\");\n//       } else {\n//         toast.error(\"Failed to initialize charging\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error initializing charging:\", error);\n//       toast.error(\"Failed to initialize charging\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   const handleQuickSelect = (mins: number) => {\n//     setHours(Math.floor(mins / 60));\n//     setMinutes(mins % 60);\n//   };\n//   const getTotalMinutes = () => hours * 60 + minutes;\n//   return (\n//     <div className=\"w-full min-h-screen bg-transparent font-sans pt-7 px-4 sm:px-6 md:px-8 flex flex-col items-center justify-center\"\n//       style={{ backgroundImage: \"url('/lib/main-bg.png')\", backgroundSize: \"cover\", backgroundPosition: \"center\" }}>\n//       <Button className=\"mb-6 text-lg sm:text-xl bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded-full shadow-lg transition-all duration-200 flex items-center\">\n//         <Home className=\"w-5 h-5 mr-2\" />\n//         Home\n//       </Button>\n//       <div className=\"flex justify-center items-center w-full max-w-3xl px-4 sm:px-8 md:px-12\">\n//         <Card className=\"w-full bg-transparent border-none\">\n//           <CardContent className=\"border-none p-6 sm:p-8\">\n//             <div className=\"flex flex-col items-center space-y-6 sm:space-y-8\">\n//               <div className=\"flex items-center space-x-3\">\n//                 <Timer className=\"w-6 h-6 sm:w-8 sm:h-8 text-red-500\" />\n//                 <span className=\"text-lg sm:text-xl font-semibold text-white\">Set Charging Duration</span>\n//                 <TooltipProvider>\n//                   <Tooltip>\n//                     <TooltipTrigger>\n//                       <Info className=\"w-5 h-5 text-neutral-400\" />\n//                     </TooltipTrigger>\n//                     <TooltipContent>\n//                       <p>Select how long you want to charge your vehicle</p>\n//                     </TooltipContent>\n//                   </Tooltip>\n//                 </TooltipProvider>\n//               </div>\n//               <div className=\"flex gap-2 w-full justify-center flex-wrap\">\n//                 {[1, 5, 20, 60].map((mins) => (\n//                   <Button key={mins} variant=\"outline\" size=\"sm\" onClick={() => handleQuickSelect(mins)}\n//                     className={`px-3 py-1 text-sm sm:text-base ${getTotalMinutes() === mins ? \"bg-red-500 text-white border-red-500\" : \"text-neutral-400 hover:text-white\"}`}>\n//                     {mins >= 60 ? `${Math.floor(mins / 60)}h` : `${mins}m`}\n//                   </Button>\n//                 ))}\n//               </div>\n//               <div className=\"flex items-center justify-center w-full space-x-6 sm:space-x-8\">\n//                 <Button variant=\"outline\" onClick={() => decrementValue(step)}>\n//                   <ChevronLeft className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//                 <div className=\"flex items-baseline space-x-3\">\n//                   <div onClick={() => setStep(\"hours\")} className={`text-5xl sm:text-7xl font-bold ${step === \"hours\" ? \"text-red-500 scale-110\" : \"text-white hover:text-red-400\"}`}>{formatNumber(hours)}</div>\n//                   <div className=\"text-5xl sm:text-7xl font-bold text-white\">:</div>\n//                   <div onClick={() => setStep(\"minutes\")} className={`text-5xl sm:text-7xl font-bold ${step === \"minutes\" ? \"text-red-500 scale-110\" : \"text-white hover:text-red-400\"}`}>{formatNumber(minutes)}</div>\n//                 </div>\n//                 <Button variant=\"outline\" onClick={() => incrementValue(step)}>\n//                   <ChevronRight className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//               </div>\n//               <Button onClick={handleSelect} disabled={isLoading || (hours === 0 && minutes === 0)} className=\"w-36 sm:w-40 h-10 sm:h-12 text-lg bg-red-500 hover:bg-red-600 text-white font-semibold transition-all duration-200 hover:scale-105 disabled:opacity-50\">\n//                 {isLoading ? \"Loading...\" : <><Zap className=\"w-5 h-5 mr-2\" /> Initialize</>}\n//               </Button>\n//             </div>\n//           </CardContent>\n//         </Card>\n//       </div>\n//     </div>\n//   );\n// }\n// \"use client\";\n// import { useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { toast } from \"sonner\";\n// import {\n//   ChevronLeft,\n//   ChevronRight,\n//   Timer,\n//   Zap,\n//   Home,\n// } from \"lucide-react\";\n// import { Button } from \"../../../components/ui/button\";\n// import { Card, CardContent } from \"../../../components/ui/card\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// import { useTimerStatus } from \"../../../hooks/useTimerStatus\";  // Import timer hook\n// // import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from \"../../components/ui/tooltip\";\n// export default function HomePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus } = useChargingStatus();\n//   const { setTimer } = useTimerStatus();  // Use the timer hook\n//   const [step, setStep] = useState<\"hours\" | \"minutes\">(\"hours\");\n//   const [hours, setHours] = useState(0);\n//   const [minutes, setMinutes] = useState(0);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const formatNumber = (num: number) => num.toString().padStart(2, \"0\");\n//   const incrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev < 23 ? prev + 1 : 0));\n//     } else {\n//       setMinutes((prev) => (prev < 59 ? prev + 1 : 0));\n//     }\n//   };\n//   const decrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev > 0 ? prev - 1 : 23));\n//     } else {\n//       setMinutes((prev) => (prev > 0 ? prev - 1 : 59));\n//     }\n//   };\n//   const handleSelect = async () => {\n//     if (hours === 0 && minutes === 0) {\n//       toast.error(\"Please select a valid charging duration\");\n//       return;\n//     }\n//     setIsLoading(true);\n//     try {\n//       const totalMinutes = hours * 60 + minutes;\n//       // Set the timer (this will store endTime)\n//       setTimer(totalMinutes);\n//       const success = await updateChargingStatus(true);\n//       if (success) {\n//         toast.success(`Charging scheduled for ${hours}h ${minutes}m`);\n//         router.push(\"/charge\");\n//       } else {\n//         toast.error(\"Failed to initialize charging\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error initializing charging:\", error);\n//       toast.error(\"Failed to initialize charging\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   const handleQuickSelect = (mins: number) => {\n//     setHours(Math.floor(mins / 60));\n//     setMinutes(mins % 60);\n//   };\n//   return (\n//     <div className=\"w-full min-h-screen bg-transparent font-sans pt-7 px-4 sm:px-6 md:px-8 flex flex-col items-center justify-center\"\n//       style={{ backgroundImage: \"url('/lib/main-bg.png')\", backgroundSize: \"cover\", backgroundPosition: \"center\" }}>\n//       {/* <Button className=\"mb-6 text-lg sm:text-xl bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded-full shadow-lg transition-all duration-200 flex items-center\">\n//         <Home className=\"w-5 h-5 mr-2\" />\n//         Home\n//       </Button> */}\n//     <Button\n//       onClick={() => router.push(\"/\")} // Navigate to homepage\n//       className=\"mb-6 text-lg sm:text-xl bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded-full shadow-lg transition-all duration-200 flex items-center\"\n//     >\n//       <Home className=\"w-5 h-5 mr-2\" />\n//       Home\n//     </Button>\n//       <div className=\"flex justify-center items-center w-full max-w-3xl px-4 sm:px-8 md:px-12\">\n//         <Card className=\"w-full bg-transparent border-none\">\n//           <CardContent className=\"border-none p-6 sm:p-8\">\n//             <div className=\"flex flex-col items-center space-y-6 sm:space-y-8\">\n//               <div className=\"flex items-center space-x-3\">\n//                 <Timer className=\"w-6 h-6 sm:w-8 sm:h-8 text-red-500\" />\n//                 <span className=\"text-lg sm:text-xl font-semibold text-white\">Set Charging Duration</span>\n//               </div>\n//               <div className=\"flex gap-2 w-full justify-center flex-wrap\">\n//                 {[1, 5, 20, 60].map((mins) => (\n//                   <Button key={mins} variant=\"outline\" size=\"sm\" onClick={() => handleQuickSelect(mins)}\n//                     className={`px-3 py-1 text-sm sm:text-base`}>\n//                     {mins >= 60 ? `${Math.floor(mins / 60)}h` : `${mins}m`}\n//                   </Button>\n//                 ))}\n//               </div>\n//               <div className=\"flex items-center justify-center w-full space-x-6 sm:space-x-8\">\n//                 <Button variant=\"outline\" onClick={() => decrementValue(step)}>\n//                   <ChevronLeft className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//                 <div className=\"flex items-baseline space-x-3\">\n//                   <div onClick={() => setStep(\"hours\")} className=\"text-5xl sm:text-7xl font-bold text-white\">\n//                     {formatNumber(hours)}\n//                   </div>\n//                   <div className=\"text-5xl sm:text-7xl font-bold text-white\">:</div>\n//                   <div onClick={() => setStep(\"minutes\")} className=\"text-5xl sm:text-7xl font-bold text-white\">\n//                     {formatNumber(minutes)}\n//                   </div>\n//                 </div>\n//                 <Button variant=\"outline\" onClick={() => incrementValue(step)}>\n//                   <ChevronRight className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//               </div>\n//               <Button onClick={handleSelect} disabled={isLoading || (hours === 0 && minutes === 0)}\n//                 className=\"w-36 sm:w-40 h-10 sm:h-12 text-lg bg-red-500 hover:bg-red-600 text-white font-semibold transition-all duration-200 hover:scale-105 disabled:opacity-50\">\n//                 {isLoading ? \"Loading...\" : <><Zap className=\"w-5 h-5 mr-2\" /> Initialize</>}\n//               </Button>\n//             </div>\n//           </CardContent>\n//         </Card>\n//       </div>\n//     </div>\n//   );\n// }\n//ui\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\n\n\n\nfunction SetTimePage() {\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const { updateChargingStatus } = (0,_hooks_useChargingStatus__WEBPACK_IMPORTED_MODULE_6__.useChargingStatus)();\n    const { setTimer } = (0,_hooks_useTimerStatus__WEBPACK_IMPORTED_MODULE_7__.useTimerStatus)();\n    const [step, setStep] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"hours\");\n    const [hours, setHours] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [minutes, setMinutes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const formatNumber = (num)=>num.toString().padStart(2, \"0\");\n    const incrementValue = (type)=>{\n        if (type === \"hours\") {\n            setHours((prev)=>prev < 23 ? prev + 1 : 0);\n        } else {\n            setMinutes((prev)=>prev < 59 ? prev + 1 : 0);\n        }\n    };\n    const decrementValue = (type)=>{\n        if (type === \"hours\") {\n            setHours((prev)=>prev > 0 ? prev - 1 : 23);\n        } else {\n            setMinutes((prev)=>prev > 0 ? prev - 1 : 59);\n        }\n    };\n    const handleSelect = async ()=>{\n        if (hours === 0 && minutes === 0) {\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(\"⚠️ Please select a valid charging duration\", {\n                style: {\n                    color: \"white\"\n                }\n            });\n            return;\n        }\n        setIsLoading(true);\n        try {\n            const totalMinutes = hours * 60 + minutes;\n            setTimer(totalMinutes);\n            const success = await updateChargingStatus(true);\n            if (success) {\n                sonner__WEBPACK_IMPORTED_MODULE_3__.toast.success(`✅ Charging scheduled for ${hours}h ${minutes}m`, {\n                    style: {\n                        color: \"white\"\n                    }\n                });\n                router.push(\"/charge\");\n            } else {\n                sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(\"⚠️ Failed to initialize charging\", {\n                    style: {\n                        color: \"white\"\n                    }\n                });\n            }\n        } catch (error) {\n            console.error(\"Error initializing charging:\", error);\n            sonner__WEBPACK_IMPORTED_MODULE_3__.toast.error(\"⚠️ Failed to initialize charging\", {\n                style: {\n                    color: \"white\"\n                }\n            });\n        } finally{\n            setIsLoading(false);\n        }\n    };\n    const handleQuickSelect = (mins)=>{\n        setHours(Math.floor(mins / 60));\n        setMinutes(mins % 60);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\",\n        style: {\n            backgroundImage: \"url(/main-bg.png)\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_4__.Button, {\n                onClick: ()=>router.push(\"/\"),\n                className: \"mb-6 text-lg sm:text-xl bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded-full shadow-lg transition-all duration-200 flex items-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                        className: \"w-5 h-5 mr-2\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                        lineNumber: 572,\n                        columnNumber: 9\n                    }, this),\n                    \"Home\"\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                lineNumber: 568,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex justify-center items-center w-full max-w-3xl px-4 sm:px-8 md:px-12\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_5__.Card, {\n                    className: \"w-full bg-transparent border-none\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_card__WEBPACK_IMPORTED_MODULE_5__.CardContent, {\n                        className: \"border-none p-6 sm:p-8\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex flex-col items-center space-y-6 sm:space-y-8\",\n                            children: [\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center space-x-3\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                                            className: \"w-6 h-6 sm:w-8 sm:h-8 text-red-500\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                            lineNumber: 581,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                                            className: \"text-lg sm:text-xl font-semibold text-white\",\n                                            children: \"Set Charging Duration\"\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                            lineNumber: 582,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                    lineNumber: 580,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex gap-2 w-full justify-center flex-wrap\",\n                                    children: [\n                                        1,\n                                        5,\n                                        20,\n                                        60\n                                    ].map((mins)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_4__.Button, {\n                                            variant: \"outline\",\n                                            size: \"sm\",\n                                            onClick: ()=>handleQuickSelect(mins),\n                                            className: \"px-3 py-1 text-sm sm:text-base text-white border-white\",\n                                            children: mins >= 60 ? `${Math.floor(mins / 60)}h` : `${mins}m`\n                                        }, mins, false, {\n                                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                            lineNumber: 589,\n                                            columnNumber: 19\n                                        }, this))\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                    lineNumber: 587,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"flex items-center justify-center w-full space-x-6 sm:space-x-8\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_4__.Button, {\n                                            variant: \"outline\",\n                                            onClick: ()=>decrementValue(step),\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_10__[\"default\"], {\n                                                className: \"w-12 h-12 sm:w-16 sm:h-16 stroke-2 text-white\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                                lineNumber: 603,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                            lineNumber: 602,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            className: \"flex items-baseline space-x-3\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    onClick: ()=>setStep(\"hours\"),\n                                                    className: \"text-5xl sm:text-7xl font-bold text-white cursor-pointer\",\n                                                    children: formatNumber(hours)\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                                    lineNumber: 607,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"text-5xl sm:text-7xl font-bold text-white\",\n                                                    children: \":\"\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                                    lineNumber: 613,\n                                                    columnNumber: 19\n                                                }, this),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    onClick: ()=>setStep(\"minutes\"),\n                                                    className: \"text-5xl sm:text-7xl font-bold text-white cursor-pointer\",\n                                                    children: formatNumber(minutes)\n                                                }, void 0, false, {\n                                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                                    lineNumber: 614,\n                                                    columnNumber: 19\n                                                }, this)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                            lineNumber: 606,\n                                            columnNumber: 17\n                                        }, this),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_4__.Button, {\n                                            variant: \"outline\",\n                                            onClick: ()=>incrementValue(step),\n                                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_11__[\"default\"], {\n                                                className: \"w-12 h-12 sm:w-16 sm:h-16 stroke-2 text-white\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                                lineNumber: 623,\n                                                columnNumber: 19\n                                            }, this)\n                                        }, void 0, false, {\n                                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                            lineNumber: 622,\n                                            columnNumber: 17\n                                        }, this)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                    lineNumber: 601,\n                                    columnNumber: 15\n                                }, this),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ui_button__WEBPACK_IMPORTED_MODULE_4__.Button, {\n                                    onClick: handleSelect,\n                                    disabled: isLoading || hours === 0 && minutes === 0,\n                                    className: \"w-36 sm:w-40 h-10 sm:h-12 text-lg bg-red-500 hover:bg-red-600 text-white font-semibold transition-all duration-200 hover:scale-105 disabled:opacity-50\",\n                                    children: isLoading ? \"Loading...\" : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_ChevronLeft_ChevronRight_Home_Timer_Zap_lucide_react__WEBPACK_IMPORTED_MODULE_12__[\"default\"], {\n                                                className: \"w-5 h-5 mr-2\"\n                                            }, void 0, false, {\n                                                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                                lineNumber: 632,\n                                                columnNumber: 47\n                                            }, this),\n                                            \" Initialize\"\n                                        ]\n                                    }, void 0, true)\n                                }, void 0, false, {\n                                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                                    lineNumber: 627,\n                                    columnNumber: 15\n                                }, this)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                            lineNumber: 579,\n                            columnNumber: 13\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                        lineNumber: 578,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                    lineNumber: 577,\n                    columnNumber: 9\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n                lineNumber: 576,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n        lineNumber: 560,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/set-time/page.tsx\n");

/***/ }),

/***/ "(ssr)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: () => (/* binding */ cn)\n/* harmony export */ });\n/* harmony import */ var clsx__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! clsx */ \"(ssr)/./node_modules/clsx/dist/clsx.mjs\");\n/* harmony import */ var tailwind_merge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tailwind-merge */ \"(ssr)/./node_modules/tailwind-merge/dist/bundle-mjs.mjs\");\n// lib/utils.ts\n\n\nfunction cn(...inputs) {\n    return (0,tailwind_merge__WEBPACK_IMPORTED_MODULE_1__.twMerge)((0,clsx__WEBPACK_IMPORTED_MODULE_0__.clsx)(inputs));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9zcmMvbGliL3V0aWxzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGVBQWU7QUFDNkI7QUFDSjtBQUVqQyxTQUFTRSxHQUFHLEdBQUdDLE1BQW9CO0lBQ3hDLE9BQU9GLHVEQUFPQSxDQUFDRCwwQ0FBSUEsQ0FBQ0c7QUFDdEIiLCJzb3VyY2VzIjpbIkQ6XFxjb2RpbmdcXGRhc2ggZHluYW1pY3NcXGRhc2hib2FyZHNcXExvY2FsYmFja2VuZFxcY2hhcmdpbmctc3lzdGVtXFxzcmNcXGxpYlxcdXRpbHMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gbGliL3V0aWxzLnRzXHJcbmltcG9ydCB7IHR5cGUgQ2xhc3NWYWx1ZSwgY2xzeCB9IGZyb20gXCJjbHN4XCJcclxuaW1wb3J0IHsgdHdNZXJnZSB9IGZyb20gXCJ0YWlsd2luZC1tZXJnZVwiXHJcbiBcclxuZXhwb3J0IGZ1bmN0aW9uIGNuKC4uLmlucHV0czogQ2xhc3NWYWx1ZVtdKSB7XHJcbiAgcmV0dXJuIHR3TWVyZ2UoY2xzeChpbnB1dHMpKVxyXG59Il0sIm5hbWVzIjpbImNsc3giLCJ0d01lcmdlIiwiY24iLCJpbnB1dHMiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./src/lib/utils.ts\n");

/***/ }),

/***/ "(rsc)/./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"c7b59ee23fed\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJEOlxcY29kaW5nXFxkYXNoIGR5bmFtaWNzXFxkYXNoYm9hcmRzXFxMb2NhbGJhY2tlbmRcXGNoYXJnaW5nLXN5c3RlbVxcc3JjXFxzdHlsZXNcXGdsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiYzdiNTllZTIzZmVkXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/styles/globals.css\n");

/***/ }),

/***/ "(rsc)/./contexts/WebSocketContext.tsx":
/*!***************************************!*\
  !*** ./contexts/WebSocketContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketProvider: () => (/* binding */ WebSocketProvider),\n/* harmony export */   useWebSocket: () => (/* binding */ useWebSocket)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js\");\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);\n\nconst WebSocketProvider = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call WebSocketProvider() from the server but WebSocketProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\contexts\\\\WebSocketContext.tsx\",\n\"WebSocketProvider\",\n);const useWebSocket = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call useWebSocket() from the server but useWebSocket is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\contexts\\\\WebSocketContext.tsx\",\n\"useWebSocket\",\n);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./contexts/WebSocketContext.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sonner */ \"(rsc)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var _contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../contexts/WebSocketContext */ \"(rsc)/./contexts/WebSocketContext.tsx\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/globals.css */ \"(rsc)/./src/styles/globals.css\");\n\n\n\n // Ensure correct path\n// import localFont from \"next/font/local\";\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            className: \"bg-gray-50 text-gray-900 min-h-screen flex flex-col\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_2__.WebSocketProvider, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"max-h-screen w-full bg-black flex items-center justify-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative w-[768px] h-[1024px] overflow-hidden\",\n                            children: children\n                        }, void 0, false, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                            lineNumber: 19,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(sonner__WEBPACK_IMPORTED_MODULE_1__.Toaster, {}, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 24,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 16,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n            lineNumber: 15,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n        lineNumber: 14,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVpQztBQUNtQztBQUNyQyxDQUFDLHNCQUFzQjtBQUN0RCwyQ0FBMkM7QUFFNUIsU0FBU0UsV0FBVyxFQUNqQ0MsUUFBUSxFQUdUO0lBQ0MscUJBQ0UsOERBQUNDO1FBQUtDLE1BQUs7a0JBQ1QsNEVBQUNDO1lBQUtDLFdBQVU7c0JBQ2QsNEVBQUNOLHlFQUFpQkE7O2tDQUVoQiw4REFBQ087d0JBQUlELFdBQVU7a0NBQ2YsNEVBQUNDOzRCQUFJRCxXQUFVO3NDQUVaSjs7Ozs7Ozs7Ozs7a0NBR0gsOERBQUNILDJDQUFPQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS2xCIiwic291cmNlcyI6WyJEOlxcY29kaW5nXFxkYXNoIGR5bmFtaWNzXFxkYXNoYm9hcmRzXFxMb2NhbGJhY2tlbmRcXGNoYXJnaW5nLXN5c3RlbVxcc3JjXFxhcHBcXGxheW91dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5pbXBvcnQgeyBUb2FzdGVyIH0gZnJvbSBcInNvbm5lclwiO1xyXG5pbXBvcnQgeyBXZWJTb2NrZXRQcm92aWRlciB9IGZyb20gXCIuLi8uLi9jb250ZXh0cy9XZWJTb2NrZXRDb250ZXh0XCI7XHJcbmltcG9ydCBcIi4uL3N0eWxlcy9nbG9iYWxzLmNzc1wiOyAvLyBFbnN1cmUgY29ycmVjdCBwYXRoXHJcbi8vIGltcG9ydCBsb2NhbEZvbnQgZnJvbSBcIm5leHQvZm9udC9sb2NhbFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUm9vdExheW91dCh7XHJcbiAgY2hpbGRyZW4sXHJcbn06IHtcclxuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xyXG59KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxodG1sIGxhbmc9XCJlblwiPlxyXG4gICAgICA8Ym9keSBjbGFzc05hbWU9XCJiZy1ncmF5LTUwIHRleHQtZ3JheS05MDAgbWluLWgtc2NyZWVuIGZsZXggZmxleC1jb2xcIj5cclxuICAgICAgICA8V2ViU29ja2V0UHJvdmlkZXI+XHJcbiAgICAgICAgICB7LyogTWFpbiBjb250YWluZXIgZm9yIHJlc3BvbnNpdmVuZXNzICovfVxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtaC1zY3JlZW4gdy1mdWxsIGJnLWJsYWNrIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlIHctWzc2OHB4XSBoLVsxMDI0cHhdIG92ZXJmbG93LWhpZGRlblwiPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAge2NoaWxkcmVufVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8VG9hc3RlciAvPlxyXG4gICAgICAgIDwvV2ViU29ja2V0UHJvdmlkZXI+XHJcbiAgICAgIDwvYm9keT5cclxuICAgIDwvaHRtbD5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJUb2FzdGVyIiwiV2ViU29ja2V0UHJvdmlkZXIiLCJSb290TGF5b3V0IiwiY2hpbGRyZW4iLCJodG1sIiwibGFuZyIsImJvZHkiLCJjbGFzc05hbWUiLCJkaXYiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/set-time/page.tsx":
/*!***********************************!*\
  !*** ./src/app/set-time/page.tsx ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js\");\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"D:\\\\\\\\coding\\\\\\\\dash dynamics\\\\\\\\dashboards\\\\\\\\Localbackend\\\\\\\\charging-system\\\\\\\\src\\\\\\\\app\\\\\\\\set-time\\\\\\\\page.tsx\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\set-time\\\\page.tsx\",\n\"default\",\n));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/set-time/page.tsx\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/sonner","vendor-chunks/lucide-react","vendor-chunks/tailwind-merge","vendor-chunks/@radix-ui","vendor-chunks/clsx","vendor-chunks/class-variance-authority"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fset-time%2Fpage&page=%2Fset-time%2Fpage&appPaths=%2Fset-time%2Fpage&pagePath=private-next-app-dir%2Fset-time%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();