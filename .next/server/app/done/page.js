/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/done/page";
exports.ids = ["app/done/page"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fdone%2Fpage&page=%2Fdone%2Fpage&appPaths=%2Fdone%2Fpage&pagePath=private-next-app-dir%2Fdone%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fdone%2Fpage&page=%2Fdone%2Fpage&appPaths=%2Fdone%2Fpage&pagePath=private-next-app-dir%2Fdone%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?91d2\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/forbidden-error */ \"(rsc)/./node_modules/next/dist/client/components/forbidden-error.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/unauthorized-error */ \"(rsc)/./node_modules/next/dist/client/components/unauthorized-error.js\", 23));\nconst page4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/done/page.tsx */ \"(rsc)/./src/app/done/page.tsx\"));\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: [\n        'done',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page4, \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        \n        \n      }\n      ]\n      },\n        {\n        'layout': [module0, \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\"],\n'not-found': [module1, \"next/dist/client/components/not-found-error\"],\n'forbidden': [module2, \"next/dist/client/components/forbidden-error\"],\n'unauthorized': [module3, \"next/dist/client/components/unauthorized-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/done/page\",\n        pathname: \"/done\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZkb25lJTJGcGFnZSZwYWdlPSUyRmRvbmUlMkZwYWdlJmFwcFBhdGhzPSUyRmRvbmUlMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGZG9uZSUyRnBhZ2UudHN4JmFwcERpcj1EJTNBJTVDY29kaW5nJTVDZGFzaCUyMGR5bmFtaWNzJTVDZGFzaGJvYXJkcyU1Q0xvY2FsYmFja2VuZCU1Q2NoYXJnaW5nLXN5c3RlbSU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9RCUzQSU1Q2NvZGluZyU1Q2Rhc2glMjBkeW5hbWljcyU1Q2Rhc2hib2FyZHMlNUNMb2NhbGJhY2tlbmQlNUNjaGFyZ2luZy1zeXN0ZW0maXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHNCQUFzQixvSkFBK0g7QUFDckosc0JBQXNCLDBOQUFnRjtBQUN0RyxzQkFBc0IsME5BQWdGO0FBQ3RHLHNCQUFzQixnT0FBbUY7QUFDekcsb0JBQW9CLDBKQUFtSTtBQUdySjtBQUNzRDtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ3VCO0FBQzZEO0FBQ3BGLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUN1RDtBQUN2RDtBQUNPLHdCQUF3Qix1R0FBa0I7QUFDakQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9kdWxlMCA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxcbGF5b3V0LnRzeFwiKTtcbmNvbnN0IG1vZHVsZTEgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIik7XG5jb25zdCBtb2R1bGUyID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZm9yYmlkZGVuLWVycm9yXCIpO1xuY29uc3QgbW9kdWxlMyA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3VuYXV0aG9yaXplZC1lcnJvclwiKTtcbmNvbnN0IHBhZ2U0ID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcc3JjXFxcXGFwcFxcXFxkb25lXFxcXHBhZ2UudHN4XCIpO1xuaW1wb3J0IHsgQXBwUGFnZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcGFnZS9tb2R1bGUuY29tcGlsZWRcIiB3aXRoIHtcbiAgICAndHVyYm9wYWNrLXRyYW5zaXRpb24nOiAnbmV4dC1zc3InXG59O1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuLy8gV2UgaW5qZWN0IHRoZSB0cmVlIGFuZCBwYWdlcyBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgdHJlZSA9IHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJycsXG4gICAgICAgIHtcbiAgICAgICAgY2hpbGRyZW46IFtcbiAgICAgICAgJ2RvbmUnLFxuICAgICAgICB7XG4gICAgICAgIGNoaWxkcmVuOiBbJ19fUEFHRV9fJywge30sIHtcbiAgICAgICAgICBwYWdlOiBbcGFnZTQsIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxcZG9uZVxcXFxwYWdlLnRzeFwiXSxcbiAgICAgICAgICBcbiAgICAgICAgfV1cbiAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgXG4gICAgICAgIFxuICAgICAgfVxuICAgICAgXVxuICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAnbGF5b3V0JzogW21vZHVsZTAsIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxcbGF5b3V0LnRzeFwiXSxcbidub3QtZm91bmQnOiBbbW9kdWxlMSwgXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvbm90LWZvdW5kLWVycm9yXCJdLFxuJ2ZvcmJpZGRlbic6IFttb2R1bGUyLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9mb3JiaWRkZW4tZXJyb3JcIl0sXG4ndW5hdXRob3JpemVkJzogW21vZHVsZTMsIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3VuYXV0aG9yaXplZC1lcnJvclwiXSxcbiAgICAgICAgXG4gICAgICB9XG4gICAgICBdXG4gICAgICB9LmNoaWxkcmVuO1xuY29uc3QgcGFnZXMgPSBbXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcc3JjXFxcXGFwcFxcXFxkb25lXFxcXHBhZ2UudHN4XCJdO1xuZXhwb3J0IHsgdHJlZSwgcGFnZXMgfTtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2xvYmFsRXJyb3IgfSBmcm9tIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2Vycm9yLWJvdW5kYXJ5XCI7XG5jb25zdCBfX25leHRfYXBwX3JlcXVpcmVfXyA9IF9fd2VicGFja19yZXF1aXJlX19cbmNvbnN0IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKClcbmV4cG9ydCBjb25zdCBfX25leHRfYXBwX18gPSB7XG4gICAgcmVxdWlyZTogX19uZXh0X2FwcF9yZXF1aXJlX18sXG4gICAgbG9hZENodW5rOiBfX25leHRfYXBwX2xvYWRfY2h1bmtfX1xufTtcbmV4cG9ydCAqIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvZW50cnktYmFzZVwiO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUGFnZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUEFHRSxcbiAgICAgICAgcGFnZTogXCIvZG9uZS9wYWdlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9kb25lXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJyxcbiAgICAgICAgYXBwUGF0aHM6IFtdXG4gICAgfSxcbiAgICB1c2VybGFuZDoge1xuICAgICAgICBsb2FkZXJUcmVlOiB0cmVlXG4gICAgfVxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1wYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fdone%2Fpage&page=%2Fdone%2Fpage&appPaths=%2Fdone%2Fpage&pagePath=private-next-app-dir%2Fdone%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./contexts/WebSocketContext.tsx */ \"(rsc)/./contexts/WebSocketContext.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/sonner/dist/index.mjs */ \"(rsc)/./node_modules/sonner/dist/index.mjs\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDY29udGV4dHMlNUMlNUNXZWJTb2NrZXRDb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMldlYlNvY2tldFByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDc29ubmVyJTVDJTVDZGlzdCU1QyU1Q2luZGV4Lm1qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRvYXN0ZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNzcmMlNUMlNUNzdHlsZXMlNUMlNUNnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQWdMO0FBQ2hMO0FBQ0Esb0xBQTZLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJXZWJTb2NrZXRQcm92aWRlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxjb250ZXh0c1xcXFxXZWJTb2NrZXRDb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVG9hc3RlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcc29ubmVyXFxcXGRpc3RcXFxcaW5kZXgubWpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./contexts/WebSocketContext.tsx */ \"(ssr)/./contexts/WebSocketContext.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/sonner/dist/index.mjs */ \"(ssr)/./node_modules/sonner/dist/index.mjs\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDY29udGV4dHMlNUMlNUNXZWJTb2NrZXRDb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMldlYlNvY2tldFByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDc29ubmVyJTVDJTVDZGlzdCU1QyU1Q2luZGV4Lm1qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRvYXN0ZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNzcmMlNUMlNUNzdHlsZXMlNUMlNUNnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQWdMO0FBQ2hMO0FBQ0Esb0xBQTZLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJXZWJTb2NrZXRQcm92aWRlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxjb250ZXh0c1xcXFxXZWJTb2NrZXRDb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVG9hc3RlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcc29ubmVyXFxcXGRpc3RcXFxcaW5kZXgubWpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNjbGllbnQtc2VnbWVudC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2Vycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2xheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q21ldGFkYXRhLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxvT0FBdUs7QUFDdks7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSxvUkFBZ007QUFDaE07QUFDQSx3T0FBeUs7QUFDeks7QUFDQSxzUUFBd0w7QUFDeEw7QUFDQSxzT0FBd0siLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGNsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGh0dHAtYWNjZXNzLWZhbGxiYWNrXFxcXGVycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxsYXlvdXQtcm91dGVyLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxsaWJcXFxcbWV0YWRhdGFcXFxcbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNjbGllbnQtc2VnbWVudC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2Vycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2xheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q21ldGFkYXRhLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxvT0FBdUs7QUFDdks7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSxvUkFBZ007QUFDaE07QUFDQSx3T0FBeUs7QUFDeks7QUFDQSxzUUFBd0w7QUFDeEw7QUFDQSxzT0FBd0siLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGNsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGh0dHAtYWNjZXNzLWZhbGxiYWNrXFxcXGVycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxsYXlvdXQtcm91dGVyLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxsaWJcXFxcbWV0YWRhdGFcXFxcbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cdone%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cdone%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/done/page.tsx */ \"(rsc)/./src/app/done/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDZG9uZSU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSwwSkFBbUkiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxzcmNcXFxcYXBwXFxcXGRvbmVcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cdone%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cdone%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cdone%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \******************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/done/page.tsx */ \"(ssr)/./src/app/done/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDZG9uZSU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSwwSkFBbUkiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxzcmNcXFxcYXBwXFxcXGRvbmVcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cdone%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./contexts/WebSocketContext.tsx":
/*!***************************************!*\
  !*** ./contexts/WebSocketContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketProvider: () => (/* binding */ WebSocketProvider),\n/* harmony export */   useWebSocket: () => (/* binding */ useWebSocket)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sonner */ \"(ssr)/./node_modules/sonner/dist/index.mjs\");\n// \"use client\";\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\";\n// // Define WebSocket data types\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n// }\n// interface ChargingStatus {\n//   isCharging: boolean;\n// }\n// // Define WebSocket message structure\n// interface WebSocketMessage {\n//   type: string;\n//   data: BMSData | ChargingStatus;\n// }\n// // Define WebSocket context type\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void;\n//   connected: boolean;\n//   bmsData: BMSData;\n//   chargingStatus: ChargingStatus;\n//   lastMessage: WebSocketMessage | null;\n// }\n// // Create WebSocket context\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // Default data values\n// const defaultBMSData: BMSData = {\n//   voltage: 0,\n//   current: 0,\n//   SOC: 0,\n//   isReceiverCoilDetected: false,\n// };\n// const defaultChargingStatus: ChargingStatus = {\n//   isCharging: false,\n// };\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false);\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null);\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData);\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus);\n//   const ws = useRef<WebSocket | null>(null);\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n//   const connect = useCallback(() => {\n//     if (ws.current) return; // Prevent multiple WebSocket instances\n//     ws.current = new WebSocket(\"ws://localhost:8080\"); // Replace with your WebSocket server URL\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true);\n//       toast.success(\"Connected to charging system\");\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current);\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data);\n//         console.log(\"🟢 Received WebSocket Data:\", data);\n//         setLastMessage(data);\n//         switch (data.type) {\n//           case \"bms_data\":\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData);\n//             break;\n//             case \"charging_status\":\n//               const chargingData = data.data as ChargingStatus;\n//               console.log(\"⚡ Raw Charging Status Received:\", JSON.stringify(chargingData, null, 2));\n//               setChargingStatus((prev) => ({\n//                 ...prev,\n//                 ...chargingData,\n//               }));\n//               break;\n//           case \"error\":\n//             toast.error(\"⚠️ Unknown error occurred\");\n//             break;\n//           default:\n//             console.log(\"🔍 Received unknown message type:\", data);\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\");\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false);\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect();\n//       }, 3000);\n//     };\n//   }, []);\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close();\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n//     };\n//   }, [connect]);\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       ws.current.send(JSON.stringify(message));\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\");\n//     }\n//   };\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // Custom hook to use WebSocket context\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n//   }\n//   return context;\n// };\n//FALSE CHARGING\n// \"use client\";\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\";\n// // Define WebSocket data types\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n// }\n// interface ChargingStatus {\n//   isCharging: boolean;\n// }\n// // Define WebSocket message structure\n// interface WebSocketMessage {\n//   type: string;\n//   data: BMSData | ChargingStatus;\n// }\n// // Define WebSocket context type\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void;\n//   connected: boolean;\n//   bmsData: BMSData;\n//   chargingStatus: ChargingStatus;\n//   lastMessage: WebSocketMessage | null;\n// }\n// // Create WebSocket context\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // Default data values\n// const defaultBMSData: BMSData = {\n//   voltage: 0,\n//   current: 0,\n//   SOC: 0,\n//   isReceiverCoilDetected: false,\n// };\n// const defaultChargingStatus: ChargingStatus = {\n//   isCharging: false,\n// };\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false);\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null);\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData);\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus);\n//   const ws = useRef<WebSocket | null>(null);\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n//   const connect = useCallback(() => {\n//     if (ws.current) return;\n//     ws.current = new WebSocket(\"ws://localhost:8080\");\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true);\n//       toast.success(\"Connected to charging system\");\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current);\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data);\n//         console.log(\"🟢 Received WebSocket Data:\", data);\n//         setLastMessage(data);\n//         switch (data.type) {\n//           case \"bms_data\":\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData);\n//             break;\n//           case \"charging_status\":\n//             const chargingData = data.data as ChargingStatus;\n//             console.log(\"⚡ Charging Status Received:\", JSON.stringify(chargingData, null, 2));\n//             setChargingStatus(chargingData);\n//             if (!chargingData.isCharging) {\n//               toast.info(\"Charging has been turned OFF by the user.\");\n//             } else {\n//               toast.info(\"Charging has started.\");\n//             }\n//             break;\n//           case \"error\":\n//             toast.error(\"⚠️ Unknown error occurred\");\n//             break;\n//           default:\n//             console.log(\"🔍 Received unknown message type:\", data);\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\");\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false);\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect();\n//       }, 3000);\n//     };\n//   }, []);\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close();\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n//     };\n//   }, [connect]);\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       ws.current.send(JSON.stringify(message));\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\");\n//     }\n//   };\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // Custom hook to use WebSocket context\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n//   }\n//   return context;\n// };\n///test\n// \"use client\"; // Next.js ka client component batane ke liye\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\"; // Notification dikhane ke liye\n// // ✅ WebSocket se aane wale data ka type define karna\n// interface BMSData {\n//   voltage: number; // Battery voltage\n//   current: number; // Current flow\n//   SOC: number; // Battery ka charge level (State of Charge)\n//   isReceiverCoilDetected: boolean; // Kya receiver coil detect ho rahi hai ya nahi\n// }\n// interface ChargingStatus {\n//   isCharging: boolean; // Kya charging chal rahi hai ya nahi\n// }\n// // ✅ WebSocket se aane wale message ka structure define karna\n// interface WebSocketMessage {\n//   type: string; // Message ka type batane ke liye\n//   data: BMSData | ChargingStatus | { message: string }; // Ya to BMS ka data hoga ya charging status\n// }\n// // ✅ WebSocket context ka type define karna\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void; // Message bhejne ka function\n//   connected: boolean; // Kya WebSocket connected hai ya nahi\n//   bmsData: BMSData; // Battery ka data\n//   chargingStatus: ChargingStatus; // Charging ka status\n//   lastMessage: WebSocketMessage | null; // Last message jo WebSocket se aaya\n// }\n// // ✅ WebSocket context create karna\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // ✅ Default values set karna\n// const defaultBMSData: BMSData = { voltage: 0, current: 0, SOC: 0, isReceiverCoilDetected: false };\n// const defaultChargingStatus: ChargingStatus = { isCharging: false };\n// // ✅ WebSocket Provider component banaya jisme WebSocket ka connection handle hoga\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false); // Connection ka status\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null); // Last received message\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData); // Battery data store karne ke liye\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus); // Charging status store karne ke liye\n//   const ws = useRef<WebSocket | null>(null); // WebSocket connection ka reference\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined); // Auto-reconnect ka timeout store karne ke liye\n//   // ✅ WebSocket se connection establish karne ka function\n//   const connect = useCallback(() => {\n//     if (ws.current) return; // Agar pehle se connected hai to dobara mat connect karo\n//     ws.current = new WebSocket(\"ws://localhost:8080\"); // WebSocket ka connection start karo\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true); // Connected status ko true kar do\n//       toast.success(\"Connected to charging system\"); // Notification bhejo\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current); // Agar koi reconnect timeout hai to use hata do\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       console.log(\"🔄 RAW WebSocket Data Received:\", event.data); // Received message ka log dikhana\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data); // Message ko JSON me parse karna\n//         console.log(\"✅ Parsed WebSocket Data:\", data);\n//         setLastMessage(data); // Last message ko update karna\n//         switch (data.type) {\n//           case \"bms_data\": // Agar message BMS ka data hai\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData); // BMS ka data update kar do\n//             break;\n//           case \"charging_status\": // Agar message charging status ka hai\n//             const chargingData = data.data as ChargingStatus;\n//             console.log(\"⚡ Charging Status:\", JSON.stringify(chargingData, null, 2));\n//             setChargingStatus(chargingData); // Charging status update kar do\n//             if (!chargingData.isCharging) {\n//               toast.info(\"🔴 Charging has been turned OFF.\"); // Charging band hone ka message dikhana\n//             } else {\n//               toast.success(\"⚡ Charging Started!\"); // Charging start hone ka message dikhana\n//             }\n//             break;\n//           case \"test_message\": // Server se koi test message aya\n//             console.log(\"📩 Test Message from Server:\", data.data);\n//             break;\n//           case \"error\": // Agar WebSocket error aayi\n//             toast.error(\"⚠️ WebSocket Error Received\");\n//             break;\n//           default:\n//             console.warn(\"🔍 Unknown WebSocket Message:\", data); // Agar unknown message aaye to warning do\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\"); // WebSocket error ka notification bhejna\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false); // Connection ko false kar do\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect(); // 3 second baad reconnect karne ka try karna\n//       }, 3000);\n//     };\n//   }, []);\n//   // ✅ Component jab load ho to WebSocket connection start ho\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close(); // Component unload hone par connection close kar do\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current); // Timeout clear kar do\n//     };\n//   }, [connect]);\n//   // ✅ WebSocket message bhejne ka function\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message)); // Message ka log\n//       ws.current.send(JSON.stringify(message)); // WebSocket par message bhejna\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\"); // Agar connection nahi hai to error dikhana\n//     }\n//   };\n//   // ✅ WebSocket provider return kar raha hai jo children ko wrap karega\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // ✅ Custom hook jo WebSocket context ka use karega\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\"); // Agar context nahi mila to error do\n//   }\n//   return context;\n// };\n////fod\n// \"use client\"; // Next.js ka client component batane ke liye\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\"; // Notification dikhane ke liye\n// // ✅ WebSocket se aane wale data ka type define karna\n// interface BMSData {\n//   voltage: number; // Battery voltage\n//   current: number; // Current flow\n//   SOC: number; // Battery ka charge level (State of Charge)\n//   isReceiverCoilDetected: boolean;\n//   isFOD: boolean;// Kya receiver coil detect ho rahi hai ya nahi\n//   isMiss: boolean;\n// }\n// interface ChargingStatus {\n//   isCharging: boolean; // Kya charging chal rahi hai ya nahi\n// }\n// // ✅ WebSocket se aane wale message ka structure define karna\n// interface WebSocketMessage {\n//   type: string; // Message ka type batane ke liye\n//   data: BMSData | ChargingStatus | { message: string }; // Ya to BMS ka data hoga ya charging status\n// }\n// // ✅ WebSocket context ka type define karna\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void; // Message bhejne ka function\n//   connected: boolean; // Kya WebSocket connected hai ya nahi\n//   bmsData: BMSData; // Battery ka data\n//   chargingStatus: ChargingStatus; // Charging ka status\n//   lastMessage: WebSocketMessage | null; // Last message jo WebSocket se aaya\n// }\n// // ✅ WebSocket context create karna\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // ✅ Default values set karna\n// const defaultBMSData: BMSData = { voltage: 0, current: 0, SOC: 0, isReceiverCoilDetected: false,  isFOD: false, isMiss:false, };\n// const defaultChargingStatus: ChargingStatus = { isCharging: false };\n// // ✅ WebSocket Provider component banaya jisme WebSocket ka connection handle hoga\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false); // Connection ka status\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null); // Last received message\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData); // Battery data store karne ke liye\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus); // Charging status store karne ke liye\n//   const ws = useRef<WebSocket | null>(null); // WebSocket connection ka reference\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined); // Auto-reconnect ka timeout store karne ke liye\n//   // ✅ WebSocket se connection establish karne ka function\n//   const connect = useCallback(() => {\n//     if (ws.current) return; // Agar pehle se connected hai to dobara mat connect karo\n//     ws.current = new WebSocket(\"ws://localhost:8080\"); // WebSocket ka connection start karo\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true); // Connected status ko true kar do\n//       toast.success(\"Connected to charging system\"); // Notification bhejo\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current); // Agar koi reconnect timeout hai to use hata do\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       console.log(\"🔄 RAW WebSocket Data Received:\", event.data); // Received message ka log dikhana\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data); // Message ko JSON me parse karna\n//         console.log(\"✅ Parsed WebSocket Data:\", data);\n//         setLastMessage(data); // Last message ko update karna\n//         switch (data.type) {\n//           case \"bms_data\": // Agar message BMS ka data hai\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData); // BMS ka data update kar do\n//             break;\n//           case \"charging_status\": // Agar message charging status ka hai\n//             const chargingData = data.data as ChargingStatus;\n//             console.log(\"⚡ Charging Status:\", JSON.stringify(chargingData, null, 2));\n//             setChargingStatus(chargingData); // Charging status update kar do\n//             if (!chargingData.isCharging) {\n//               toast.info(\"🔴 Charging has been turned OFF.\"); // Charging band hone ka message dikhana\n//             } else {\n//               toast.success(\"⚡ Charging Started!\"); // Charging start hone ka message dikhana\n//             }\n//             break;\n//           case \"test_message\": // Server se koi test message aya\n//             console.log(\"📩 Test Message from Server:\", data.data);\n//             break;\n//           case \"error\": // Agar WebSocket error aayi\n//             toast.error(\"⚠️ WebSocket Error Received\");\n//             break;\n//           default:\n//             console.warn(\"🔍 Unknown WebSocket Message:\", data); // Agar unknown message aaye to warning do\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\"); // WebSocket error ka notification bhejna\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false); // Connection ko false kar do\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect(); // 3 second baad reconnect karne ka try karna\n//       }, 3000);\n//     };\n//   }, []);\n//   // ✅ Component jab load ho to WebSocket connection start ho\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close(); // Component unload hone par connection close kar do\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current); // Timeout clear kar do\n//     };\n//   }, [connect]);\n//   // ✅ WebSocket message bhejne ka function\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message)); // Message ka log\n//       ws.current.send(JSON.stringify(message)); // WebSocket par message bhejna\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\"); // Agar connection nahi hai to error dikhana\n//     }\n//   };\n//   useEffect(() => {\n//     if (bmsData.isFOD) {\n//       toast.error(\"⚠️ Foreign Object Detected! Charging may be unsafe.\");\n//     }\n//   }, [bmsData.isFOD]);\n//   // ✅ WebSocket provider return kar raha hai jo children ko wrap karega\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // ✅ Custom hook jo WebSocket context ka use karega\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\"); // Agar context nahi mila to error do\n//   }\n//   return context;\n// };\n// /missalignemnt\n/* __next_internal_client_entry_do_not_use__ WebSocketProvider,useWebSocket auto */ \n\n // Notification dikhane ke liye\n// ✅ WebSocket context create karna\nconst WebSocketContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n// ✅ Default values set karna\nconst defaultBMSData = {\n    voltage: 0,\n    current: 0,\n    SOC: 0,\n    isReceiverCoilDetected: false,\n    isFOD: false,\n    isMiss: false\n};\nconst defaultChargingStatus = {\n    isCharging: false\n};\n// ✅ WebSocket Provider component banaya jisme WebSocket ka connection handle hoga\nfunction WebSocketProvider({ children }) {\n    const [connected, setConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Connection ka status\n    const [lastMessage, setLastMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Last received message\n    const [bmsData, setBMSData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultBMSData); // Battery data store karne ke liye\n    const [chargingStatus, setChargingStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultChargingStatus); // Charging status store karne ke liye\n    const ws = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // WebSocket connection ka reference\n    const reconnectTimeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(undefined); // Auto-reconnect ka timeout store karne ke liye\n    // ✅ WebSocket se connection establish karne ka function\n    const connect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketProvider.useCallback[connect]\": ()=>{\n            if (ws.current) return; // Agar pehle se connected hai to dobara mat connect karo\n            ws.current = new WebSocket(\"ws://localhost:8080\"); // WebSocket ka connection start karo\n            ws.current.onopen = ({\n                \"WebSocketProvider.useCallback[connect]\": ()=>{\n                    console.log(\"✅ WebSocket Connected\");\n                    setConnected(true); // Connected status ko true kar do\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Connected to charging system\"); // Notification bhejo\n                    if (reconnectTimeout.current) {\n                        clearTimeout(reconnectTimeout.current); // Agar koi reconnect timeout hai to use hata do\n                        reconnectTimeout.current = undefined;\n                    }\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n            ws.current.onmessage = ({\n                \"WebSocketProvider.useCallback[connect]\": (event)=>{\n                    console.log(\"🔄 RAW WebSocket Data Received:\", event.data); // Received message ka log dikhana\n                    try {\n                        const data = JSON.parse(event.data); // Message ko JSON me parse karna\n                        console.log(\"✅ Parsed WebSocket Data:\", data);\n                        setLastMessage(data); // Last message ko update karna\n                        switch(data.type){\n                            case \"bms_data\":\n                                console.log(\"🔋 BMS Data:\", data.data);\n                                setBMSData(data.data); // BMS ka data update kar do\n                                break;\n                            case \"charging_status\":\n                                const chargingData = data.data;\n                                console.log(\"⚡ Charging Status:\", JSON.stringify(chargingData, null, 2));\n                                setChargingStatus(chargingData); // Charging status update kar do\n                                if (!chargingData.isCharging) {\n                                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.info(\"🔴 Charging has been turned OFF.\"); // Charging band hone ka message dikhana\n                                } else {\n                                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"⚡ Charging Started!\"); // Charging start hone ka message dikhana\n                                }\n                                break;\n                            case \"test_message\":\n                                console.log(\"📩 Test Message from Server:\", data.data);\n                                break;\n                            case \"error\":\n                                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"⚠️ WebSocket Error Received\");\n                                break;\n                            default:\n                                console.warn(\"🔍 Unknown WebSocket Message:\", data); // Agar unknown message aaye to warning do\n                        }\n                    } catch (error) {\n                        console.error(\"❌ WebSocket Data Parsing Error:\", error);\n                    }\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n            ws.current.onerror = ({\n                \"WebSocketProvider.useCallback[connect]\": (event)=>{\n                    console.error(\"🚨 WebSocket Error:\", event);\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"WebSocket connection error\"); // WebSocket error ka notification bhejna\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n            ws.current.onclose = ({\n                \"WebSocketProvider.useCallback[connect]\": ()=>{\n                    console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n                    setConnected(false); // Connection ko false kar do\n                    ws.current = null;\n                    reconnectTimeout.current = setTimeout({\n                        \"WebSocketProvider.useCallback[connect]\": ()=>{\n                            console.log(\"🔄 Attempting to reconnect...\");\n                            connect(); // 3 second baad reconnect karne ka try karna\n                        }\n                    }[\"WebSocketProvider.useCallback[connect]\"], 3000);\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n        }\n    }[\"WebSocketProvider.useCallback[connect]\"], []);\n    // ✅ Component jab load ho to WebSocket connection start ho\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketProvider.useEffect\": ()=>{\n            connect();\n            return ({\n                \"WebSocketProvider.useEffect\": ()=>{\n                    if (ws.current) ws.current.close(); // Component unload hone par connection close kar do\n                    if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current); // Timeout clear kar do\n                }\n            })[\"WebSocketProvider.useEffect\"];\n        }\n    }[\"WebSocketProvider.useEffect\"], [\n        connect\n    ]);\n    // ✅ WebSocket message bhejne ka function\n    const sendMessage = (message)=>{\n        if (ws.current?.readyState === WebSocket.OPEN) {\n            console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message)); // Message ka log\n            ws.current.send(JSON.stringify(message)); // WebSocket par message bhejna\n        } else {\n            sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"❌ Not connected to charging system\"); // Agar connection nahi hai to error dikhana\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketProvider.useEffect\": ()=>{\n            if (bmsData.isFOD) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"⚠️ Foreign Object Detected! Charging may be unsafe.\");\n            }\n        }\n    }[\"WebSocketProvider.useEffect\"], [\n        bmsData.isFOD\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketProvider.useEffect\": ()=>{\n            if (bmsData.isMiss) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"⚠️ Misalignment detected! Please realign the vehicle.\");\n            }\n        }\n    }[\"WebSocketProvider.useEffect\"], [\n        bmsData.isMiss\n    ]);\n    // ✅ WebSocket provider return kar raha hai jo children ko wrap karega\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WebSocketContext.Provider, {\n        value: {\n            sendMessage,\n            connected,\n            bmsData,\n            chargingStatus,\n            lastMessage\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\contexts\\\\WebSocketContext.tsx\",\n        lineNumber: 813,\n        columnNumber: 5\n    }, this);\n}\n// ✅ Custom hook jo WebSocket context ka use karega\nconst useWebSocket = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WebSocketContext);\n    if (!context) {\n        throw new Error(\"useWebSocket must be used within a WebSocketProvider\"); // Agar context nahi mila to error do\n    }\n    return context;\n}; //soc\n // \"use client\";\n // import React, {\n //   createContext,\n //   useContext,\n //   useEffect,\n //   useRef,\n //   useState,\n //   useCallback,\n // } from \"react\";\n // import { toast } from \"sonner\";\n // // Updated BMSData with targetSOC\n // interface BMSData {\n //   voltage: number;\n //   current: number;\n //   SOC: number;\n //   isReceiverCoilDetected: boolean;\n //   isFOD: boolean;\n //   isMiss: boolean;\n //   targetSOC: number; // ✅ New field\n // }\n // interface ChargingStatus {\n //   isCharging: boolean;\n // }\n // interface WebSocketMessage {\n //   type: string;\n //   data: BMSData | ChargingStatus | { message: string };\n // }\n // interface WebSocketContextType {\n //   sendMessage: (message: unknown) => void;\n //   connected: boolean;\n //   bmsData: BMSData;\n //   chargingStatus: ChargingStatus;\n //   lastMessage: WebSocketMessage | null;\n // }\n // const WebSocketContext = createContext<WebSocketContextType | null>(null);\n // // Updated defaultBMSData\n // const defaultBMSData: BMSData = {\n //   voltage: 0,\n //   current: 0,\n //   SOC: 15,\n //   isReceiverCoilDetected: false,\n //   isFOD: false,\n //   isMiss: false,\n //   targetSOC: 100, // ✅ Default value for targetSOC\n // };\n // const defaultChargingStatus: ChargingStatus = {\n //   isCharging: false,\n // };\n // export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n //   const [connected, setConnected] = useState(false);\n //   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null);\n //   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData);\n //   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus);\n //   const ws = useRef<WebSocket | null>(null);\n //   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n //   const connect = useCallback(() => {\n //     if (ws.current) return;\n //     ws.current = new WebSocket(\"ws://localhost:8080\");\n //     ws.current.onopen = () => {\n //       console.log(\"✅ WebSocket Connected\");\n //       setConnected(true);\n //       toast.success(\"Connected to charging system\");\n //       if (reconnectTimeout.current) {\n //         clearTimeout(reconnectTimeout.current);\n //         reconnectTimeout.current = undefined;\n //       }\n //     };\n //     ws.current.onmessage = (event) => {\n //       try {\n //         const data: WebSocketMessage = JSON.parse(event.data);\n //         console.log(\"📨 WebSocket Data:\", data);\n //         setLastMessage(data);\n //         switch (data.type) {\n //           case \"bms_data\": {\n //             const incomingData = data.data as BMSData;\n //             setBMSData((prev) => ({\n //               ...prev,\n //               ...incomingData,\n //               targetSOC: incomingData.targetSOC ?? prev.targetSOC, // ✅ Handle partial data\n //             }));\n //             break;\n //           }\n //           case \"charging_status\": {\n //             const chargingData = data.data as ChargingStatus;\n //             setChargingStatus(chargingData);\n //             toast[chargingData.isCharging ? \"success\" : \"info\"](\n //               chargingData.isCharging ? \"⚡ Charging Started!\" : \"🔴 Charging has been turned OFF.\"\n //             );\n //             break;\n //           }\n //           case \"test_message\":\n //             console.log(\"📩 Test Message from Server:\", data.data);\n //             break;\n //           case \"error\":\n //             toast.error(\"⚠️ WebSocket Error Received\");\n //             break;\n //           default:\n //             console.warn(\"🔍 Unknown WebSocket Message:\", data);\n //         }\n //       } catch (error) {\n //         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n //       }\n //     };\n //     ws.current.onerror = (event) => {\n //       console.error(\"🚨 WebSocket Error:\", event);\n //       toast.error(\"WebSocket connection error\");\n //     };\n //     ws.current.onclose = () => {\n //       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n //       setConnected(false);\n //       ws.current = null;\n //       reconnectTimeout.current = setTimeout(() => {\n //         console.log(\"🔄 Attempting to reconnect...\");\n //         connect();\n //       }, 3000);\n //     };\n //   }, []);\n //   useEffect(() => {\n //     connect();\n //     return () => {\n //       if (ws.current) ws.current.close();\n //       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n //     };\n //   }, [connect]);\n //   const sendMessage = (message: unknown) => {\n //     if (ws.current?.readyState === WebSocket.OPEN) {\n //       console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message));\n //       ws.current.send(JSON.stringify(message));\n //     } else {\n //       toast.error(\"❌ Not connected to charging system\");\n //     }\n //   };\n //   useEffect(() => {\n //     if (bmsData.isFOD) {\n //       toast.error(\"⚠️ Foreign Object Detected! Charging may be unsafe.\");\n //     }\n //   }, [bmsData.isFOD]);\n //   useEffect(() => {\n //     if (bmsData.isMiss) {\n //       toast.error(\"⚠️ Misalignment detected! Please realign the vehicle.\");\n //     }\n //   }, [bmsData.isMiss]);\n //   return (\n //     <WebSocketContext.Provider\n //       value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}\n //     >\n //       {children}\n //     </WebSocketContext.Provider>\n //   );\n // }\n // export const useWebSocket = () => {\n //   const context = useContext(WebSocketContext);\n //   if (!context) {\n //     throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n //   }\n //   return context;\n // };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./contexts/WebSocketContext.tsx\n");

/***/ }),

/***/ "(ssr)/./hooks/useBMSData.ts":
/*!*****************************!*\
  !*** ./hooks/useBMSData.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useBMSData: () => (/* binding */ useBMSData)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/WebSocketContext */ \"(ssr)/./contexts/WebSocketContext.tsx\");\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sonner */ \"(ssr)/./node_modules/sonner/dist/index.mjs\");\n// \"use client\";\n// import { useState, useEffect, useCallback } from 'react';\n// import { useWebSocket } from '../contexts/WebSocketContext';\n// import { toast } from 'sonner';\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n// }\n// export function useBMSData() {\n//   const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = useWebSocket();\n//   const [bmsData, setBMSData] = useState<BMSData>({\n//     voltage: 0,\n//     current: 0,\n//     SOC: 15,\n//     isReceiverCoilDetected: false,\n//   });\n//   // Update BMS data when receiving new messages\n//   useEffect(() => {\n//     if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n//       setBMSData(lastMessage.data as BMSData);\n//     }\n//   }, [lastMessage]);\n//   // Sync with context BMS data\n//   useEffect(() => {\n//     setBMSData(contextBMSData);\n//   }, [contextBMSData]);\n//   // Update BMS data\n//   const updateBMSData = useCallback(async (newData: Partial<BMSData>): Promise<boolean> => {\n//     if (!connected) {\n//       toast.error('Not connected to charging system');\n//       return false;\n//     }\n//     try {\n//       const updatedData = {\n//         ...bmsData,\n//         ...newData,\n//       };\n//       sendMessage({\n//         type: 'updateBMSData',\n//         data: updatedData,\n//       });\n//       setBMSData(updatedData);\n//       return true;\n//     } catch (error) {\n//       console.error('Error updating BMS data:', error);\n//       toast.error('Failed to update BMS data');\n//       return false;\n//     }\n//   }, [connected, sendMessage, bmsData]);\n//   // Reset BMS data\n//   const resetBMSData = useCallback(() => {\n//     if (!connected) {\n//       toast.error('Not connected to charging system');\n//       return;\n//     }\n//     try {\n//       const resetData: BMSData = {\n//         voltage: 0,\n//         current: 0,\n//         SOC: 15,\n//         isReceiverCoilDetected: false,\n//       };\n//       sendMessage({\n//         type: 'resetBMSData',\n//         data: resetData,\n//       });\n//       setBMSData(resetData);\n//       toast.success('BMS data reset');\n//     } catch (error) {\n//       console.error('Error resetting BMS data:', error);\n//       toast.error('Failed to reset BMS data');\n//     }\n//   }, [connected, sendMessage]);\n//   // Monitor receiver coil detection\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected) {\n//       toast.success('Receiver coil detected');\n//     } else if (bmsData.isReceiverCoilDetected === false) {\n//       toast.error('Receiver coil not detected');\n//     }\n//   }, [bmsData.isReceiverCoilDetected]);\n//   // Calculate charging power\n//   const calculateChargingPower = useCallback((): number => {\n//     return bmsData.voltage * bmsData.current;\n//   }, [bmsData.voltage, bmsData.current]);\n//   return {\n//     bmsData,\n//     updateBMSData,\n//     resetBMSData,\n//     isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n//     chargingPower: calculateChargingPower(),\n//   };\n// }\n////fod\n// \"use client\";\n// import { useState, useEffect, useCallback } from 'react';\n// import { useWebSocket } from '../contexts/WebSocketContext';\n// import { toast } from 'sonner';\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n//   isFOD: boolean;\n//   isMiss: boolean;\n// }\n// export function useBMSData() {\n//   const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = useWebSocket();\n//   const [bmsData, setBMSData] = useState<BMSData>({\n//     voltage: 0,\n//     current: 0,\n//     SOC: 15,\n//     isReceiverCoilDetected: false,\n//     isFOD: false,\n//     isMiss: false,\n//   });\n//   // Update BMS data when receiving new messages\n//   useEffect(() => {\n//     if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n//       setBMSData(lastMessage.data as BMSData);\n//     }\n//   }, [lastMessage]);\n//   // Sync with context BMS data\n//   useEffect(() => {\n//     setBMSData(contextBMSData);\n//   }, [contextBMSData]);\n//   // Update BMS data\n//   const updateBMSData = useCallback(async (newData: Partial<BMSData>): Promise<boolean> => {\n//     if (!connected) {\n//       toast.error('Not connected to charging system');\n//       return false;\n//     }\n//     try {\n//       const updatedData = {\n//         ...bmsData,\n//         ...newData,\n//       };\n//       sendMessage({\n//         type: 'updateBMSData',\n//         data: updatedData,\n//       });\n//       setBMSData(updatedData);\n//       return true;\n//     } catch (error) {\n//       console.error('Error updating BMS data:', error);\n//       toast.error('Failed to update BMS data');\n//       return false;\n//     }\n//   }, [connected, sendMessage, bmsData]);\n//   // Reset BMS data\n//   const resetBMSData = useCallback(() => {\n//     if (!connected) {\n//       toast.error('Not connected to charging system');\n//       return;\n//     }\n//     try {\n//       const resetData: BMSData = {\n//         voltage: 0,\n//         current: 0,\n//         SOC: 15,\n//         isReceiverCoilDetected: false,\n//         isFOD: false,\n//         isMiss: false,\n//       };\n//       sendMessage({\n//         type: 'resetBMSData',\n//         data: resetData,\n//       });\n//       setBMSData(resetData);\n//       toast.success('BMS data reset');\n//     } catch (error) {\n//       console.error('Error resetting BMS data:', error);\n//       toast.error('Failed to reset BMS data');\n//     }\n//   }, [connected, sendMessage]);\n//   // Monitor receiver coil detection\n//   useEffect(() => {\n//     if (bmsData.isReceiverCoilDetected) {\n//       toast.success('Receiver coil detected');\n//     } else if (bmsData.isReceiverCoilDetected === false) {\n//       toast.error('Receiver coil not detected');\n//     }\n//   }, [bmsData.isReceiverCoilDetected]);\n//   // Calculate charging power\n//   const calculateChargingPower = useCallback((): number => {\n//     return bmsData.voltage * bmsData.current;\n//   }, [bmsData.voltage, bmsData.current]);\n//   return {\n//     bmsData,\n//     updateBMSData,\n//     resetBMSData,\n//     isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n//     isFOD: bmsData.isFOD,\n//     isMiss: bmsData.isMiss,\n//     chargingPower: calculateChargingPower(),\n//   };\n// }\n//miss alignment\n/* __next_internal_client_entry_do_not_use__ useBMSData auto */ \n\n\nfunction useBMSData() {\n    const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = (0,_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__.useWebSocket)();\n    const [bmsData, setBMSData] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        voltage: 0,\n        current: 0,\n        SOC: 15,\n        isReceiverCoilDetected: false,\n        // targetSOC: 0,\n        isFOD: false,\n        isMiss: false\n    });\n    // Update BMS data when receiving new messages\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useBMSData.useEffect\": ()=>{\n            if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n                setBMSData(lastMessage.data);\n            }\n        }\n    }[\"useBMSData.useEffect\"], [\n        lastMessage\n    ]);\n    // Sync with context BMS data\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useBMSData.useEffect\": ()=>{\n            setBMSData(contextBMSData);\n        }\n    }[\"useBMSData.useEffect\"], [\n        contextBMSData\n    ]);\n    // Update BMS data\n    const updateBMSData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useBMSData.useCallback[updateBMSData]\": async (newData)=>{\n            if (!connected) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Not connected to charging system');\n                return false;\n            }\n            try {\n                const updatedData = {\n                    ...bmsData,\n                    ...newData\n                };\n                sendMessage({\n                    type: 'updateBMSData',\n                    data: updatedData\n                });\n                setBMSData(updatedData);\n                return true;\n            } catch (error) {\n                console.error('Error updating BMS data:', error);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Failed to update BMS data');\n                return false;\n            }\n        }\n    }[\"useBMSData.useCallback[updateBMSData]\"], [\n        connected,\n        sendMessage,\n        bmsData\n    ]);\n    // Reset BMS data\n    const resetBMSData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useBMSData.useCallback[resetBMSData]\": ()=>{\n            if (!connected) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Not connected to charging system');\n                return;\n            }\n            try {\n                const resetData = {\n                    voltage: 0,\n                    current: 0,\n                    SOC: 15,\n                    isReceiverCoilDetected: false,\n                    isFOD: false,\n                    // targetSOC: 0,\n                    isMiss: false\n                };\n                sendMessage({\n                    type: 'resetBMSData',\n                    data: resetData\n                });\n                setBMSData(resetData);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success('BMS data reset');\n            } catch (error) {\n                console.error('Error resetting BMS data:', error);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Failed to reset BMS data');\n            }\n        }\n    }[\"useBMSData.useCallback[resetBMSData]\"], [\n        connected,\n        sendMessage\n    ]);\n    // Monitor receiver coil detection\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useBMSData.useEffect\": ()=>{\n            if (bmsData.isReceiverCoilDetected) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success('Receiver coil detected');\n            } else if (bmsData.isReceiverCoilDetected === false) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error('Receiver coil not detected');\n            }\n        }\n    }[\"useBMSData.useEffect\"], [\n        bmsData.isReceiverCoilDetected\n    ]);\n    // Calculate charging power\n    const calculateChargingPower = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useBMSData.useCallback[calculateChargingPower]\": ()=>{\n            return bmsData.voltage * bmsData.current;\n        }\n    }[\"useBMSData.useCallback[calculateChargingPower]\"], [\n        bmsData.voltage,\n        bmsData.current\n    ]);\n    return {\n        bmsData,\n        updateBMSData,\n        resetBMSData,\n        isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n        isFOD: bmsData.isFOD,\n        isMiss: bmsData.isMiss,\n        chargingPower: calculateChargingPower()\n    };\n} // soc\n // \"use client\";\n // import { useState, useEffect, useCallback } from 'react';\n // import { useWebSocket } from '../contexts/WebSocketContext';\n // import { toast } from 'sonner';\n // interface BMSData {\n //   voltage: number;\n //   current: number;\n //   SOC: number;\n //   isReceiverCoilDetected: boolean;\n //   isFOD: boolean;\n //   isMiss: boolean;\n // }\n // export function useBMSData() {\n //   const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = useWebSocket();\n //   const [bmsData, setBMSData] = useState<BMSData>({\n //     voltage: 0,\n //     current: 0,\n //     SOC: 15,\n //     isReceiverCoilDetected: false,\n //     isFOD: false,\n //     isMiss: false,\n //   });\n //   // Update BMS data when receiving new messages\n //   useEffect(() => {\n //     if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n //       setBMSData(lastMessage.data as BMSData);\n //     }\n //   }, [lastMessage]);\n //   // Sync with context BMS data\n //   useEffect(() => {\n //     setBMSData(contextBMSData);\n //   }, [contextBMSData]);\n //   // Update BMS data\n //   const updateBMSData = useCallback(async (newData: Partial<BMSData>): Promise<boolean> => {\n //     if (!connected) {\n //       toast.error('Not connected to charging system');\n //       return false;\n //     }\n //     try {\n //       const updatedData = {\n //         ...bmsData,\n //         ...newData,\n //       };\n //       sendMessage({\n //         type: 'updateBMSData',\n //         data: updatedData,\n //       });\n //       setBMSData(updatedData);\n //       return true;\n //     } catch (error) {\n //       console.error('Error updating BMS data:', error);\n //       toast.error('Failed to update BMS data');\n //       return false;\n //     }\n //   }, [connected, sendMessage, bmsData]);\n //   // Reset BMS data\n //   const resetBMSData = useCallback(() => {\n //     if (!connected) {\n //       toast.error('Not connected to charging system');\n //       return;\n //     }\n //     try {\n //       const resetData: BMSData = {\n //         voltage: 0,\n //         current: 0,\n //         SOC: 15,\n //         isReceiverCoilDetected: false,\n //         isFOD: false,\n //         isMiss: false,\n //       };\n //       sendMessage({\n //         type: 'resetBMSData',\n //         data: resetData,\n //       });\n //       setBMSData(resetData);\n //       toast.success('BMS data reset');\n //     } catch (error) {\n //       console.error('Error resetting BMS data:', error);\n //       toast.error('Failed to reset BMS data');\n //     }\n //   }, [connected, sendMessage]);\n //   // Monitor receiver coil detection\n //   useEffect(() => {\n //     if (bmsData.isReceiverCoilDetected) {\n //       toast.success('Receiver coil detected');\n //     } else if (bmsData.isReceiverCoilDetected === false) {\n //       toast.error('Receiver coil not detected');\n //     }\n //   }, [bmsData.isReceiverCoilDetected]);\n //   // Calculate charging power\n //   const calculateChargingPower = useCallback((): number => {\n //     return bmsData.voltage * bmsData.current;\n //   }, [bmsData.voltage, bmsData.current]);\n //   return {\n //     bmsData,\n //     updateBMSData,\n //     resetBMSData,\n //     isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n //     isFOD: bmsData.isFOD,\n //     isMiss: bmsData.isMiss,\n //     chargingPower: calculateChargingPower(),\n //   };\n // }\n //soc\n // \"use client\";\n // import { useState, useEffect, useCallback } from 'react';\n // import { useWebSocket } from '../contexts/WebSocketContext';\n // import { toast } from 'sonner';\n // interface BMSData {\n //   voltage: number;\n //   current: number;\n //   SOC: number;\n //   targetSOC: number; // ✅ Added targetSOC\n //   isReceiverCoilDetected: boolean;\n //   isFOD: boolean;\n //   isMiss: boolean;\n // }\n // export function useBMSData() {\n //   const { sendMessage, lastMessage, connected, bmsData: contextBMSData } = useWebSocket();\n //   const [bmsData, setBMSData] = useState<BMSData>({\n //     voltage: 0,\n //     current: 0,\n //     SOC: 15,\n //     targetSOC: 100, // ✅ Default value\n //     isReceiverCoilDetected: false,\n //     isFOD: false,\n //     isMiss: false,\n //   });\n //   // Update BMS data when receiving new messages\n //   useEffect(() => {\n //     if (lastMessage?.type === 'bms_data' && lastMessage.data) {\n //       setBMSData(lastMessage.data as BMSData);\n //     }\n //   }, [lastMessage]);\n //   // Sync with context BMS data\n //   useEffect(() => {\n //     setBMSData(contextBMSData);\n //   }, [contextBMSData]);\n //   // Update BMS data (including targetSOC)\n //   const updateBMSData = useCallback(async (newData: Partial<BMSData>): Promise<boolean> => {\n //     if (!connected) {\n //       toast.error('Not connected to charging system');\n //       return false;\n //     }\n //     try {\n //       const updatedData = {\n //         ...bmsData,\n //         ...newData,\n //       };\n //       // Use a consistent message type for bms_data\n //       sendMessage({\n //         type: 'bms_data',\n //         data: updatedData,\n //       });\n //       setBMSData(updatedData);\n //       return true;\n //     } catch (error) {\n //       console.error('Error updating BMS data:', error);\n //       toast.error('Failed to update BMS data');\n //       return false;\n //     }\n //   }, [connected, sendMessage, bmsData]);\n //   // Reset BMS data\n //   const resetBMSData = useCallback(() => {\n //     if (!connected) {\n //       toast.error('Not connected to charging system');\n //       return;\n //     }\n //     try {\n //       const resetData: BMSData = {\n //         voltage: 0,\n //         current: 0,\n //         SOC: 15,\n //         targetSOC: 100,\n //         isReceiverCoilDetected: false,\n //         isFOD: false,\n //         isMiss: false,\n //       };\n //       sendMessage({\n //         type: 'bms_data',\n //         data: resetData,\n //       });\n //       setBMSData(resetData);\n //       toast.success('BMS data reset');\n //     } catch (error) {\n //       console.error('Error resetting BMS data:', error);\n //       toast.error('Failed to reset BMS data');\n //     }\n //   }, [connected, sendMessage]);\n //   // Monitor receiver coil detection\n //   useEffect(() => {\n //     if (bmsData.isReceiverCoilDetected) {\n //       toast.success('Receiver coil detected');\n //     } else if (bmsData.isReceiverCoilDetected === false) {\n //       toast.error('Receiver coil not detected');\n //     }\n //   }, [bmsData.isReceiverCoilDetected]);\n //   // Calculate charging power\n //   const calculateChargingPower = useCallback((): number => {\n //     return bmsData.voltage * bmsData.current;\n //   }, [bmsData.voltage, bmsData.current]);\n //   return {\n //     bmsData,\n //     updateBMSData,\n //     resetBMSData,\n //     isReceiverCoilDetected: bmsData.isReceiverCoilDetected,\n //     isFOD: bmsData.isFOD,\n //     isMiss: bmsData.isMiss,\n //     chargingPower: calculateChargingPower(),\n //   };\n // }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./hooks/useBMSData.ts\n");

/***/ }),

/***/ "(ssr)/./hooks/useChargingStatus.ts":
/*!************************************!*\
  !*** ./hooks/useChargingStatus.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useChargingStatus: () => (/* binding */ useChargingStatus)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../contexts/WebSocketContext */ \"(ssr)/./contexts/WebSocketContext.tsx\");\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sonner */ \"(ssr)/./node_modules/sonner/dist/index.mjs\");\n// \"use client\"\n// import { useState, useEffect, useCallback } from \"react\";\n// import { useWebSocket } from \"../contexts/WebSocketContext\";\n// import { toast } from \"sonner\";\n// export function useChargingStatus() {\n//   const { sendMessage, lastMessage, connected } = useWebSocket();\n//   const [isChargingInitialized, setIsChargingInitialized] = useState(false);\n//   useEffect(() => {\n//     if (!lastMessage?.data) return;\n//     try {\n//       const data = typeof lastMessage.data === \"string\" ? JSON.parse(lastMessage.data) : lastMessage.data;\n//       console.log(\"received websocket data\", data);\n//       if (typeof data.isChargingInitialized === \"boolean\") {\n//         setIsChargingInitialized(data.isChargingInitialized);\n//       }\n//     } catch (error) {\n//       console.error(\"error parsing websocket message\", error);\n//     }\n//   }, [lastMessage]); //YEH MESSAGE READ KRTEA HAI\n//   const updateChargingStatus = useCallback(\n//     async (isCharging: boolean): Promise<boolean> => {\n//       if (!connected) {\n//         toast.error(\"not connected to charging system\")\n//         return false;\n//       }\n//       try {\n//         console.log(\"sending charging status update\", { isCharging });\n//         sendMessage({\n//           type: \"charging_status\",\n//           data: { isCharging: isCharging }, ///YEH MESSAGES BHETET HAI\n//         });\n//         setIsChargingInitialized(isCharging);\n//         return true;\n//       } catch (error) {\n//         console.error(\"error updating charging status\", error);\n//         toast.error(\"failed to update charging status\");\n//         return false;\n//       }\n//     }, [connected, sendMessage, setIsChargingInitialized]\n//   );\n//   return {\n//     isChargingInitialized,\n//     updateChargingStatus,\n//   };\n// }\n//FALSE CHARGING\n/* __next_internal_client_entry_do_not_use__ useChargingStatus auto */ \n\n\nfunction useChargingStatus() {\n    const { sendMessage, lastMessage, connected } = (0,_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_1__.useWebSocket)();\n    const [isChargingInitialized, setIsChargingInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useChargingStatus.useEffect\": ()=>{\n            if (!lastMessage?.data) return;\n            try {\n                const data = typeof lastMessage.data === \"string\" ? JSON.parse(lastMessage.data) : lastMessage.data;\n                console.log(\"Received WebSocket Data:\", data);\n                if (typeof data.isCharging === \"boolean\") {\n                    setIsChargingInitialized(data.isCharging);\n                }\n            } catch (error) {\n                console.error(\"Error parsing WebSocket message:\", error);\n            }\n        }\n    }[\"useChargingStatus.useEffect\"], [\n        lastMessage\n    ]);\n    const updateChargingStatus = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useChargingStatus.useCallback[updateChargingStatus]\": async (isCharging)=>{\n            if (!connected) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Not connected to charging system\");\n                return false;\n            }\n            try {\n                console.log(\"Sending charging status update:\", {\n                    isCharging\n                });\n                // Update local state\n                setIsChargingInitialized(isCharging);\n                // Send message to WebSocketContext\n                sendMessage({\n                    type: \"charging_status\",\n                    data: {\n                        isCharging\n                    }\n                });\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success(isCharging ? \"Charging started\" : \"Charging stopped\");\n                return true;\n            } catch (error) {\n                console.error(\"Error updating charging status:\", error);\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"Failed to update charging status\");\n                return false;\n            }\n        }\n    }[\"useChargingStatus.useCallback[updateChargingStatus]\"], [\n        connected,\n        sendMessage,\n        setIsChargingInitialized\n    ]);\n    return {\n        isChargingInitialized,\n        updateChargingStatus\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ob29rcy91c2VDaGFyZ2luZ1N0YXR1cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUNBLGVBQWU7QUFDZiw0REFBNEQ7QUFDNUQsK0RBQStEO0FBQy9ELGtDQUFrQztBQUVsQyx3Q0FBd0M7QUFDeEMsb0VBQW9FO0FBQ3BFLCtFQUErRTtBQUUvRSxzQkFBc0I7QUFDdEIsc0NBQXNDO0FBQ3RDLFlBQVk7QUFDWiw2R0FBNkc7QUFDN0csc0RBQXNEO0FBRXRELCtEQUErRDtBQUMvRCxnRUFBZ0U7QUFDaEUsVUFBVTtBQUNWLHdCQUF3QjtBQUN4QixpRUFBaUU7QUFDakUsUUFBUTtBQUNSLG9EQUFvRDtBQUVwRCw4Q0FBOEM7QUFDOUMseURBQXlEO0FBQ3pELDBCQUEwQjtBQUMxQiwwREFBMEQ7QUFDMUQsd0JBQXdCO0FBQ3hCLFVBQVU7QUFFVixjQUFjO0FBQ2QseUVBQXlFO0FBQ3pFLHdCQUF3QjtBQUN4QixxQ0FBcUM7QUFDckMseUVBQXlFO0FBQ3pFLGNBQWM7QUFFZCxnREFBZ0Q7QUFDaEQsdUJBQXVCO0FBRXZCLDBCQUEwQjtBQUMxQixrRUFBa0U7QUFDbEUsMkRBQTJEO0FBQzNELHdCQUF3QjtBQUN4QixVQUFVO0FBQ1YsNERBQTREO0FBRTVELE9BQU87QUFFUCxhQUFhO0FBQ2IsNkJBQTZCO0FBQzdCLDRCQUE0QjtBQUU1QixPQUFPO0FBQ1AsSUFBSTtBQUVKLGdCQUFnQjt1RUFFeUM7QUFDRztBQUM3QjtBQUV4QixTQUFTSztJQUNkLE1BQU0sRUFBRUMsV0FBVyxFQUFFQyxXQUFXLEVBQUVDLFNBQVMsRUFBRSxHQUFHTCx3RUFBWUE7SUFDNUQsTUFBTSxDQUFDTSx1QkFBdUJDLHlCQUF5QixHQUFHViwrQ0FBUUEsQ0FBQztJQUVuRUMsZ0RBQVNBO3VDQUFDO1lBQ1IsSUFBSSxDQUFDTSxhQUFhSSxNQUFNO1lBQ3hCLElBQUk7Z0JBQ0YsTUFBTUEsT0FBTyxPQUFPSixZQUFZSSxJQUFJLEtBQUssV0FBV0MsS0FBS0MsS0FBSyxDQUFDTixZQUFZSSxJQUFJLElBQUlKLFlBQVlJLElBQUk7Z0JBQ25HRyxRQUFRQyxHQUFHLENBQUMsNEJBQTRCSjtnQkFFeEMsSUFBSSxPQUFPQSxLQUFLSyxVQUFVLEtBQUssV0FBVztvQkFDeENOLHlCQUF5QkMsS0FBS0ssVUFBVTtnQkFDMUM7WUFDRixFQUFFLE9BQU9DLE9BQU87Z0JBQ2RILFFBQVFHLEtBQUssQ0FBQyxvQ0FBb0NBO1lBQ3BEO1FBQ0Y7c0NBQUc7UUFBQ1Y7S0FBWTtJQUVoQixNQUFNVyx1QkFBdUJoQixrREFBV0E7K0RBQ3RDLE9BQU9jO1lBQ0wsSUFBSSxDQUFDUixXQUFXO2dCQUNkSix5Q0FBS0EsQ0FBQ2EsS0FBSyxDQUFDO2dCQUNaLE9BQU87WUFDVDtZQUVBLElBQUk7Z0JBQ0ZILFFBQVFDLEdBQUcsQ0FBQyxtQ0FBbUM7b0JBQUVDO2dCQUFXO2dCQUU1RCxxQkFBcUI7Z0JBQ3JCTix5QkFBeUJNO2dCQUV6QixtQ0FBbUM7Z0JBQ25DVixZQUFZO29CQUNWYSxNQUFNO29CQUNOUixNQUFNO3dCQUFFSztvQkFBVztnQkFDckI7Z0JBRUFaLHlDQUFLQSxDQUFDZ0IsT0FBTyxDQUFDSixhQUFhLHFCQUFxQjtnQkFDaEQsT0FBTztZQUNULEVBQUUsT0FBT0MsT0FBTztnQkFDZEgsUUFBUUcsS0FBSyxDQUFDLG1DQUFtQ0E7Z0JBQ2pEYix5Q0FBS0EsQ0FBQ2EsS0FBSyxDQUFDO2dCQUNaLE9BQU87WUFDVDtRQUNGOzhEQUNBO1FBQUNUO1FBQVdGO1FBQWFJO0tBQXlCO0lBR3BELE9BQU87UUFDTEQ7UUFDQVM7SUFDRjtBQUNGIiwic291cmNlcyI6WyJEOlxcY29kaW5nXFxkYXNoIGR5bmFtaWNzXFxkYXNoYm9hcmRzXFxMb2NhbGJhY2tlbmRcXGNoYXJnaW5nLXN5c3RlbVxcaG9va3NcXHVzZUNoYXJnaW5nU3RhdHVzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG4vLyBcInVzZSBjbGllbnRcIlxyXG4vLyBpbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VDYWxsYmFjayB9IGZyb20gXCJyZWFjdFwiO1xyXG4vLyBpbXBvcnQgeyB1c2VXZWJTb2NrZXQgfSBmcm9tIFwiLi4vY29udGV4dHMvV2ViU29ja2V0Q29udGV4dFwiO1xyXG4vLyBpbXBvcnQgeyB0b2FzdCB9IGZyb20gXCJzb25uZXJcIjtcclxuXHJcbi8vIGV4cG9ydCBmdW5jdGlvbiB1c2VDaGFyZ2luZ1N0YXR1cygpIHtcclxuLy8gICBjb25zdCB7IHNlbmRNZXNzYWdlLCBsYXN0TWVzc2FnZSwgY29ubmVjdGVkIH0gPSB1c2VXZWJTb2NrZXQoKTtcclxuLy8gICBjb25zdCBbaXNDaGFyZ2luZ0luaXRpYWxpemVkLCBzZXRJc0NoYXJnaW5nSW5pdGlhbGl6ZWRdID0gdXNlU3RhdGUoZmFsc2UpO1xyXG5cclxuLy8gICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4vLyAgICAgaWYgKCFsYXN0TWVzc2FnZT8uZGF0YSkgcmV0dXJuO1xyXG4vLyAgICAgdHJ5IHtcclxuLy8gICAgICAgY29uc3QgZGF0YSA9IHR5cGVvZiBsYXN0TWVzc2FnZS5kYXRhID09PSBcInN0cmluZ1wiID8gSlNPTi5wYXJzZShsYXN0TWVzc2FnZS5kYXRhKSA6IGxhc3RNZXNzYWdlLmRhdGE7XHJcbi8vICAgICAgIGNvbnNvbGUubG9nKFwicmVjZWl2ZWQgd2Vic29ja2V0IGRhdGFcIiwgZGF0YSk7XHJcblxyXG4vLyAgICAgICBpZiAodHlwZW9mIGRhdGEuaXNDaGFyZ2luZ0luaXRpYWxpemVkID09PSBcImJvb2xlYW5cIikge1xyXG4vLyAgICAgICAgIHNldElzQ2hhcmdpbmdJbml0aWFsaXplZChkYXRhLmlzQ2hhcmdpbmdJbml0aWFsaXplZCk7XHJcbi8vICAgICAgIH1cclxuLy8gICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbi8vICAgICAgIGNvbnNvbGUuZXJyb3IoXCJlcnJvciBwYXJzaW5nIHdlYnNvY2tldCBtZXNzYWdlXCIsIGVycm9yKTtcclxuLy8gICAgIH1cclxuLy8gICB9LCBbbGFzdE1lc3NhZ2VdKTsgLy9ZRUggTUVTU0FHRSBSRUFEIEtSVEVBIEhBSVxyXG4gIFxyXG4vLyAgIGNvbnN0IHVwZGF0ZUNoYXJnaW5nU3RhdHVzID0gdXNlQ2FsbGJhY2soXHJcbi8vICAgICBhc3luYyAoaXNDaGFyZ2luZzogYm9vbGVhbik6IFByb21pc2U8Ym9vbGVhbj4gPT4ge1xyXG4vLyAgICAgICBpZiAoIWNvbm5lY3RlZCkge1xyXG4vLyAgICAgICAgIHRvYXN0LmVycm9yKFwibm90IGNvbm5lY3RlZCB0byBjaGFyZ2luZyBzeXN0ZW1cIilcclxuLy8gICAgICAgICByZXR1cm4gZmFsc2U7XHJcbi8vICAgICAgIH1cclxuXHJcbi8vICAgICAgIHRyeSB7XHJcbi8vICAgICAgICAgY29uc29sZS5sb2coXCJzZW5kaW5nIGNoYXJnaW5nIHN0YXR1cyB1cGRhdGVcIiwgeyBpc0NoYXJnaW5nIH0pO1xyXG4vLyAgICAgICAgIHNlbmRNZXNzYWdlKHtcclxuLy8gICAgICAgICAgIHR5cGU6IFwiY2hhcmdpbmdfc3RhdHVzXCIsXHJcbi8vICAgICAgICAgICBkYXRhOiB7IGlzQ2hhcmdpbmc6IGlzQ2hhcmdpbmcgfSwgLy8vWUVIIE1FU1NBR0VTIEJIRVRFVCBIQUlcclxuLy8gICAgICAgICB9KTtcclxuXHJcbi8vICAgICAgICAgc2V0SXNDaGFyZ2luZ0luaXRpYWxpemVkKGlzQ2hhcmdpbmcpO1xyXG4vLyAgICAgICAgIHJldHVybiB0cnVlO1xyXG5cclxuLy8gICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgICAgICBjb25zb2xlLmVycm9yKFwiZXJyb3IgdXBkYXRpbmcgY2hhcmdpbmcgc3RhdHVzXCIsIGVycm9yKTtcclxuLy8gICAgICAgICB0b2FzdC5lcnJvcihcImZhaWxlZCB0byB1cGRhdGUgY2hhcmdpbmcgc3RhdHVzXCIpO1xyXG4vLyAgICAgICAgIHJldHVybiBmYWxzZTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfSwgW2Nvbm5lY3RlZCwgc2VuZE1lc3NhZ2UsIHNldElzQ2hhcmdpbmdJbml0aWFsaXplZF1cclxuXHJcbi8vICAgKTtcclxuXHJcbi8vICAgcmV0dXJuIHtcclxuLy8gICAgIGlzQ2hhcmdpbmdJbml0aWFsaXplZCxcclxuLy8gICAgIHVwZGF0ZUNoYXJnaW5nU3RhdHVzLFxyXG4gICBcclxuLy8gICB9O1xyXG4vLyB9XHJcblxyXG4vL0ZBTFNFIENIQVJHSU5HXHJcblwidXNlIGNsaWVudFwiXHJcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZUNhbGxiYWNrIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IHVzZVdlYlNvY2tldCB9IGZyb20gXCIuLi9jb250ZXh0cy9XZWJTb2NrZXRDb250ZXh0XCI7XHJcbmltcG9ydCB7IHRvYXN0IH0gZnJvbSBcInNvbm5lclwiO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZUNoYXJnaW5nU3RhdHVzKCkge1xyXG4gIGNvbnN0IHsgc2VuZE1lc3NhZ2UsIGxhc3RNZXNzYWdlLCBjb25uZWN0ZWQgfSA9IHVzZVdlYlNvY2tldCgpO1xyXG4gIGNvbnN0IFtpc0NoYXJnaW5nSW5pdGlhbGl6ZWQsIHNldElzQ2hhcmdpbmdJbml0aWFsaXplZF0gPSB1c2VTdGF0ZShmYWxzZSk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoIWxhc3RNZXNzYWdlPy5kYXRhKSByZXR1cm47XHJcbiAgICB0cnkge1xyXG4gICAgICBjb25zdCBkYXRhID0gdHlwZW9mIGxhc3RNZXNzYWdlLmRhdGEgPT09IFwic3RyaW5nXCIgPyBKU09OLnBhcnNlKGxhc3RNZXNzYWdlLmRhdGEpIDogbGFzdE1lc3NhZ2UuZGF0YTtcclxuICAgICAgY29uc29sZS5sb2coXCJSZWNlaXZlZCBXZWJTb2NrZXQgRGF0YTpcIiwgZGF0YSk7XHJcblxyXG4gICAgICBpZiAodHlwZW9mIGRhdGEuaXNDaGFyZ2luZyA9PT0gXCJib29sZWFuXCIpIHtcclxuICAgICAgICBzZXRJc0NoYXJnaW5nSW5pdGlhbGl6ZWQoZGF0YS5pc0NoYXJnaW5nKTtcclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHBhcnNpbmcgV2ViU29ja2V0IG1lc3NhZ2U6XCIsIGVycm9yKTtcclxuICAgIH1cclxuICB9LCBbbGFzdE1lc3NhZ2VdKTtcclxuXHJcbiAgY29uc3QgdXBkYXRlQ2hhcmdpbmdTdGF0dXMgPSB1c2VDYWxsYmFjayhcclxuICAgIGFzeW5jIChpc0NoYXJnaW5nOiBib29sZWFuKTogUHJvbWlzZTxib29sZWFuPiA9PiB7XHJcbiAgICAgIGlmICghY29ubmVjdGVkKSB7XHJcbiAgICAgICAgdG9hc3QuZXJyb3IoXCJOb3QgY29ubmVjdGVkIHRvIGNoYXJnaW5nIHN5c3RlbVwiKTtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJTZW5kaW5nIGNoYXJnaW5nIHN0YXR1cyB1cGRhdGU6XCIsIHsgaXNDaGFyZ2luZyB9KTtcclxuXHJcbiAgICAgICAgLy8gVXBkYXRlIGxvY2FsIHN0YXRlXHJcbiAgICAgICAgc2V0SXNDaGFyZ2luZ0luaXRpYWxpemVkKGlzQ2hhcmdpbmcpO1xyXG5cclxuICAgICAgICAvLyBTZW5kIG1lc3NhZ2UgdG8gV2ViU29ja2V0Q29udGV4dFxyXG4gICAgICAgIHNlbmRNZXNzYWdlKHtcclxuICAgICAgICAgIHR5cGU6IFwiY2hhcmdpbmdfc3RhdHVzXCIsXHJcbiAgICAgICAgICBkYXRhOiB7IGlzQ2hhcmdpbmcgfSxcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdG9hc3Quc3VjY2Vzcyhpc0NoYXJnaW5nID8gXCJDaGFyZ2luZyBzdGFydGVkXCIgOiBcIkNoYXJnaW5nIHN0b3BwZWRcIik7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkVycm9yIHVwZGF0aW5nIGNoYXJnaW5nIHN0YXR1czpcIiwgZXJyb3IpO1xyXG4gICAgICAgIHRvYXN0LmVycm9yKFwiRmFpbGVkIHRvIHVwZGF0ZSBjaGFyZ2luZyBzdGF0dXNcIik7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgW2Nvbm5lY3RlZCwgc2VuZE1lc3NhZ2UsIHNldElzQ2hhcmdpbmdJbml0aWFsaXplZF1cclxuICApO1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgaXNDaGFyZ2luZ0luaXRpYWxpemVkLFxyXG4gICAgdXBkYXRlQ2hhcmdpbmdTdGF0dXMsXHJcbiAgfTtcclxufVxyXG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VDYWxsYmFjayIsInVzZVdlYlNvY2tldCIsInRvYXN0IiwidXNlQ2hhcmdpbmdTdGF0dXMiLCJzZW5kTWVzc2FnZSIsImxhc3RNZXNzYWdlIiwiY29ubmVjdGVkIiwiaXNDaGFyZ2luZ0luaXRpYWxpemVkIiwic2V0SXNDaGFyZ2luZ0luaXRpYWxpemVkIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsImNvbnNvbGUiLCJsb2ciLCJpc0NoYXJnaW5nIiwiZXJyb3IiLCJ1cGRhdGVDaGFyZ2luZ1N0YXR1cyIsInR5cGUiLCJzdWNjZXNzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./hooks/useChargingStatus.ts\n");

/***/ }),

/***/ "(ssr)/./src/app/done/page.tsx":
/*!*******************************!*\
  !*** ./src/app/done/page.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/image */ \"(ssr)/./node_modules/next/dist/api/image.js\");\n/* harmony import */ var _hooks_useBMSData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../hooks/useBMSData */ \"(ssr)/./hooks/useBMSData.ts\");\n/* harmony import */ var _hooks_useChargingStatus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../hooks/useChargingStatus */ \"(ssr)/./hooks/useChargingStatus.ts\");\n// \"use client\";\n// import React, { useEffect, useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import Image from \"next/image\";\n// import { useBMSData } from \"../../../hooks/useBMSData\";\n// import { useChargingStatus } from \"../../../hooks/useChargingStatus\";\n// const Page = () => {\n//   const router = useRouter();\n//   const { isChargingInitialized, updateChargingStatus } = useChargingStatus();\n//   const { bmsData } = useBMSData(); // Assuming BMS data provides battery and coil status\n//   const [isReceiverCoilDetected, setIsReceiverCoilDetected] = useState(true);\n//   useEffect(() => {\n//     if (bmsData) {\n//       const isCoilDetected = bmsData.isReceiverCoilDetected;\n//       setIsReceiverCoilDetected(isCoilDetected);\n//       if (!isCoilDetected) {\n//         resetCoilAndRedirect();\n//       }\n//     }\n//     const timer = setTimeout(() => {\n//       resetCoilAndRedirect();\n//     }, 10000);\n//     return () => clearTimeout(timer);\n//   }, [bmsData, router]);\n//   const resetCoilAndRedirect = async () => {\n//     await updateChargingStatus(false);\n//     router.push(\"/\");\n//   };\n//   return (\n//     <div\n//       className=\"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\"\n//       style={{\n//         backgroundImage: \"url(/main-bg.png)\",\n//         backgroundSize: \"cover\",\n//         backgroundPosition: \"center\",\n//       }}\n//     >\n//       <div className=\"flex flex-col justify-center items-center p-1 pt-24 w-full px-8 gap-6\">\n//         <div className=\"flex justify-center items-center w-32 h-32 bg-green-500 rounded-full drop-shadow-[0_0_15px_rgba(34,197,94,0.7)]\">\n//           <svg\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//             className=\"w-16 h-16 text-white\"\n//             fill=\"none\"\n//             viewBox=\"0 0 24 24\"\n//             stroke=\"currentColor\"\n//             strokeWidth={2}\n//           >\n//             <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M5 13l4 4L19 7\" />\n//           </svg>\n//         </div>\n//         <div className=\"text-green-500 text-5xl font-bold tracking-wider drop-shadow-[0_0_10px_rgba(34,197,94,0.5)]\">\n//           THANKS FOR CHARGING\n//         </div>\n//         <div className=\"text-green-400/80 text-xl mt-2\">\n//           Your vehicle is ready to go!\n//         </div>\n//         <div className=\"pt-12\">\n//           <Image\n//             src=\"/charge-bike.png\"\n//             alt=\"Charger pad\"\n//             width={700}\n//             height={500}\n//             className=\"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n//           />\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n// export default Page;\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\n\n\n\nconst Page = ()=>{\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const { updateChargingStatus } = (0,_hooks_useChargingStatus__WEBPACK_IMPORTED_MODULE_5__.useChargingStatus)();\n    const { bmsData } = (0,_hooks_useBMSData__WEBPACK_IMPORTED_MODULE_4__.useBMSData)();\n    const [isReceiverCoilDetected, setIsReceiverCoilDetected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            if (bmsData) {\n                // setIsReceiverCoilDetected(bmsData.isReceiverCoilDetected);\n                setIsReceiverCoilDetected(bmsData.isReceiverCoilDetected ?? false);\n            }\n        }\n    }[\"Page.useEffect\"], [\n        bmsData\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Page.useEffect\": ()=>{\n            const redirectToHome = {\n                \"Page.useEffect.redirectToHome\": async ()=>{\n                    // await updateChargingStatus(false);\n                    router.replace(\"/\");\n                }\n            }[\"Page.useEffect.redirectToHome\"];\n            const timer = setTimeout(redirectToHome, 10000); // Redirect after 10 seconds\n            return ({\n                \"Page.useEffect\": ()=>clearTimeout(timer)\n            })[\"Page.useEffect\"]; // Cleanup on unmount\n        }\n    }[\"Page.useEffect\"], [\n        router,\n        updateChargingStatus\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans pt-7\",\n        style: {\n            backgroundImage: \"url(/main-bg.png)\",\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex flex-col justify-center items-center p-1 pt-24 w-full px-8 gap-6\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"flex justify-center items-center w-32 h-32 bg-green-500 rounded-full drop-shadow-[0_0_15px_rgba(34,197,94,0.7)]\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        className: \"w-16 h-16 text-white\",\n                        fill: \"none\",\n                        viewBox: \"0 0 24 24\",\n                        stroke: \"currentColor\",\n                        strokeWidth: 2,\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            strokeLinecap: \"round\",\n                            strokeLinejoin: \"round\",\n                            d: \"M5 13l4 4L19 7\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n                            lineNumber: 132,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n                        lineNumber: 124,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n                    lineNumber: 123,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-green-500 text-5xl font-bold tracking-wider drop-shadow-[0_0_10px_rgba(34,197,94,0.5)]\",\n                    children: \"THANKS FOR CHARGING\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n                    lineNumber: 137,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"text-green-400/80 text-xl mt-2\",\n                    children: \"Your vehicle is ready to go!\"\n                }, void 0, false, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n                    lineNumber: 140,\n                    columnNumber: 9\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"pt-12\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                        src: \"/charge-bike.png\",\n                        alt: \"Charger pad\",\n                        width: 700,\n                        height: 500,\n                        className: \"drop-shadow-[0_0_15px_rgba(6,182,212,0.15)]\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n                        lineNumber: 144,\n                        columnNumber: 11\n                    }, undefined)\n                }, void 0, false, {\n                    fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n                    lineNumber: 143,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n            lineNumber: 121,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n        lineNumber: 113,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Page);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/done/page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"c7b59ee23fed\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJEOlxcY29kaW5nXFxkYXNoIGR5bmFtaWNzXFxkYXNoYm9hcmRzXFxMb2NhbGJhY2tlbmRcXGNoYXJnaW5nLXN5c3RlbVxcc3JjXFxzdHlsZXNcXGdsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiYzdiNTllZTIzZmVkXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/styles/globals.css\n");

/***/ }),

/***/ "(rsc)/./contexts/WebSocketContext.tsx":
/*!***************************************!*\
  !*** ./contexts/WebSocketContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketProvider: () => (/* binding */ WebSocketProvider),\n/* harmony export */   useWebSocket: () => (/* binding */ useWebSocket)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js\");\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);\n\nconst WebSocketProvider = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call WebSocketProvider() from the server but WebSocketProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\contexts\\\\WebSocketContext.tsx\",\n\"WebSocketProvider\",\n);const useWebSocket = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call useWebSocket() from the server but useWebSocket is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\contexts\\\\WebSocketContext.tsx\",\n\"useWebSocket\",\n);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./contexts/WebSocketContext.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/done/page.tsx":
/*!*******************************!*\
  !*** ./src/app/done/page.tsx ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js\");\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"D:\\\\\\\\coding\\\\\\\\dash dynamics\\\\\\\\dashboards\\\\\\\\Localbackend\\\\\\\\charging-system\\\\\\\\src\\\\\\\\app\\\\\\\\done\\\\\\\\page.tsx\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\done\\\\page.tsx\",\n\"default\",\n));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/done/page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sonner */ \"(rsc)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var _contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../contexts/WebSocketContext */ \"(rsc)/./contexts/WebSocketContext.tsx\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/globals.css */ \"(rsc)/./src/styles/globals.css\");\n\n\n\n // Ensure correct path\n// import localFont from \"next/font/local\";\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            className: \"bg-gray-50 text-gray-900 min-h-screen flex flex-col\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_2__.WebSocketProvider, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"max-h-screen w-full bg-black flex items-center justify-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative w-[768px] h-[1024px] overflow-hidden\",\n                            children: children\n                        }, void 0, false, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                            lineNumber: 19,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(sonner__WEBPACK_IMPORTED_MODULE_1__.Toaster, {}, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 24,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 16,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n            lineNumber: 15,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n        lineNumber: 14,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVpQztBQUNtQztBQUNyQyxDQUFDLHNCQUFzQjtBQUN0RCwyQ0FBMkM7QUFFNUIsU0FBU0UsV0FBVyxFQUNqQ0MsUUFBUSxFQUdUO0lBQ0MscUJBQ0UsOERBQUNDO1FBQUtDLE1BQUs7a0JBQ1QsNEVBQUNDO1lBQUtDLFdBQVU7c0JBQ2QsNEVBQUNOLHlFQUFpQkE7O2tDQUVoQiw4REFBQ087d0JBQUlELFdBQVU7a0NBQ2YsNEVBQUNDOzRCQUFJRCxXQUFVO3NDQUVaSjs7Ozs7Ozs7Ozs7a0NBR0gsOERBQUNILDJDQUFPQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS2xCIiwic291cmNlcyI6WyJEOlxcY29kaW5nXFxkYXNoIGR5bmFtaWNzXFxkYXNoYm9hcmRzXFxMb2NhbGJhY2tlbmRcXGNoYXJnaW5nLXN5c3RlbVxcc3JjXFxhcHBcXGxheW91dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5pbXBvcnQgeyBUb2FzdGVyIH0gZnJvbSBcInNvbm5lclwiO1xyXG5pbXBvcnQgeyBXZWJTb2NrZXRQcm92aWRlciB9IGZyb20gXCIuLi8uLi9jb250ZXh0cy9XZWJTb2NrZXRDb250ZXh0XCI7XHJcbmltcG9ydCBcIi4uL3N0eWxlcy9nbG9iYWxzLmNzc1wiOyAvLyBFbnN1cmUgY29ycmVjdCBwYXRoXHJcbi8vIGltcG9ydCBsb2NhbEZvbnQgZnJvbSBcIm5leHQvZm9udC9sb2NhbFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUm9vdExheW91dCh7XHJcbiAgY2hpbGRyZW4sXHJcbn06IHtcclxuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xyXG59KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxodG1sIGxhbmc9XCJlblwiPlxyXG4gICAgICA8Ym9keSBjbGFzc05hbWU9XCJiZy1ncmF5LTUwIHRleHQtZ3JheS05MDAgbWluLWgtc2NyZWVuIGZsZXggZmxleC1jb2xcIj5cclxuICAgICAgICA8V2ViU29ja2V0UHJvdmlkZXI+XHJcbiAgICAgICAgICB7LyogTWFpbiBjb250YWluZXIgZm9yIHJlc3BvbnNpdmVuZXNzICovfVxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtaC1zY3JlZW4gdy1mdWxsIGJnLWJsYWNrIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlIHctWzc2OHB4XSBoLVsxMDI0cHhdIG92ZXJmbG93LWhpZGRlblwiPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAge2NoaWxkcmVufVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8VG9hc3RlciAvPlxyXG4gICAgICAgIDwvV2ViU29ja2V0UHJvdmlkZXI+XHJcbiAgICAgIDwvYm9keT5cclxuICAgIDwvaHRtbD5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJUb2FzdGVyIiwiV2ViU29ja2V0UHJvdmlkZXIiLCJSb290TGF5b3V0IiwiY2hpbGRyZW4iLCJodG1sIiwibGFuZyIsImJvZHkiLCJjbGFzc05hbWUiLCJkaXYiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/sonner","vendor-chunks/@swc"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fdone%2Fpage&page=%2Fdone%2Fpage&appPaths=%2Fdone%2Fpage&pagePath=private-next-app-dir%2Fdone%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();