/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/page";
exports.ids = ["app/page"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalError: () => (/* reexport default from dynamic */ next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default.a),\n/* harmony export */   __next_app__: () => (/* binding */ __next_app__),\n/* harmony export */   pages: () => (/* binding */ pages),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   tree: () => (/* binding */ tree)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-page/module.compiled */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/module.compiled.js?91d2\");\n/* harmony import */ var next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/client/components/error-boundary */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\");\n/* harmony import */ var next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_client_components_error_boundary__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/app-render/entry-base */ \"(rsc)/./node_modules/next/dist/server/app-render/entry-base.js\");\n/* harmony import */ var next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};\n/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__) if([\"default\",\"tree\",\"pages\",\"GlobalError\",\"__next_app__\",\"routeModule\"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => next_dist_server_app_render_entry_base__WEBPACK_IMPORTED_MODULE_3__[__WEBPACK_IMPORT_KEY__]\n/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);\nconst module0 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/layout.tsx */ \"(rsc)/./src/app/layout.tsx\"));\nconst module1 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/not-found-error */ \"(rsc)/./node_modules/next/dist/client/components/not-found-error.js\", 23));\nconst module2 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/forbidden-error */ \"(rsc)/./node_modules/next/dist/client/components/forbidden-error.js\", 23));\nconst module3 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! next/dist/client/components/unauthorized-error */ \"(rsc)/./node_modules/next/dist/client/components/unauthorized-error.js\", 23));\nconst page4 = () => Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\nconst tree = {\n        children: [\n        '',\n        {\n        children: ['__PAGE__', {}, {\n          page: [page4, \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\page.tsx\"],\n          \n        }]\n      },\n        {\n        'layout': [module0, \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\"],\n'not-found': [module1, \"next/dist/client/components/not-found-error\"],\n'forbidden': [module2, \"next/dist/client/components/forbidden-error\"],\n'unauthorized': [module3, \"next/dist/client/components/unauthorized-error\"],\n        \n      }\n      ]\n      }.children;\nconst pages = [\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\page.tsx\"];\n\n\nconst __next_app_require__ = __webpack_require__\nconst __next_app_load_chunk__ = () => Promise.resolve()\nconst __next_app__ = {\n    require: __next_app_require__,\n    loadChunk: __next_app_load_chunk__\n};\n\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_app_page_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppPageRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_PAGE,\n        page: \"/page\",\n        pathname: \"/\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: '',\n        appPaths: []\n    },\n    userland: {\n        loaderTree: tree\n    }\n});\n\n//# sourceMappingURL=app-page.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZwYWdlJnBhZ2U9JTJGcGFnZSZhcHBQYXRocz0lMkZwYWdlJnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGcGFnZS50c3gmYXBwRGlyPUQlM0ElNUNjb2RpbmclNUNkYXNoJTIwZHluYW1pY3MlNUNkYXNoYm9hcmRzJTVDTG9jYWxiYWNrZW5kJTVDY2hhcmdpbmctc3lzdGVtJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1EJTNBJTVDY29kaW5nJTVDZGFzaCUyMGR5bmFtaWNzJTVDZGFzaGJvYXJkcyU1Q0xvY2FsYmFja2VuZCU1Q2NoYXJnaW5nLXN5c3RlbSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsc0JBQXNCLG9KQUErSDtBQUNySixzQkFBc0IsME5BQWdGO0FBQ3RHLHNCQUFzQiwwTkFBZ0Y7QUFDdEcsc0JBQXNCLGdPQUFtRjtBQUN6RyxvQkFBb0IsZ0pBQTZIO0FBRy9JO0FBQ3NEO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0EsU0FBUztBQUNULE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ3VCO0FBQzZEO0FBQ3BGLDZCQUE2QixtQkFBbUI7QUFDaEQ7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUN1RDtBQUN2RDtBQUNPLHdCQUF3Qix1R0FBa0I7QUFDakQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9kdWxlMCA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxcbGF5b3V0LnRzeFwiKTtcbmNvbnN0IG1vZHVsZTEgPSAoKSA9PiBpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIik7XG5jb25zdCBtb2R1bGUyID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvZm9yYmlkZGVuLWVycm9yXCIpO1xuY29uc3QgbW9kdWxlMyA9ICgpID0+IGltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL3VuYXV0aG9yaXplZC1lcnJvclwiKTtcbmNvbnN0IHBhZ2U0ID0gKCkgPT4gaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcc3JjXFxcXGFwcFxcXFxwYWdlLnRzeFwiKTtcbmltcG9ydCB7IEFwcFBhZ2VSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvYXBwLXBhZ2UvbW9kdWxlLmNvbXBpbGVkXCIgd2l0aCB7XG4gICAgJ3R1cmJvcGFjay10cmFuc2l0aW9uJzogJ25leHQtc3NyJ1xufTtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbi8vIFdlIGluamVjdCB0aGUgdHJlZSBhbmQgcGFnZXMgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IHRyZWUgPSB7XG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICcnLFxuICAgICAgICB7XG4gICAgICAgIGNoaWxkcmVuOiBbJ19fUEFHRV9fJywge30sIHtcbiAgICAgICAgICBwYWdlOiBbcGFnZTQsIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxccGFnZS50c3hcIl0sXG4gICAgICAgICAgXG4gICAgICAgIH1dXG4gICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICdsYXlvdXQnOiBbbW9kdWxlMCwgXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcc3JjXFxcXGFwcFxcXFxsYXlvdXQudHN4XCJdLFxuJ25vdC1mb3VuZCc6IFttb2R1bGUxLCBcIm5leHQvZGlzdC9jbGllbnQvY29tcG9uZW50cy9ub3QtZm91bmQtZXJyb3JcIl0sXG4nZm9yYmlkZGVuJzogW21vZHVsZTIsIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2ZvcmJpZGRlbi1lcnJvclwiXSxcbid1bmF1dGhvcml6ZWQnOiBbbW9kdWxlMywgXCJuZXh0L2Rpc3QvY2xpZW50L2NvbXBvbmVudHMvdW5hdXRob3JpemVkLWVycm9yXCJdLFxuICAgICAgICBcbiAgICAgIH1cbiAgICAgIF1cbiAgICAgIH0uY2hpbGRyZW47XG5jb25zdCBwYWdlcyA9IFtcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxzcmNcXFxcYXBwXFxcXHBhZ2UudHN4XCJdO1xuZXhwb3J0IHsgdHJlZSwgcGFnZXMgfTtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2xvYmFsRXJyb3IgfSBmcm9tIFwibmV4dC9kaXN0L2NsaWVudC9jb21wb25lbnRzL2Vycm9yLWJvdW5kYXJ5XCI7XG5jb25zdCBfX25leHRfYXBwX3JlcXVpcmVfXyA9IF9fd2VicGFja19yZXF1aXJlX19cbmNvbnN0IF9fbmV4dF9hcHBfbG9hZF9jaHVua19fID0gKCkgPT4gUHJvbWlzZS5yZXNvbHZlKClcbmV4cG9ydCBjb25zdCBfX25leHRfYXBwX18gPSB7XG4gICAgcmVxdWlyZTogX19uZXh0X2FwcF9yZXF1aXJlX18sXG4gICAgbG9hZENodW5rOiBfX25leHRfYXBwX2xvYWRfY2h1bmtfX1xufTtcbmV4cG9ydCAqIGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2FwcC1yZW5kZXIvZW50cnktYmFzZVwiO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUGFnZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUEFHRSxcbiAgICAgICAgcGFnZTogXCIvcGFnZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogJycsXG4gICAgICAgIGZpbGVuYW1lOiAnJyxcbiAgICAgICAgYXBwUGF0aHM6IFtdXG4gICAgfSxcbiAgICB1c2VybGFuZDoge1xuICAgICAgICBsb2FkZXJUcmVlOiB0cmVlXG4gICAgfVxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1wYWdlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./contexts/WebSocketContext.tsx */ \"(rsc)/./contexts/WebSocketContext.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/sonner/dist/index.mjs */ \"(rsc)/./node_modules/sonner/dist/index.mjs\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDY29udGV4dHMlNUMlNUNXZWJTb2NrZXRDb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMldlYlNvY2tldFByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDc29ubmVyJTVDJTVDZGlzdCU1QyU1Q2luZGV4Lm1qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRvYXN0ZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNzcmMlNUMlNUNzdHlsZXMlNUMlNUNnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQWdMO0FBQ2hMO0FBQ0Esb0xBQTZLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJXZWJTb2NrZXRQcm92aWRlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxjb250ZXh0c1xcXFxXZWJTb2NrZXRDb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVG9hc3RlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcc29ubmVyXFxcXGRpc3RcXFxcaW5kZXgubWpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./contexts/WebSocketContext.tsx */ \"(ssr)/./contexts/WebSocketContext.tsx\"));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./node_modules/sonner/dist/index.mjs */ \"(ssr)/./node_modules/sonner/dist/index.mjs\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDY29udGV4dHMlNUMlNUNXZWJTb2NrZXRDb250ZXh0LnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMldlYlNvY2tldFByb3ZpZGVyJTIyJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDc29ubmVyJTVDJTVDZGlzdCU1QyU1Q2luZGV4Lm1qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiUyMlRvYXN0ZXIlMjIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNzcmMlNUMlNUNzdHlsZXMlNUMlNUNnbG9iYWxzLmNzcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9dHJ1ZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQWdMO0FBQ2hMO0FBQ0Esb0xBQTZLIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIsIHdlYnBhY2tFeHBvcnRzOiBbXCJXZWJTb2NrZXRQcm92aWRlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxjb250ZXh0c1xcXFxXZWJTb2NrZXRDb250ZXh0LnRzeFwiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiLCB3ZWJwYWNrRXhwb3J0czogW1wiVG9hc3RlclwiXSAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcc29ubmVyXFxcXGRpc3RcXFxcaW5kZXgubWpzXCIpO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Ccontexts%5C%5CWebSocketContext.tsx%22%2C%22ids%22%3A%5B%22WebSocketProvider%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Csonner%5C%5Cdist%5C%5Cindex.mjs%22%2C%22ids%22%3A%5B%22Toaster%22%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Cstyles%5C%5Cglobals.css%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(rsc)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(rsc)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(rsc)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(rsc)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(rsc)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(rsc)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNjbGllbnQtc2VnbWVudC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2Vycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2xheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q21ldGFkYXRhLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxvT0FBdUs7QUFDdks7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSxvUkFBZ007QUFDaE07QUFDQSx3T0FBeUs7QUFDeks7QUFDQSxzUUFBd0w7QUFDeEw7QUFDQSxzT0FBd0siLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGNsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGh0dHAtYWNjZXNzLWZhbGxiYWNrXFxcXGVycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxsYXlvdXQtcm91dGVyLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxsaWJcXFxcbWV0YWRhdGFcXFxcbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!

/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-page.js */ \"(ssr)/./node_modules/next/dist/client/components/client-page.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/client-segment.js */ \"(ssr)/./node_modules/next/dist/client/components/client-segment.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js */ \"(ssr)/./node_modules/next/dist/client/components/http-access-fallback/error-boundary.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/layout-router.js */ \"(ssr)/./node_modules/next/dist/client/components/layout-router.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/client/components/render-from-template-context.js */ \"(ssr)/./node_modules/next/dist/client/components/render-from-template-context.js\", 23));\n;\nPromise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./node_modules/next/dist/lib/metadata/metadata-boundary.js */ \"(ssr)/./node_modules/next/dist/lib/metadata/metadata-boundary.js\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDY2xpZW50LXBhZ2UuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNjbGllbnQtc2VnbWVudC5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2Vycm9yLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNjbGllbnQlNUMlNUNjb21wb25lbnRzJTVDJTVDaHR0cC1hY2Nlc3MtZmFsbGJhY2slNUMlNUNlcnJvci1ib3VuZGFyeS5qcyUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZtb2R1bGVzPSU3QiUyMnJlcXVlc3QlMjIlM0ElMjJEJTNBJTVDJTVDY29kaW5nJTVDJTVDZGFzaCUyMGR5bmFtaWNzJTVDJTVDZGFzaGJvYXJkcyU1QyU1Q0xvY2FsYmFja2VuZCU1QyU1Q2NoYXJnaW5nLXN5c3RlbSU1QyU1Q25vZGVfbW9kdWxlcyU1QyU1Q25leHQlNUMlNUNkaXN0JTVDJTVDY2xpZW50JTVDJTVDY29tcG9uZW50cyU1QyU1Q2xheW91dC1yb3V0ZXIuanMlMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0QmbW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyRCUzQSU1QyU1Q2NvZGluZyU1QyU1Q2Rhc2glMjBkeW5hbWljcyU1QyU1Q2Rhc2hib2FyZHMlNUMlNUNMb2NhbGJhY2tlbmQlNUMlNUNjaGFyZ2luZy1zeXN0ZW0lNUMlNUNub2RlX21vZHVsZXMlNUMlNUNuZXh0JTVDJTVDZGlzdCU1QyU1Q2NsaWVudCU1QyU1Q2NvbXBvbmVudHMlNUMlNUNyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJm1vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDbm9kZV9tb2R1bGVzJTVDJTVDbmV4dCU1QyU1Q2Rpc3QlNUMlNUNsaWIlNUMlNUNtZXRhZGF0YSU1QyU1Q21ldGFkYXRhLWJvdW5kYXJ5LmpzJTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj10cnVlISIsIm1hcHBpbmdzIjoiQUFBQSxvT0FBdUs7QUFDdks7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSwwT0FBMEs7QUFDMUs7QUFDQSxvUkFBZ007QUFDaE07QUFDQSx3T0FBeUs7QUFDeks7QUFDQSxzUUFBd0w7QUFDeEw7QUFDQSxzT0FBd0siLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGNsaWVudC1wYWdlLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxjbGllbnQtc2VnbWVudC5qc1wiKTtcbjtcbmltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXG5vZGVfbW9kdWxlc1xcXFxuZXh0XFxcXGRpc3RcXFxcY2xpZW50XFxcXGNvbXBvbmVudHNcXFxcZXJyb3ItYm91bmRhcnkuanNcIik7XG47XG5pbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkQ6XFxcXGNvZGluZ1xcXFxkYXNoIGR5bmFtaWNzXFxcXGRhc2hib2FyZHNcXFxcTG9jYWxiYWNrZW5kXFxcXGNoYXJnaW5nLXN5c3RlbVxcXFxub2RlX21vZHVsZXNcXFxcbmV4dFxcXFxkaXN0XFxcXGNsaWVudFxcXFxjb21wb25lbnRzXFxcXGh0dHAtYWNjZXNzLWZhbGxiYWNrXFxcXGVycm9yLWJvdW5kYXJ5LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxsYXlvdXQtcm91dGVyLmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxjbGllbnRcXFxcY29tcG9uZW50c1xcXFxyZW5kZXItZnJvbS10ZW1wbGF0ZS1jb250ZXh0LmpzXCIpO1xuO1xuaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCJEOlxcXFxjb2RpbmdcXFxcZGFzaCBkeW5hbWljc1xcXFxkYXNoYm9hcmRzXFxcXExvY2FsYmFja2VuZFxcXFxjaGFyZ2luZy1zeXN0ZW1cXFxcbm9kZV9tb2R1bGVzXFxcXG5leHRcXFxcZGlzdFxcXFxsaWJcXFxcbWV0YWRhdGFcXFxcbWV0YWRhdGEtYm91bmRhcnkuanNcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-page.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cclient-segment.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Chttp-access-fallback%5C%5Cerror-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Clayout-router.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Cclient%5C%5Ccomponents%5C%5Crender-from-template-context.js%22%2C%22ids%22%3A%5B%5D%7D&modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Cnode_modules%5C%5Cnext%5C%5Cdist%5C%5Clib%5C%5Cmetadata%5C%5Cmetadata-boundary.js%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(rsc)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDcGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLGdKQUE2SCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!":
/*!********************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true! ***!
  \********************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./src/app/page.tsx */ \"(ssr)/./src/app/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWZsaWdodC1jbGllbnQtZW50cnktbG9hZGVyLmpzP21vZHVsZXM9JTdCJTIycmVxdWVzdCUyMiUzQSUyMkQlM0ElNUMlNUNjb2RpbmclNUMlNUNkYXNoJTIwZHluYW1pY3MlNUMlNUNkYXNoYm9hcmRzJTVDJTVDTG9jYWxiYWNrZW5kJTVDJTVDY2hhcmdpbmctc3lzdGVtJTVDJTVDc3JjJTVDJTVDYXBwJTVDJTVDcGFnZS50c3glMjIlMkMlMjJpZHMlMjIlM0ElNUIlNUQlN0Qmc2VydmVyPXRydWUhIiwibWFwcGluZ3MiOiJBQUFBLGdKQUE2SCIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCgvKiB3ZWJwYWNrTW9kZTogXCJlYWdlclwiICovIFwiRDpcXFxcY29kaW5nXFxcXGRhc2ggZHluYW1pY3NcXFxcZGFzaGJvYXJkc1xcXFxMb2NhbGJhY2tlbmRcXFxcY2hhcmdpbmctc3lzdGVtXFxcXHNyY1xcXFxhcHBcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22D%3A%5C%5Ccoding%5C%5Cdash%20dynamics%5C%5Cdashboards%5C%5CLocalbackend%5C%5Ccharging-system%5C%5Csrc%5C%5Capp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=true!\n");

/***/ }),

/***/ "(ssr)/./contexts/WebSocketContext.tsx":
/*!***************************************!*\
  !*** ./contexts/WebSocketContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketProvider: () => (/* binding */ WebSocketProvider),\n/* harmony export */   useWebSocket: () => (/* binding */ useWebSocket)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! sonner */ \"(ssr)/./node_modules/sonner/dist/index.mjs\");\n// \"use client\";\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\";\n// // Define WebSocket data types\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n// }\n// interface ChargingStatus {\n//   isCharging: boolean;\n// }\n// // Define WebSocket message structure\n// interface WebSocketMessage {\n//   type: string;\n//   data: BMSData | ChargingStatus;\n// }\n// // Define WebSocket context type\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void;\n//   connected: boolean;\n//   bmsData: BMSData;\n//   chargingStatus: ChargingStatus;\n//   lastMessage: WebSocketMessage | null;\n// }\n// // Create WebSocket context\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // Default data values\n// const defaultBMSData: BMSData = {\n//   voltage: 0,\n//   current: 0,\n//   SOC: 0,\n//   isReceiverCoilDetected: false,\n// };\n// const defaultChargingStatus: ChargingStatus = {\n//   isCharging: false,\n// };\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false);\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null);\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData);\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus);\n//   const ws = useRef<WebSocket | null>(null);\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n//   const connect = useCallback(() => {\n//     if (ws.current) return; // Prevent multiple WebSocket instances\n//     ws.current = new WebSocket(\"ws://localhost:8080\"); // Replace with your WebSocket server URL\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true);\n//       toast.success(\"Connected to charging system\");\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current);\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data);\n//         console.log(\"🟢 Received WebSocket Data:\", data);\n//         setLastMessage(data);\n//         switch (data.type) {\n//           case \"bms_data\":\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData);\n//             break;\n//             case \"charging_status\":\n//               const chargingData = data.data as ChargingStatus;\n//               console.log(\"⚡ Raw Charging Status Received:\", JSON.stringify(chargingData, null, 2));\n//               setChargingStatus((prev) => ({\n//                 ...prev,\n//                 ...chargingData,\n//               }));\n//               break;\n//           case \"error\":\n//             toast.error(\"⚠️ Unknown error occurred\");\n//             break;\n//           default:\n//             console.log(\"🔍 Received unknown message type:\", data);\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\");\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false);\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect();\n//       }, 3000);\n//     };\n//   }, []);\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close();\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n//     };\n//   }, [connect]);\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       ws.current.send(JSON.stringify(message));\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\");\n//     }\n//   };\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // Custom hook to use WebSocket context\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n//   }\n//   return context;\n// };\n//FALSE CHARGING\n// \"use client\";\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\";\n// // Define WebSocket data types\n// interface BMSData {\n//   voltage: number;\n//   current: number;\n//   SOC: number;\n//   isReceiverCoilDetected: boolean;\n// }\n// interface ChargingStatus {\n//   isCharging: boolean;\n// }\n// // Define WebSocket message structure\n// interface WebSocketMessage {\n//   type: string;\n//   data: BMSData | ChargingStatus;\n// }\n// // Define WebSocket context type\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void;\n//   connected: boolean;\n//   bmsData: BMSData;\n//   chargingStatus: ChargingStatus;\n//   lastMessage: WebSocketMessage | null;\n// }\n// // Create WebSocket context\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // Default data values\n// const defaultBMSData: BMSData = {\n//   voltage: 0,\n//   current: 0,\n//   SOC: 0,\n//   isReceiverCoilDetected: false,\n// };\n// const defaultChargingStatus: ChargingStatus = {\n//   isCharging: false,\n// };\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false);\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null);\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData);\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus);\n//   const ws = useRef<WebSocket | null>(null);\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n//   const connect = useCallback(() => {\n//     if (ws.current) return;\n//     ws.current = new WebSocket(\"ws://localhost:8080\");\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true);\n//       toast.success(\"Connected to charging system\");\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current);\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data);\n//         console.log(\"🟢 Received WebSocket Data:\", data);\n//         setLastMessage(data);\n//         switch (data.type) {\n//           case \"bms_data\":\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData);\n//             break;\n//           case \"charging_status\":\n//             const chargingData = data.data as ChargingStatus;\n//             console.log(\"⚡ Charging Status Received:\", JSON.stringify(chargingData, null, 2));\n//             setChargingStatus(chargingData);\n//             if (!chargingData.isCharging) {\n//               toast.info(\"Charging has been turned OFF by the user.\");\n//             } else {\n//               toast.info(\"Charging has started.\");\n//             }\n//             break;\n//           case \"error\":\n//             toast.error(\"⚠️ Unknown error occurred\");\n//             break;\n//           default:\n//             console.log(\"🔍 Received unknown message type:\", data);\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\");\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false);\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect();\n//       }, 3000);\n//     };\n//   }, []);\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close();\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n//     };\n//   }, [connect]);\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       ws.current.send(JSON.stringify(message));\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\");\n//     }\n//   };\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // Custom hook to use WebSocket context\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n//   }\n//   return context;\n// };\n///test\n// \"use client\"; // Next.js ka client component batane ke liye\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\"; // Notification dikhane ke liye\n// // ✅ WebSocket se aane wale data ka type define karna\n// interface BMSData {\n//   voltage: number; // Battery voltage\n//   current: number; // Current flow\n//   SOC: number; // Battery ka charge level (State of Charge)\n//   isReceiverCoilDetected: boolean; // Kya receiver coil detect ho rahi hai ya nahi\n// }\n// interface ChargingStatus {\n//   isCharging: boolean; // Kya charging chal rahi hai ya nahi\n// }\n// // ✅ WebSocket se aane wale message ka structure define karna\n// interface WebSocketMessage {\n//   type: string; // Message ka type batane ke liye\n//   data: BMSData | ChargingStatus | { message: string }; // Ya to BMS ka data hoga ya charging status\n// }\n// // ✅ WebSocket context ka type define karna\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void; // Message bhejne ka function\n//   connected: boolean; // Kya WebSocket connected hai ya nahi\n//   bmsData: BMSData; // Battery ka data\n//   chargingStatus: ChargingStatus; // Charging ka status\n//   lastMessage: WebSocketMessage | null; // Last message jo WebSocket se aaya\n// }\n// // ✅ WebSocket context create karna\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // ✅ Default values set karna\n// const defaultBMSData: BMSData = { voltage: 0, current: 0, SOC: 0, isReceiverCoilDetected: false };\n// const defaultChargingStatus: ChargingStatus = { isCharging: false };\n// // ✅ WebSocket Provider component banaya jisme WebSocket ka connection handle hoga\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false); // Connection ka status\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null); // Last received message\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData); // Battery data store karne ke liye\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus); // Charging status store karne ke liye\n//   const ws = useRef<WebSocket | null>(null); // WebSocket connection ka reference\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined); // Auto-reconnect ka timeout store karne ke liye\n//   // ✅ WebSocket se connection establish karne ka function\n//   const connect = useCallback(() => {\n//     if (ws.current) return; // Agar pehle se connected hai to dobara mat connect karo\n//     ws.current = new WebSocket(\"ws://localhost:8080\"); // WebSocket ka connection start karo\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true); // Connected status ko true kar do\n//       toast.success(\"Connected to charging system\"); // Notification bhejo\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current); // Agar koi reconnect timeout hai to use hata do\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       console.log(\"🔄 RAW WebSocket Data Received:\", event.data); // Received message ka log dikhana\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data); // Message ko JSON me parse karna\n//         console.log(\"✅ Parsed WebSocket Data:\", data);\n//         setLastMessage(data); // Last message ko update karna\n//         switch (data.type) {\n//           case \"bms_data\": // Agar message BMS ka data hai\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData); // BMS ka data update kar do\n//             break;\n//           case \"charging_status\": // Agar message charging status ka hai\n//             const chargingData = data.data as ChargingStatus;\n//             console.log(\"⚡ Charging Status:\", JSON.stringify(chargingData, null, 2));\n//             setChargingStatus(chargingData); // Charging status update kar do\n//             if (!chargingData.isCharging) {\n//               toast.info(\"🔴 Charging has been turned OFF.\"); // Charging band hone ka message dikhana\n//             } else {\n//               toast.success(\"⚡ Charging Started!\"); // Charging start hone ka message dikhana\n//             }\n//             break;\n//           case \"test_message\": // Server se koi test message aya\n//             console.log(\"📩 Test Message from Server:\", data.data);\n//             break;\n//           case \"error\": // Agar WebSocket error aayi\n//             toast.error(\"⚠️ WebSocket Error Received\");\n//             break;\n//           default:\n//             console.warn(\"🔍 Unknown WebSocket Message:\", data); // Agar unknown message aaye to warning do\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\"); // WebSocket error ka notification bhejna\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false); // Connection ko false kar do\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect(); // 3 second baad reconnect karne ka try karna\n//       }, 3000);\n//     };\n//   }, []);\n//   // ✅ Component jab load ho to WebSocket connection start ho\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close(); // Component unload hone par connection close kar do\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current); // Timeout clear kar do\n//     };\n//   }, [connect]);\n//   // ✅ WebSocket message bhejne ka function\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message)); // Message ka log\n//       ws.current.send(JSON.stringify(message)); // WebSocket par message bhejna\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\"); // Agar connection nahi hai to error dikhana\n//     }\n//   };\n//   // ✅ WebSocket provider return kar raha hai jo children ko wrap karega\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // ✅ Custom hook jo WebSocket context ka use karega\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\"); // Agar context nahi mila to error do\n//   }\n//   return context;\n// };\n////fod\n// \"use client\"; // Next.js ka client component batane ke liye\n// import React, { createContext, useContext, useEffect, useRef, useState, useCallback } from \"react\";\n// import { toast } from \"sonner\"; // Notification dikhane ke liye\n// // ✅ WebSocket se aane wale data ka type define karna\n// interface BMSData {\n//   voltage: number; // Battery voltage\n//   current: number; // Current flow\n//   SOC: number; // Battery ka charge level (State of Charge)\n//   isReceiverCoilDetected: boolean;\n//   isFOD: boolean;// Kya receiver coil detect ho rahi hai ya nahi\n//   isMiss: boolean;\n// }\n// interface ChargingStatus {\n//   isCharging: boolean; // Kya charging chal rahi hai ya nahi\n// }\n// // ✅ WebSocket se aane wale message ka structure define karna\n// interface WebSocketMessage {\n//   type: string; // Message ka type batane ke liye\n//   data: BMSData | ChargingStatus | { message: string }; // Ya to BMS ka data hoga ya charging status\n// }\n// // ✅ WebSocket context ka type define karna\n// interface WebSocketContextType {\n//   sendMessage: (message: unknown) => void; // Message bhejne ka function\n//   connected: boolean; // Kya WebSocket connected hai ya nahi\n//   bmsData: BMSData; // Battery ka data\n//   chargingStatus: ChargingStatus; // Charging ka status\n//   lastMessage: WebSocketMessage | null; // Last message jo WebSocket se aaya\n// }\n// // ✅ WebSocket context create karna\n// const WebSocketContext = createContext<WebSocketContextType | null>(null);\n// // ✅ Default values set karna\n// const defaultBMSData: BMSData = { voltage: 0, current: 0, SOC: 0, isReceiverCoilDetected: false,  isFOD: false, isMiss:false, };\n// const defaultChargingStatus: ChargingStatus = { isCharging: false };\n// // ✅ WebSocket Provider component banaya jisme WebSocket ka connection handle hoga\n// export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n//   const [connected, setConnected] = useState(false); // Connection ka status\n//   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null); // Last received message\n//   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData); // Battery data store karne ke liye\n//   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus); // Charging status store karne ke liye\n//   const ws = useRef<WebSocket | null>(null); // WebSocket connection ka reference\n//   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined); // Auto-reconnect ka timeout store karne ke liye\n//   // ✅ WebSocket se connection establish karne ka function\n//   const connect = useCallback(() => {\n//     if (ws.current) return; // Agar pehle se connected hai to dobara mat connect karo\n//     ws.current = new WebSocket(\"ws://localhost:8080\"); // WebSocket ka connection start karo\n//     ws.current.onopen = () => {\n//       console.log(\"✅ WebSocket Connected\");\n//       setConnected(true); // Connected status ko true kar do\n//       toast.success(\"Connected to charging system\"); // Notification bhejo\n//       if (reconnectTimeout.current) {\n//         clearTimeout(reconnectTimeout.current); // Agar koi reconnect timeout hai to use hata do\n//         reconnectTimeout.current = undefined;\n//       }\n//     };\n//     ws.current.onmessage = (event) => {\n//       console.log(\"🔄 RAW WebSocket Data Received:\", event.data); // Received message ka log dikhana\n//       try {\n//         const data: WebSocketMessage = JSON.parse(event.data); // Message ko JSON me parse karna\n//         console.log(\"✅ Parsed WebSocket Data:\", data);\n//         setLastMessage(data); // Last message ko update karna\n//         switch (data.type) {\n//           case \"bms_data\": // Agar message BMS ka data hai\n//             console.log(\"🔋 BMS Data:\", data.data);\n//             setBMSData(data.data as BMSData); // BMS ka data update kar do\n//             break;\n//           case \"charging_status\": // Agar message charging status ka hai\n//             const chargingData = data.data as ChargingStatus;\n//             console.log(\"⚡ Charging Status:\", JSON.stringify(chargingData, null, 2));\n//             setChargingStatus(chargingData); // Charging status update kar do\n//             if (!chargingData.isCharging) {\n//               toast.info(\"🔴 Charging has been turned OFF.\"); // Charging band hone ka message dikhana\n//             } else {\n//               toast.success(\"⚡ Charging Started!\"); // Charging start hone ka message dikhana\n//             }\n//             break;\n//           case \"test_message\": // Server se koi test message aya\n//             console.log(\"📩 Test Message from Server:\", data.data);\n//             break;\n//           case \"error\": // Agar WebSocket error aayi\n//             toast.error(\"⚠️ WebSocket Error Received\");\n//             break;\n//           default:\n//             console.warn(\"🔍 Unknown WebSocket Message:\", data); // Agar unknown message aaye to warning do\n//         }\n//       } catch (error) {\n//         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n//       }\n//     };\n//     ws.current.onerror = (event) => {\n//       console.error(\"🚨 WebSocket Error:\", event);\n//       toast.error(\"WebSocket connection error\"); // WebSocket error ka notification bhejna\n//     };\n//     ws.current.onclose = () => {\n//       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n//       setConnected(false); // Connection ko false kar do\n//       ws.current = null;\n//       reconnectTimeout.current = setTimeout(() => {\n//         console.log(\"🔄 Attempting to reconnect...\");\n//         connect(); // 3 second baad reconnect karne ka try karna\n//       }, 3000);\n//     };\n//   }, []);\n//   // ✅ Component jab load ho to WebSocket connection start ho\n//   useEffect(() => {\n//     connect();\n//     return () => {\n//       if (ws.current) ws.current.close(); // Component unload hone par connection close kar do\n//       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current); // Timeout clear kar do\n//     };\n//   }, [connect]);\n//   // ✅ WebSocket message bhejne ka function\n//   const sendMessage = (message: unknown) => {\n//     if (ws.current?.readyState === WebSocket.OPEN) {\n//       console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message)); // Message ka log\n//       ws.current.send(JSON.stringify(message)); // WebSocket par message bhejna\n//     } else {\n//       toast.error(\"❌ Not connected to charging system\"); // Agar connection nahi hai to error dikhana\n//     }\n//   };\n//   useEffect(() => {\n//     if (bmsData.isFOD) {\n//       toast.error(\"⚠️ Foreign Object Detected! Charging may be unsafe.\");\n//     }\n//   }, [bmsData.isFOD]);\n//   // ✅ WebSocket provider return kar raha hai jo children ko wrap karega\n//   return (\n//     <WebSocketContext.Provider value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}>\n//       {children}\n//     </WebSocketContext.Provider>\n//   );\n// }\n// // ✅ Custom hook jo WebSocket context ka use karega\n// export const useWebSocket = () => {\n//   const context = useContext(WebSocketContext);\n//   if (!context) {\n//     throw new Error(\"useWebSocket must be used within a WebSocketProvider\"); // Agar context nahi mila to error do\n//   }\n//   return context;\n// };\n// /missalignemnt\n/* __next_internal_client_entry_do_not_use__ WebSocketProvider,useWebSocket auto */ \n\n // Notification dikhane ke liye\n// ✅ WebSocket context create karna\nconst WebSocketContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(null);\n// ✅ Default values set karna\nconst defaultBMSData = {\n    voltage: 0,\n    current: 0,\n    SOC: 0,\n    isReceiverCoilDetected: false,\n    isFOD: false,\n    isMiss: false\n};\nconst defaultChargingStatus = {\n    isCharging: false\n};\n// ✅ WebSocket Provider component banaya jisme WebSocket ka connection handle hoga\nfunction WebSocketProvider({ children }) {\n    const [connected, setConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false); // Connection ka status\n    const [lastMessage, setLastMessage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Last received message\n    const [bmsData, setBMSData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultBMSData); // Battery data store karne ke liye\n    const [chargingStatus, setChargingStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(defaultChargingStatus); // Charging status store karne ke liye\n    const ws = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null); // WebSocket connection ka reference\n    const reconnectTimeout = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(undefined); // Auto-reconnect ka timeout store karne ke liye\n    // ✅ WebSocket se connection establish karne ka function\n    const connect = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)({\n        \"WebSocketProvider.useCallback[connect]\": ()=>{\n            if (ws.current) return; // Agar pehle se connected hai to dobara mat connect karo\n            ws.current = new WebSocket(\"ws://localhost:8080\"); // WebSocket ka connection start karo\n            ws.current.onopen = ({\n                \"WebSocketProvider.useCallback[connect]\": ()=>{\n                    console.log(\"✅ WebSocket Connected\");\n                    setConnected(true); // Connected status ko true kar do\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"Connected to charging system\"); // Notification bhejo\n                    if (reconnectTimeout.current) {\n                        clearTimeout(reconnectTimeout.current); // Agar koi reconnect timeout hai to use hata do\n                        reconnectTimeout.current = undefined;\n                    }\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n            ws.current.onmessage = ({\n                \"WebSocketProvider.useCallback[connect]\": (event)=>{\n                    console.log(\"🔄 RAW WebSocket Data Received:\", event.data); // Received message ka log dikhana\n                    try {\n                        const data = JSON.parse(event.data); // Message ko JSON me parse karna\n                        console.log(\"✅ Parsed WebSocket Data:\", data);\n                        setLastMessage(data); // Last message ko update karna\n                        switch(data.type){\n                            case \"bms_data\":\n                                console.log(\"🔋 BMS Data:\", data.data);\n                                setBMSData(data.data); // BMS ka data update kar do\n                                break;\n                            case \"charging_status\":\n                                const chargingData = data.data;\n                                console.log(\"⚡ Charging Status:\", JSON.stringify(chargingData, null, 2));\n                                setChargingStatus(chargingData); // Charging status update kar do\n                                if (!chargingData.isCharging) {\n                                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.info(\"🔴 Charging has been turned OFF.\"); // Charging band hone ka message dikhana\n                                } else {\n                                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.success(\"⚡ Charging Started!\"); // Charging start hone ka message dikhana\n                                }\n                                break;\n                            case \"test_message\":\n                                console.log(\"📩 Test Message from Server:\", data.data);\n                                break;\n                            case \"error\":\n                                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"⚠️ WebSocket Error Received\");\n                                break;\n                            default:\n                                console.warn(\"🔍 Unknown WebSocket Message:\", data); // Agar unknown message aaye to warning do\n                        }\n                    } catch (error) {\n                        console.error(\"❌ WebSocket Data Parsing Error:\", error);\n                    }\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n            ws.current.onerror = ({\n                \"WebSocketProvider.useCallback[connect]\": (event)=>{\n                    console.error(\"🚨 WebSocket Error:\", event);\n                    sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"WebSocket connection error\"); // WebSocket error ka notification bhejna\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n            ws.current.onclose = ({\n                \"WebSocketProvider.useCallback[connect]\": ()=>{\n                    console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n                    setConnected(false); // Connection ko false kar do\n                    ws.current = null;\n                    reconnectTimeout.current = setTimeout({\n                        \"WebSocketProvider.useCallback[connect]\": ()=>{\n                            console.log(\"🔄 Attempting to reconnect...\");\n                            connect(); // 3 second baad reconnect karne ka try karna\n                        }\n                    }[\"WebSocketProvider.useCallback[connect]\"], 3000);\n                }\n            })[\"WebSocketProvider.useCallback[connect]\"];\n        }\n    }[\"WebSocketProvider.useCallback[connect]\"], []);\n    // ✅ Component jab load ho to WebSocket connection start ho\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketProvider.useEffect\": ()=>{\n            connect();\n            return ({\n                \"WebSocketProvider.useEffect\": ()=>{\n                    if (ws.current) ws.current.close(); // Component unload hone par connection close kar do\n                    if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current); // Timeout clear kar do\n                }\n            })[\"WebSocketProvider.useEffect\"];\n        }\n    }[\"WebSocketProvider.useEffect\"], [\n        connect\n    ]);\n    // ✅ WebSocket message bhejne ka function\n    const sendMessage = (message)=>{\n        if (ws.current?.readyState === WebSocket.OPEN) {\n            console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message)); // Message ka log\n            ws.current.send(JSON.stringify(message)); // WebSocket par message bhejna\n        } else {\n            sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"❌ Not connected to charging system\"); // Agar connection nahi hai to error dikhana\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketProvider.useEffect\": ()=>{\n            if (bmsData.isFOD) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"⚠️ Foreign Object Detected! Charging may be unsafe.\");\n            }\n        }\n    }[\"WebSocketProvider.useEffect\"], [\n        bmsData.isFOD\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"WebSocketProvider.useEffect\": ()=>{\n            if (bmsData.isMiss) {\n                sonner__WEBPACK_IMPORTED_MODULE_2__.toast.error(\"⚠️ Misalignment detected! Please realign the vehicle.\");\n            }\n        }\n    }[\"WebSocketProvider.useEffect\"], [\n        bmsData.isMiss\n    ]);\n    // ✅ WebSocket provider return kar raha hai jo children ko wrap karega\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WebSocketContext.Provider, {\n        value: {\n            sendMessage,\n            connected,\n            bmsData,\n            chargingStatus,\n            lastMessage\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\contexts\\\\WebSocketContext.tsx\",\n        lineNumber: 813,\n        columnNumber: 5\n    }, this);\n}\n// ✅ Custom hook jo WebSocket context ka use karega\nconst useWebSocket = ()=>{\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WebSocketContext);\n    if (!context) {\n        throw new Error(\"useWebSocket must be used within a WebSocketProvider\"); // Agar context nahi mila to error do\n    }\n    return context;\n}; //soc\n // \"use client\";\n // import React, {\n //   createContext,\n //   useContext,\n //   useEffect,\n //   useRef,\n //   useState,\n //   useCallback,\n // } from \"react\";\n // import { toast } from \"sonner\";\n // // Updated BMSData with targetSOC\n // interface BMSData {\n //   voltage: number;\n //   current: number;\n //   SOC: number;\n //   isReceiverCoilDetected: boolean;\n //   isFOD: boolean;\n //   isMiss: boolean;\n //   targetSOC: number; // ✅ New field\n // }\n // interface ChargingStatus {\n //   isCharging: boolean;\n // }\n // interface WebSocketMessage {\n //   type: string;\n //   data: BMSData | ChargingStatus | { message: string };\n // }\n // interface WebSocketContextType {\n //   sendMessage: (message: unknown) => void;\n //   connected: boolean;\n //   bmsData: BMSData;\n //   chargingStatus: ChargingStatus;\n //   lastMessage: WebSocketMessage | null;\n // }\n // const WebSocketContext = createContext<WebSocketContextType | null>(null);\n // // Updated defaultBMSData\n // const defaultBMSData: BMSData = {\n //   voltage: 0,\n //   current: 0,\n //   SOC: 15,\n //   isReceiverCoilDetected: false,\n //   isFOD: false,\n //   isMiss: false,\n //   targetSOC: 100, // ✅ Default value for targetSOC\n // };\n // const defaultChargingStatus: ChargingStatus = {\n //   isCharging: false,\n // };\n // export function WebSocketProvider({ children }: { children: React.ReactNode }) {\n //   const [connected, setConnected] = useState(false);\n //   const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null);\n //   const [bmsData, setBMSData] = useState<BMSData>(defaultBMSData);\n //   const [chargingStatus, setChargingStatus] = useState<ChargingStatus>(defaultChargingStatus);\n //   const ws = useRef<WebSocket | null>(null);\n //   const reconnectTimeout = useRef<ReturnType<typeof setTimeout> | undefined>(undefined);\n //   const connect = useCallback(() => {\n //     if (ws.current) return;\n //     ws.current = new WebSocket(\"ws://localhost:8080\");\n //     ws.current.onopen = () => {\n //       console.log(\"✅ WebSocket Connected\");\n //       setConnected(true);\n //       toast.success(\"Connected to charging system\");\n //       if (reconnectTimeout.current) {\n //         clearTimeout(reconnectTimeout.current);\n //         reconnectTimeout.current = undefined;\n //       }\n //     };\n //     ws.current.onmessage = (event) => {\n //       try {\n //         const data: WebSocketMessage = JSON.parse(event.data);\n //         console.log(\"📨 WebSocket Data:\", data);\n //         setLastMessage(data);\n //         switch (data.type) {\n //           case \"bms_data\": {\n //             const incomingData = data.data as BMSData;\n //             setBMSData((prev) => ({\n //               ...prev,\n //               ...incomingData,\n //               targetSOC: incomingData.targetSOC ?? prev.targetSOC, // ✅ Handle partial data\n //             }));\n //             break;\n //           }\n //           case \"charging_status\": {\n //             const chargingData = data.data as ChargingStatus;\n //             setChargingStatus(chargingData);\n //             toast[chargingData.isCharging ? \"success\" : \"info\"](\n //               chargingData.isCharging ? \"⚡ Charging Started!\" : \"🔴 Charging has been turned OFF.\"\n //             );\n //             break;\n //           }\n //           case \"test_message\":\n //             console.log(\"📩 Test Message from Server:\", data.data);\n //             break;\n //           case \"error\":\n //             toast.error(\"⚠️ WebSocket Error Received\");\n //             break;\n //           default:\n //             console.warn(\"🔍 Unknown WebSocket Message:\", data);\n //         }\n //       } catch (error) {\n //         console.error(\"❌ WebSocket Data Parsing Error:\", error);\n //       }\n //     };\n //     ws.current.onerror = (event) => {\n //       console.error(\"🚨 WebSocket Error:\", event);\n //       toast.error(\"WebSocket connection error\");\n //     };\n //     ws.current.onclose = () => {\n //       console.warn(\"⚠️ WebSocket Disconnected, attempting reconnect...\");\n //       setConnected(false);\n //       ws.current = null;\n //       reconnectTimeout.current = setTimeout(() => {\n //         console.log(\"🔄 Attempting to reconnect...\");\n //         connect();\n //       }, 3000);\n //     };\n //   }, []);\n //   useEffect(() => {\n //     connect();\n //     return () => {\n //       if (ws.current) ws.current.close();\n //       if (reconnectTimeout.current) clearTimeout(reconnectTimeout.current);\n //     };\n //   }, [connect]);\n //   const sendMessage = (message: unknown) => {\n //     if (ws.current?.readyState === WebSocket.OPEN) {\n //       console.log(\"🚀 Sending WebSocket Message:\", JSON.stringify(message));\n //       ws.current.send(JSON.stringify(message));\n //     } else {\n //       toast.error(\"❌ Not connected to charging system\");\n //     }\n //   };\n //   useEffect(() => {\n //     if (bmsData.isFOD) {\n //       toast.error(\"⚠️ Foreign Object Detected! Charging may be unsafe.\");\n //     }\n //   }, [bmsData.isFOD]);\n //   useEffect(() => {\n //     if (bmsData.isMiss) {\n //       toast.error(\"⚠️ Misalignment detected! Please realign the vehicle.\");\n //     }\n //   }, [bmsData.isMiss]);\n //   return (\n //     <WebSocketContext.Provider\n //       value={{ sendMessage, connected, bmsData, chargingStatus, lastMessage }}\n //     >\n //       {children}\n //     </WebSocketContext.Provider>\n //   );\n // }\n // export const useWebSocket = () => {\n //   const context = useContext(WebSocketContext);\n //   if (!context) {\n //     throw new Error(\"useWebSocket must be used within a WebSocketProvider\");\n //   }\n //   return context;\n // };\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./contexts/WebSocketContext.tsx\n");

/***/ }),

/***/ "(ssr)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Home)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/navigation */ \"(ssr)/./node_modules/next/dist/api/navigation.js\");\n// app/page.tsx\n// \"use client\";\n// import {  useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { toast } from \"sonner\";\n// import {\n//   ChevronLeft,\n//   ChevronRight,\n//   Timer,\n//   Zap,\n//   Info,\n//   Home,\n// } from \"lucide-react\";\n// import { Button } from \"../../components/ui/button\";\n// import { Card, CardContent } from \"../../components/ui/card\";\n// import { useChargingStatus } from \"../../hooks/useChargingStatus\";\n// import { useBMSData } from \"../../hooks/useBMSData\";\n// import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from \"../../components/ui/tooltip\"; // Fix path\n// import { useWebSocket } from \"../../contexts/WebSocketContext\";\n// export default function HomePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus } = useChargingStatus();\n//   const [step, setStep] = useState<\"hours\" | \"minutes\">(\"hours\");\n//   const [hours, setHours] = useState(0);\n//   const [minutes, setMinutes] = useState(0);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const { sendMessage } = useWebSocket();\n//   const formatNumber = (num: number) => num.toString().padStart(2, \"0\");\n//   const incrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev < 23 ? prev + 1 : 0));\n//     } else {\n//       setMinutes((prev) => (prev < 59 ? prev + 1 : 0));\n//     }\n//   };\n//   const decrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev > 0 ? prev - 1 : 23));\n//     } else {\n//       setMinutes((prev) => (prev > 0 ? prev - 1 : 59));\n//     }\n//   };\n//   const handleSelect = async () => {\n//     if (hours === 0 && minutes === 0) {\n//       toast.error(\"Please select a valid charging duration\");\n//       return;\n//     }\n//     setIsLoading(true);\n//     try {\n//       const success = await updateChargingStatus(true);\n//       // if (success) {\n//       //   sendMessage({ type: \"SET_TIMER\", data: { hours, minutes } });\n//       //   sendMessage({ type: \"request_charging_status\" });\n// // Correct way to send WebSocket message\n//         toast.success(`Charging scheduled for ${hours}h ${minutes}m`);\n//         router.push(\"/charge\");\n//       // } else {\n//       //   toast.error(\"Failed to initialize charging\");\n//     } catch (error) {\n//       console.error(\"Error initializing charging:\", error);\n//       toast.error(\"Failed to initialize charging\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   const handleQuickSelect = (mins: number) => {\n//     setHours(Math.floor(mins / 60));\n//     setMinutes(mins % 60);\n//   };\n//   const getTotalMinutes = () => hours * 60 + minutes;\n//   return (\n//     <div\n//   className=\"w-full min-h-screen bg-transparent font-sans pt-7 px-4 sm:px-6 md:px-8 flex flex-col items-center justify-center\"\n//   style={{\n//     backgroundImage: \"url('/lib/main-bg.png')\",\n//     backgroundSize: \"cover\",\n//     backgroundPosition: \"center\",\n//   }}\n// >\n//       {/* Home Button */}\n//       <Button className=\"mb-6 text-lg sm:text-xl bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded-full shadow-lg transition-all duration-200 flex items-center\">\n//         <Home className=\"w-5 h-5 mr-2\" />\n//         Home\n//       </Button>\n//       {/* Main Card */}\n//       <div className=\"flex justify-center items-center w-full max-w-3xl px-4 sm:px-8 md:px-12\">\n//         <Card className=\"w-full bg-transparent border-none\">\n//           <CardContent className=\"border-none p-6 sm:p-8\">\n//             <div className=\"flex flex-col items-center space-y-6 sm:space-y-8\">\n//               {/* Header */}\n//               <div className=\"flex items-center space-x-3\">\n//                 <Timer className=\"w-6 h-6 sm:w-8 sm:h-8 text-red-500\" />\n//                 <span className=\"text-lg sm:text-xl font-semibold text-white\">\n//                   Set Charging Duration\n//                 </span>\n//                 <TooltipProvider>\n//                   <Tooltip>\n//                     <TooltipTrigger>\n//                       <Info className=\"w-5 h-5 text-neutral-400\" />\n//                     </TooltipTrigger>\n//                     <TooltipContent>\n//                       <p>Select how long you want to charge your vehicle</p>\n//                     </TooltipContent>\n//                   </Tooltip>\n//                 </TooltipProvider>\n//               </div>\n//               {/* Quick Select Buttons */}\n//               <div className=\"flex gap-2 w-full justify-center flex-wrap\">\n//                 {[1, 5, 20, 60].map((mins) => (\n//                   <Button\n//                     key={mins}\n//                     variant=\"outline\"\n//                     size=\"sm\"\n//                     onClick={() => handleQuickSelect(mins)}\n//                     className={`px-3 py-1 text-sm sm:text-base ${\n//                       getTotalMinutes() === mins\n//                         ? \"bg-red-500 text-white border-red-500\"\n//                         : \"text-neutral-400 hover:text-white\"\n//                     }`}\n//                   >\n//                     {mins >= 60 ? `${Math.floor(mins / 60)}h` : `${mins}m`}\n//                   </Button>\n//                 ))}\n//               </div>\n//               {/* Time Selection */}\n//               <div className=\"flex items-center justify-center w-full space-x-6 sm:space-x-8\">\n//                 <Button\n//                   variant=\"outline\"\n//                   className=\"text-black hover:text-white hover:bg-neutral-950 transition-all duration-200 transform hover:scale-110 p-2 sm:p-4\"\n//                   onClick={() => decrementValue(step)}\n//                 >\n//                   <ChevronLeft className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//                 <div className=\"flex items-baseline space-x-3\">\n//                   <div\n//                     className={`text-5xl sm:text-7xl font-bold transition-all duration-300 cursor-pointer ${\n//                       step === \"hours\"\n//                         ? \"text-red-500 scale-110\"\n//                         : \"text-white scale-100 hover:text-red-400\"\n//                     }`}\n//                     onClick={() => setStep(\"hours\")}\n//                   >\n//                     {formatNumber(hours)}\n//                   </div>\n//                   <div className=\"text-5xl sm:text-7xl font-bold text-white\">:</div>\n//                   <div\n//                     className={`text-5xl sm:text-7xl font-bold transition-all duration-300 cursor-pointer ${\n//                       step === \"minutes\"\n//                         ? \"text-red-500 scale-110\"\n//                         : \"text-white scale-100 hover:text-red-400\"\n//                     }`}\n//                     onClick={() => setStep(\"minutes\")}\n//                   >\n//                     {formatNumber(minutes)}\n//                   </div>\n//                 </div>\n//                 <Button\n//                   variant=\"outline\"\n//                   className=\"text-black hover:text-white hover:bg-neutral-950 transition-all duration-200 transform hover:scale-110 p-2 sm:p-4\"\n//                   onClick={() => incrementValue(step)}\n//                 >\n//                   <ChevronRight className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//               </div>\n//               {/* Initialize Button */}\n//               <Button\n//                 className=\"w-36 sm:w-40 h-10 sm:h-12 text-lg bg-red-500 hover:bg-red-600 text-white font-semibold transition-all duration-200 hover:scale-105 disabled:opacity-50\"\n//                 onClick={handleSelect}\n//                 disabled={isLoading || (hours === 0 && minutes === 0)}\n//               >\n//                 {isLoading ? \"Loading...\" : <><Zap className=\"w-5 h-5 mr-2\" /> Initialize</>}\n//               </Button>\n//             </div>\n//           </CardContent>\n//         </Card>\n//       </div>\n//     </div>\n//   );\n// };\n// \"use client\";\n// import { useState } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// import { toast } from \"sonner\";\n// import {\n//   ChevronLeft,\n//   ChevronRight,\n//   Timer,\n//   Zap,\n//   Info,\n//   Home,\n// } from \"lucide-react\";\n// import { Button } from \"../../components/ui/button\";\n// import { Card, CardContent } from \"../../components/ui/card\";\n// import { useChargingStatus } from \"../../hooks/useChargingStatus\";\n// import { TooltipProvider, Tooltip, TooltipTrigger, TooltipContent } from \"../../components/ui/tooltip\";\n// export default function HomePage() {\n//   const router = useRouter();\n//   const { updateChargingStatus } = useChargingStatus();\n//   const [step, setStep] = useState<\"hours\" | \"minutes\">(\"hours\");\n//   const [hours, setHours] = useState(0);\n//   const [minutes, setMinutes] = useState(0);\n//   const [isLoading, setIsLoading] = useState(false);\n//   const formatNumber = (num: number) => num.toString().padStart(2, \"0\");\n//   const incrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev < 23 ? prev + 1 : 0));\n//     } else {\n//       setMinutes((prev) => (prev < 59 ? prev + 1 : 0));\n//     }\n//   };\n//   const decrementValue = (type: \"hours\" | \"minutes\") => {\n//     if (type === \"hours\") {\n//       setHours((prev) => (prev > 0 ? prev - 1 : 23));\n//     } else {\n//       setMinutes((prev) => (prev > 0 ? prev - 1 : 59));\n//     }\n//   };\n//   const handleSelect = async () => {\n//     if (hours === 0 && minutes === 0) {\n//       toast.error(\"Please select a valid charging duration\");\n//       return;\n//     }\n//     setIsLoading(true);\n//     try {\n//       const success = await updateChargingStatus(true);\n//       if (success) {\n//         toast.success(`Charging scheduled for ${hours}h ${minutes}m`);\n//         router.push(\"/charge\");\n//       } else {\n//         toast.error(\"Failed to initialize charging\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error initializing charging:\", error);\n//       toast.error(\"Failed to initialize charging\");\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n//   const handleQuickSelect = (mins: number) => {\n//     setHours(Math.floor(mins / 60));\n//     setMinutes(mins % 60);\n//   };\n//   const getTotalMinutes = () => hours * 60 + minutes;\n//   return (\n//     <div className=\"w-full min-h-screen bg-transparent font-sans pt-7 px-4 sm:px-6 md:px-8 flex flex-col items-center justify-center\"\n//       style={{ backgroundImage: \"url('/lib/main-bg.png')\", backgroundSize: \"cover\", backgroundPosition: \"center\" }}>\n//       <Button className=\"mb-6 text-lg sm:text-xl bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded-full shadow-lg transition-all duration-200 flex items-center\">\n//         <Home className=\"w-5 h-5 mr-2\" />\n//         Home\n//       </Button>\n//       <div className=\"flex justify-center items-center w-full max-w-3xl px-4 sm:px-8 md:px-12\">\n//         <Card className=\"w-full bg-transparent border-none\">\n//           <CardContent className=\"border-none p-6 sm:p-8\">\n//             <div className=\"flex flex-col items-center space-y-6 sm:space-y-8\">\n//               <div className=\"flex items-center space-x-3\">\n//                 <Timer className=\"w-6 h-6 sm:w-8 sm:h-8 text-red-500\" />\n//                 <span className=\"text-lg sm:text-xl font-semibold text-white\">Set Charging Duration</span>\n//                 <TooltipProvider>\n//                   <Tooltip>\n//                     <TooltipTrigger>\n//                       <Info className=\"w-5 h-5 text-neutral-400\" />\n//                     </TooltipTrigger>\n//                     <TooltipContent>\n//                       <p>Select how long you want to charge your vehicle</p>\n//                     </TooltipContent>\n//                   </Tooltip>\n//                 </TooltipProvider>\n//               </div>\n//               <div className=\"flex gap-2 w-full justify-center flex-wrap\">\n//                 {[1, 5, 20, 60].map((mins) => (\n//                   <Button key={mins} variant=\"outline\" size=\"sm\" onClick={() => handleQuickSelect(mins)}\n//                     className={`px-3 py-1 text-sm sm:text-base ${getTotalMinutes() === mins ? \"bg-red-500 text-white border-red-500\" : \"text-neutral-400 hover:text-white\"}`}>\n//                     {mins >= 60 ? `${Math.floor(mins / 60)}h` : `${mins}m`}\n//                   </Button>\n//                 ))}\n//               </div>\n//               <div className=\"flex items-center justify-center w-full space-x-6 sm:space-x-8\">\n//                 <Button variant=\"outline\" onClick={() => decrementValue(step)}>\n//                   <ChevronLeft className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//                 <div className=\"flex items-baseline space-x-3\">\n//                   <div onClick={() => setStep(\"hours\")} className={`text-5xl sm:text-7xl font-bold ${step === \"hours\" ? \"text-red-500 scale-110\" : \"text-white hover:text-red-400\"}`}>{formatNumber(hours)}</div>\n//                   <div className=\"text-5xl sm:text-7xl font-bold text-white\">:</div>\n//                   <div onClick={() => setStep(\"minutes\")} className={`text-5xl sm:text-7xl font-bold ${step === \"minutes\" ? \"text-red-500 scale-110\" : \"text-white hover:text-red-400\"}`}>{formatNumber(minutes)}</div>\n//                 </div>\n//                 <Button variant=\"outline\" onClick={() => incrementValue(step)}>\n//                   <ChevronRight className=\"w-12 h-12 sm:w-16 sm:h-16 stroke-2\" />\n//                 </Button>\n//               </div>\n//               <Button onClick={handleSelect} disabled={isLoading || (hours === 0 && minutes === 0)} className=\"w-36 sm:w-40 h-10 sm:h-12 text-lg bg-red-500 hover:bg-red-600 text-white font-semibold transition-all duration-200 hover:scale-105 disabled:opacity-50\">\n//                 {isLoading ? \"Loading...\" : <><Zap className=\"w-5 h-5 mr-2\" /> Initialize</>}\n//               </Button>\n//             </div>\n//           </CardContent>\n//         </Card>\n//       </div>\n//     </div>\n//   );\n// }\n// \"use client\";\n// import { useEffect, useRef } from \"react\";\n// import { useRouter } from \"next/navigation\";\n// export default function Home() {\n//   const videoRef = useRef<HTMLVideoElement>(null);\n//   const router = useRouter();\n//   const wsRef = useRef<WebSocket | null>(null);\n//   useEffect(() => {\n//     const video = videoRef.current;\n//     const handleVideoEnd = () => {\n//       router.push(\"/connect\");\n//     };\n//     if (video) {\n//       video.addEventListener(\"ended\", handleVideoEnd);\n//     }\n//     // ✅ Set up WebSocket connection\n//     wsRef.current = new WebSocket(\"ws://localhost:8080\");\n//     wsRef.current.onopen = () => {\n//       console.log(\"WebSocket connected\");\n//     };\n//     wsRef.current.onmessage = (event) => {\n//       try {\n//         const data = JSON.parse(event.data);\n//         console.log(\"WebSocket Message:\", data);\n//         if (data?.redirectTo === \"set-time\") {\n//           router.push(\"/connect\");\n//         }\n//       } catch (error) {\n//         console.error(\"WebSocket Error:\", error);\n//       }\n//     };\n//     wsRef.current.onerror = (error) => {\n//       console.error(\"WebSocket Error:\", error);\n//     };\n//     wsRef.current.onclose = () => {\n//       console.log(\"WebSocket disconnected\");\n//     };\n//     return () => {\n//       // Cleanup: Remove event listener and close WebSocket\n//       if (video) {\n//         video.removeEventListener(\"ended\", handleVideoEnd);\n//       }\n//       wsRef.current?.close();\n//     };\n//   }, [router]);\n//   return (\n//     <div className=\"relative w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans\">\n//       <video\n//         ref={videoRef}\n//         className=\"absolute top-0 left-0 w-full h-full object-cover z-50\"\n//         autoPlay\n//         muted\n//         playsInline\n//       >\n//         <source src=\"/intro.mp4\" type=\"video/mp4\" />\n//         Your browser does not support the video tag.\n//       </video>\n//       {/* Fallback background */}\n//       <div\n//         className=\"absolute top-0 left-0 w-full h-full z-[-1]\"\n//         style={{\n//           backgroundImage: \"url(/connect-bg.png)\",\n//           backgroundSize: \"cover\",\n//           backgroundPosition: \"center\",\n//         }}\n//       />\n//     </div>\n//   );\n// }\n////ui\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\nfunction Home() {\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const router = (0,next_navigation__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    const wsRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"Home.useEffect\": ()=>{\n            const video = videoRef.current;\n            const handleVideoEnd = {\n                \"Home.useEffect.handleVideoEnd\": ()=>{\n                    router.push(\"/connect\");\n                }\n            }[\"Home.useEffect.handleVideoEnd\"];\n            if (video) {\n                video.addEventListener(\"ended\", handleVideoEnd);\n            }\n            // ✅ Set up WebSocket connection\n            wsRef.current = new WebSocket(\"ws://localhost:8080\");\n            wsRef.current.onopen = ({\n                \"Home.useEffect\": ()=>{\n                // console.log(\"WebSocket connected\");\n                }\n            })[\"Home.useEffect\"];\n            wsRef.current.onmessage = ({\n                \"Home.useEffect\": (event)=>{\n                    try {\n                        const data = JSON.parse(event.data);\n                        // console.log(\"WebSocket Message:\", data);\n                        if (data?.redirectTo === \"set-time\") {\n                            router.push(\"/connect\");\n                        }\n                    } catch (error) {\n                        console.error(\"WebSocket Error:\", error);\n                    }\n                }\n            })[\"Home.useEffect\"];\n            wsRef.current.onerror = ({\n                \"Home.useEffect\": (error)=>{\n                    console.error(\"WebSocket Error:\", error);\n                }\n            })[\"Home.useEffect\"];\n            wsRef.current.onclose = ({\n                \"Home.useEffect\": ()=>{\n                    console.log(\"WebSocket disconnected\");\n                }\n            })[\"Home.useEffect\"];\n            return ({\n                \"Home.useEffect\": ()=>{\n                    // Cleanup: Remove event listener and close WebSocket\n                    if (video) {\n                        video.removeEventListener(\"ended\", handleVideoEnd);\n                    }\n                    wsRef.current?.close();\n                }\n            })[\"Home.useEffect\"];\n        }\n    }[\"Home.useEffect\"], [\n        router\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"relative w-[768px] h-[1024px] overflow-hidden bg-[#2A2D32] font-sans\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                ref: videoRef,\n                className: \"absolute top-0 left-0 w-full h-full object-cover z-50\",\n                autoPlay: true,\n                muted: true,\n                playsInline: true,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                        src: \"/intro.mp4\",\n                        type: \"video/mp4\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\page.tsx\",\n                        lineNumber: 486,\n                        columnNumber: 9\n                    }, this),\n                    \"Your browser does not support the video tag.\"\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 479,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"absolute top-0 left-0 w-full h-full z-[-1]\",\n                style: {\n                    backgroundImage: \"url(/connect-bg.png)\",\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\"\n                }\n            }, void 0, false, {\n                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\page.tsx\",\n                lineNumber: 491,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\page.tsx\",\n        lineNumber: 478,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./src/app/page.tsx\n");

/***/ }),

/***/ "(rsc)/./src/styles/globals.css":
/*!********************************!*\
  !*** ./src/styles/globals.css ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"c7b59ee23fed\");\nif (false) {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvc3R5bGVzL2dsb2JhbHMuY3NzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxpRUFBZSxjQUFjO0FBQzdCLElBQUksS0FBVSxFQUFFLEVBQXVCIiwic291cmNlcyI6WyJEOlxcY29kaW5nXFxkYXNoIGR5bmFtaWNzXFxkYXNoYm9hcmRzXFxMb2NhbGJhY2tlbmRcXGNoYXJnaW5nLXN5c3RlbVxcc3JjXFxzdHlsZXNcXGdsb2JhbHMuY3NzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IFwiYzdiNTllZTIzZmVkXCJcbmlmIChtb2R1bGUuaG90KSB7IG1vZHVsZS5ob3QuYWNjZXB0KCkgfVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/styles/globals.css\n");

/***/ }),

/***/ "(rsc)/./contexts/WebSocketContext.tsx":
/*!***************************************!*\
  !*** ./contexts/WebSocketContext.tsx ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebSocketProvider: () => (/* binding */ WebSocketProvider),\n/* harmony export */   useWebSocket: () => (/* binding */ useWebSocket)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js\");\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);\n\nconst WebSocketProvider = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call WebSocketProvider() from the server but WebSocketProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\contexts\\\\WebSocketContext.tsx\",\n\"WebSocketProvider\",\n);const useWebSocket = (0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call useWebSocket() from the server but useWebSocket is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\contexts\\\\WebSocketContext.tsx\",\n\"useWebSocket\",\n);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./contexts/WebSocketContext.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/layout.tsx":
/*!****************************!*\
  !*** ./src/app/layout.tsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RootLayout)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var sonner__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sonner */ \"(rsc)/./node_modules/sonner/dist/index.mjs\");\n/* harmony import */ var _contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../contexts/WebSocketContext */ \"(rsc)/./contexts/WebSocketContext.tsx\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../styles/globals.css */ \"(rsc)/./src/styles/globals.css\");\n\n\n\n // Ensure correct path\n// import localFont from \"next/font/local\";\nfunction RootLayout({ children }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"html\", {\n        lang: \"en\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"body\", {\n            className: \"bg-gray-50 text-gray-900 min-h-screen flex flex-col\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_contexts_WebSocketContext__WEBPACK_IMPORTED_MODULE_2__.WebSocketProvider, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"max-h-screen w-full bg-black flex items-center justify-center\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"relative w-[768px] h-[1024px] overflow-hidden\",\n                            children: children\n                        }, void 0, false, {\n                            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                            lineNumber: 19,\n                            columnNumber: 11\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 18,\n                        columnNumber: 11\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(sonner__WEBPACK_IMPORTED_MODULE_1__.Toaster, {}, void 0, false, {\n                        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                        lineNumber: 24,\n                        columnNumber: 11\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n                lineNumber: 16,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n            lineNumber: 15,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\layout.tsx\",\n        lineNumber: 14,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2xheW91dC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUVpQztBQUNtQztBQUNyQyxDQUFDLHNCQUFzQjtBQUN0RCwyQ0FBMkM7QUFFNUIsU0FBU0UsV0FBVyxFQUNqQ0MsUUFBUSxFQUdUO0lBQ0MscUJBQ0UsOERBQUNDO1FBQUtDLE1BQUs7a0JBQ1QsNEVBQUNDO1lBQUtDLFdBQVU7c0JBQ2QsNEVBQUNOLHlFQUFpQkE7O2tDQUVoQiw4REFBQ087d0JBQUlELFdBQVU7a0NBQ2YsNEVBQUNDOzRCQUFJRCxXQUFVO3NDQUVaSjs7Ozs7Ozs7Ozs7a0NBR0gsOERBQUNILDJDQUFPQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS2xCIiwic291cmNlcyI6WyJEOlxcY29kaW5nXFxkYXNoIGR5bmFtaWNzXFxkYXNoYm9hcmRzXFxMb2NhbGJhY2tlbmRcXGNoYXJnaW5nLXN5c3RlbVxcc3JjXFxhcHBcXGxheW91dC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5pbXBvcnQgeyBUb2FzdGVyIH0gZnJvbSBcInNvbm5lclwiO1xyXG5pbXBvcnQgeyBXZWJTb2NrZXRQcm92aWRlciB9IGZyb20gXCIuLi8uLi9jb250ZXh0cy9XZWJTb2NrZXRDb250ZXh0XCI7XHJcbmltcG9ydCBcIi4uL3N0eWxlcy9nbG9iYWxzLmNzc1wiOyAvLyBFbnN1cmUgY29ycmVjdCBwYXRoXHJcbi8vIGltcG9ydCBsb2NhbEZvbnQgZnJvbSBcIm5leHQvZm9udC9sb2NhbFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUm9vdExheW91dCh7XHJcbiAgY2hpbGRyZW4sXHJcbn06IHtcclxuICBjaGlsZHJlbjogUmVhY3QuUmVhY3ROb2RlO1xyXG59KSB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxodG1sIGxhbmc9XCJlblwiPlxyXG4gICAgICA8Ym9keSBjbGFzc05hbWU9XCJiZy1ncmF5LTUwIHRleHQtZ3JheS05MDAgbWluLWgtc2NyZWVuIGZsZXggZmxleC1jb2xcIj5cclxuICAgICAgICA8V2ViU29ja2V0UHJvdmlkZXI+XHJcbiAgICAgICAgICB7LyogTWFpbiBjb250YWluZXIgZm9yIHJlc3BvbnNpdmVuZXNzICovfVxyXG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJtYXgtaC1zY3JlZW4gdy1mdWxsIGJnLWJsYWNrIGZsZXggaXRlbXMtY2VudGVyIGp1c3RpZnktY2VudGVyXCI+XHJcbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJlbGF0aXZlIHctWzc2OHB4XSBoLVsxMDI0cHhdIG92ZXJmbG93LWhpZGRlblwiPlxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAge2NoaWxkcmVufVxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8VG9hc3RlciAvPlxyXG4gICAgICAgIDwvV2ViU29ja2V0UHJvdmlkZXI+XHJcbiAgICAgIDwvYm9keT5cclxuICAgIDwvaHRtbD5cclxuICApO1xyXG59XHJcbiJdLCJuYW1lcyI6WyJUb2FzdGVyIiwiV2ViU29ja2V0UHJvdmlkZXIiLCJSb290TGF5b3V0IiwiY2hpbGRyZW4iLCJodG1sIiwibGFuZyIsImJvZHkiLCJjbGFzc05hbWUiLCJkaXYiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/layout.tsx\n");

/***/ }),

/***/ "(rsc)/./src/app/page.tsx":
/*!**************************!*\
  !*** ./src/app/page.tsx ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react-server-dom-webpack/server.edge */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-page/vendored/rsc/react-server-dom-webpack-server-edge.js\");\n/* harmony import */ var react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,react_server_dom_webpack_server_edge__WEBPACK_IMPORTED_MODULE_0__.registerClientReference)(\nfunction() { throw new Error(\"Attempted to call the default export of \\\"D:\\\\\\\\coding\\\\\\\\dash dynamics\\\\\\\\dashboards\\\\\\\\Localbackend\\\\\\\\charging-system\\\\\\\\src\\\\\\\\app\\\\\\\\page.tsx\\\" from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n\"D:\\\\coding\\\\dash dynamics\\\\dashboards\\\\Localbackend\\\\charging-system\\\\src\\\\app\\\\page.tsx\",\n\"default\",\n));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/page.tsx\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@swc","vendor-chunks/sonner"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fpage&page=%2Fpage&appPaths=%2Fpage&pagePath=private-next-app-dir%2Fpage.tsx&appDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=D%3A%5Ccoding%5Cdash%20dynamics%5Cdashboards%5CLocalbackend%5Ccharging-system&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();